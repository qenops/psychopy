ApertureComponent.order:['name', 'size', 'pos']
ApertureComponent.durationEstim.default:
ApertureComponent.durationEstim.allowedTypes:[]
ApertureComponent.durationEstim.allowedUpdates:None
ApertureComponent.durationEstim.allowedVals:[]
ApertureComponent.durationEstim.categ:Basic
ApertureComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
ApertureComponent.durationEstim.label:Expected duration (s)
ApertureComponent.durationEstim.readOnly:False
ApertureComponent.durationEstim.staticUpdater:None
ApertureComponent.durationEstim.updates:None
ApertureComponent.durationEstim.val:
ApertureComponent.durationEstim.valType:code
ApertureComponent.name.default:aperture
ApertureComponent.name.allowedTypes:[]
ApertureComponent.name.allowedUpdates:None
ApertureComponent.name.allowedVals:[]
ApertureComponent.name.categ:Basic
ApertureComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
ApertureComponent.name.label:Name
ApertureComponent.name.readOnly:False
ApertureComponent.name.staticUpdater:None
ApertureComponent.name.val:aperture
ApertureComponent.name.valType:code
ApertureComponent.pos.default:(0, 0)
ApertureComponent.pos.allowedTypes:[]
ApertureComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ApertureComponent.pos.allowedVals:[]
ApertureComponent.pos.categ:Basic
ApertureComponent.pos.hint:Where is the aperture centred?
ApertureComponent.pos.label:Position [x,y]
ApertureComponent.pos.readOnly:False
ApertureComponent.pos.staticUpdater:None
ApertureComponent.pos.updates:constant
ApertureComponent.pos.val:(0, 0)
ApertureComponent.pos.valType:code
ApertureComponent.size.default:1
ApertureComponent.size.allowedTypes:[]
ApertureComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ApertureComponent.size.allowedVals:[]
ApertureComponent.size.categ:Basic
ApertureComponent.size.hint:How big is the aperture? (a single number for diameter)
ApertureComponent.size.label:Size
ApertureComponent.size.readOnly:False
ApertureComponent.size.staticUpdater:None
ApertureComponent.size.updates:constant
ApertureComponent.size.val:1
ApertureComponent.size.valType:code
ApertureComponent.startEstim.default:
ApertureComponent.startEstim.allowedTypes:[]
ApertureComponent.startEstim.allowedUpdates:None
ApertureComponent.startEstim.allowedVals:[]
ApertureComponent.startEstim.categ:Basic
ApertureComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
ApertureComponent.startEstim.label:Expected start (s)
ApertureComponent.startEstim.readOnly:False
ApertureComponent.startEstim.staticUpdater:None
ApertureComponent.startEstim.updates:None
ApertureComponent.startEstim.val:
ApertureComponent.startEstim.valType:code
ApertureComponent.startType.default:'time (s)'
ApertureComponent.startType.allowedTypes:[]
ApertureComponent.startType.allowedUpdates:None
ApertureComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
ApertureComponent.startType.categ:Basic
ApertureComponent.startType.hint:How do you want to define your start point?
ApertureComponent.startType.label:start type
ApertureComponent.startType.readOnly:False
ApertureComponent.startType.staticUpdater:None
ApertureComponent.startType.updates:None
ApertureComponent.startType.val:time (s)
ApertureComponent.startType.valType:str
ApertureComponent.startVal.default:0.0
ApertureComponent.startVal.allowedTypes:[]
ApertureComponent.startVal.allowedUpdates:None
ApertureComponent.startVal.allowedVals:[]
ApertureComponent.startVal.categ:Basic
ApertureComponent.startVal.hint:When does the component start?
ApertureComponent.startVal.label:Start
ApertureComponent.startVal.readOnly:False
ApertureComponent.startVal.staticUpdater:None
ApertureComponent.startVal.updates:None
ApertureComponent.startVal.val:0.0
ApertureComponent.startVal.valType:code
ApertureComponent.stopType.default:'duration (s)'
ApertureComponent.stopType.allowedTypes:[]
ApertureComponent.stopType.allowedUpdates:None
ApertureComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
ApertureComponent.stopType.categ:Basic
ApertureComponent.stopType.hint:How do you want to define your end point?
ApertureComponent.stopType.label:stop type
ApertureComponent.stopType.readOnly:False
ApertureComponent.stopType.staticUpdater:None
ApertureComponent.stopType.updates:None
ApertureComponent.stopType.val:duration (s)
ApertureComponent.stopType.valType:str
ApertureComponent.stopVal.default:1.0
ApertureComponent.stopVal.allowedTypes:[]
ApertureComponent.stopVal.allowedUpdates:[]
ApertureComponent.stopVal.allowedVals:[]
ApertureComponent.stopVal.categ:Basic
ApertureComponent.stopVal.hint:When does the component end? (blank is endless)
ApertureComponent.stopVal.label:Stop
ApertureComponent.stopVal.readOnly:False
ApertureComponent.stopVal.staticUpdater:None
ApertureComponent.stopVal.updates:constant
ApertureComponent.stopVal.val:1.0
ApertureComponent.stopVal.valType:code
ApertureComponent.units.default:'norm'
ApertureComponent.units.allowedTypes:[]
ApertureComponent.units.allowedUpdates:None
ApertureComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
ApertureComponent.units.categ:Basic
ApertureComponent.units.hint:Units of dimensions for this stimulus
ApertureComponent.units.label:Units
ApertureComponent.units.readOnly:False
ApertureComponent.units.staticUpdater:None
ApertureComponent.units.updates:None
ApertureComponent.units.val:norm
ApertureComponent.units.valType:str
CodeComponent.order:['name', 'Code Type', 'Begin Experiment', 'Begin Routine', 'Each Frame', 'End Routine', 'End Experiment', 'Begin JS Experiment', 'Begin JS Routine', 'Each JS Frame', 'End JS Routine', 'End JS Experiment']
CodeComponent.Begin Experiment.default:
CodeComponent.Begin Experiment.allowedTypes:[]
CodeComponent.Begin Experiment.allowedUpdates:[]
CodeComponent.Begin Experiment.allowedVals:[]
CodeComponent.Begin Experiment.categ:Basic
CodeComponent.Begin Experiment.hint:Code at the start of the experiment (initialization); right-click checks syntax
CodeComponent.Begin Experiment.label:Begin Experiment
CodeComponent.Begin Experiment.readOnly:False
CodeComponent.Begin Experiment.staticUpdater:None
CodeComponent.Begin Experiment.updates:constant
CodeComponent.Begin Experiment.val:
CodeComponent.Begin Experiment.valType:extendedCode
CodeComponent.Begin JS Experiment.default:
CodeComponent.Begin JS Experiment.allowedTypes:[]
CodeComponent.Begin JS Experiment.allowedUpdates:[]
CodeComponent.Begin JS Experiment.allowedVals:[]
CodeComponent.Begin JS Experiment.categ:Basic
CodeComponent.Begin JS Experiment.hint:Code at the start of the experiment (initialization); right-click checks syntax
CodeComponent.Begin JS Experiment.label:Begin JS Experiment
CodeComponent.Begin JS Experiment.readOnly:False
CodeComponent.Begin JS Experiment.staticUpdater:None
CodeComponent.Begin JS Experiment.updates:constant
CodeComponent.Begin JS Experiment.val:
CodeComponent.Begin JS Experiment.valType:extendedCode
CodeComponent.Begin JS Routine.default:
CodeComponent.Begin JS Routine.allowedTypes:[]
CodeComponent.Begin JS Routine.allowedUpdates:[]
CodeComponent.Begin JS Routine.allowedVals:[]
CodeComponent.Begin JS Routine.categ:Basic
CodeComponent.Begin JS Routine.hint:Code to be run at the start of each repeat of the Routine (e.g. each trial); right-click checks syntax
CodeComponent.Begin JS Routine.label:Begin JS Routine
CodeComponent.Begin JS Routine.readOnly:False
CodeComponent.Begin JS Routine.staticUpdater:None
CodeComponent.Begin JS Routine.updates:constant
CodeComponent.Begin JS Routine.val:
CodeComponent.Begin JS Routine.valType:extendedCode
CodeComponent.Begin Routine.default:
CodeComponent.Begin Routine.allowedTypes:[]
CodeComponent.Begin Routine.allowedUpdates:[]
CodeComponent.Begin Routine.allowedVals:[]
CodeComponent.Begin Routine.categ:Basic
CodeComponent.Begin Routine.hint:Code to be run at the start of each repeat of the Routine (e.g. each trial); right-click checks syntax
CodeComponent.Begin Routine.label:Begin Routine
CodeComponent.Begin Routine.readOnly:False
CodeComponent.Begin Routine.staticUpdater:None
CodeComponent.Begin Routine.updates:constant
CodeComponent.Begin Routine.val:
CodeComponent.Begin Routine.valType:extendedCode
CodeComponent.Code Type.default:'Py'
CodeComponent.Code Type.allowedTypes:[]
CodeComponent.Code Type.allowedUpdates:None
CodeComponent.Code Type.allowedVals:['Py', 'JS', 'Both']
CodeComponent.Code Type.categ:Basic
CodeComponent.Code Type.hint:Display Python or JS Code
CodeComponent.Code Type.label:Code Type
CodeComponent.Code Type.readOnly:False
CodeComponent.Code Type.staticUpdater:None
CodeComponent.Code Type.updates:None
CodeComponent.Code Type.val:Py
CodeComponent.Code Type.valType:str
CodeComponent.Each Frame.default:
CodeComponent.Each Frame.allowedTypes:[]
CodeComponent.Each Frame.allowedUpdates:[]
CodeComponent.Each Frame.allowedVals:[]
CodeComponent.Each Frame.categ:Basic
CodeComponent.Each Frame.hint:Code to be run on every video frame during for the duration of this Routine; right-click checks syntax
CodeComponent.Each Frame.label:Each Frame
CodeComponent.Each Frame.readOnly:False
CodeComponent.Each Frame.staticUpdater:None
CodeComponent.Each Frame.updates:constant
CodeComponent.Each Frame.val:
CodeComponent.Each Frame.valType:extendedCode
CodeComponent.Each JS Frame.default:
CodeComponent.Each JS Frame.allowedTypes:[]
CodeComponent.Each JS Frame.allowedUpdates:[]
CodeComponent.Each JS Frame.allowedVals:[]
CodeComponent.Each JS Frame.categ:Basic
CodeComponent.Each JS Frame.hint:Code to be run on every video frame during for the duration of this Routine; right-click checks syntax
CodeComponent.Each JS Frame.label:Each JS Frame
CodeComponent.Each JS Frame.readOnly:False
CodeComponent.Each JS Frame.staticUpdater:None
CodeComponent.Each JS Frame.updates:constant
CodeComponent.Each JS Frame.val:
CodeComponent.Each JS Frame.valType:extendedCode
CodeComponent.End Experiment.default:
CodeComponent.End Experiment.allowedTypes:[]
CodeComponent.End Experiment.allowedUpdates:[]
CodeComponent.End Experiment.allowedVals:[]
CodeComponent.End Experiment.categ:Basic
CodeComponent.End Experiment.hint:Code at the end of the entire experiment (e.g. saving files, resetting computer); right-click checks syntax
CodeComponent.End Experiment.label:End Experiment
CodeComponent.End Experiment.readOnly:False
CodeComponent.End Experiment.staticUpdater:None
CodeComponent.End Experiment.updates:constant
CodeComponent.End Experiment.val:
CodeComponent.End Experiment.valType:extendedCode
CodeComponent.End JS Experiment.default:
CodeComponent.End JS Experiment.allowedTypes:[]
CodeComponent.End JS Experiment.allowedUpdates:[]
CodeComponent.End JS Experiment.allowedVals:[]
CodeComponent.End JS Experiment.categ:Basic
CodeComponent.End JS Experiment.hint:Code at the end of the entire experiment (e.g. saving files, resetting computer); right-click checks syntax
CodeComponent.End JS Experiment.label:End JS Experiment
CodeComponent.End JS Experiment.readOnly:False
CodeComponent.End JS Experiment.staticUpdater:None
CodeComponent.End JS Experiment.updates:constant
CodeComponent.End JS Experiment.val:
CodeComponent.End JS Experiment.valType:extendedCode
CodeComponent.End JS Routine.default:
CodeComponent.End JS Routine.allowedTypes:[]
CodeComponent.End JS Routine.allowedUpdates:[]
CodeComponent.End JS Routine.allowedVals:[]
CodeComponent.End JS Routine.categ:Basic
CodeComponent.End JS Routine.hint:Code at the end of this repeat of the Routine (e.g. getting/storing responses); right-click checks syntax
CodeComponent.End JS Routine.label:End JS Routine
CodeComponent.End JS Routine.readOnly:False
CodeComponent.End JS Routine.staticUpdater:None
CodeComponent.End JS Routine.updates:constant
CodeComponent.End JS Routine.val:
CodeComponent.End JS Routine.valType:extendedCode
CodeComponent.End Routine.default:
CodeComponent.End Routine.allowedTypes:[]
CodeComponent.End Routine.allowedUpdates:[]
CodeComponent.End Routine.allowedVals:[]
CodeComponent.End Routine.categ:Basic
CodeComponent.End Routine.hint:Code at the end of this repeat of the Routine (e.g. getting/storing responses); right-click checks syntax
CodeComponent.End Routine.label:End Routine
CodeComponent.End Routine.readOnly:False
CodeComponent.End Routine.staticUpdater:None
CodeComponent.End Routine.updates:constant
CodeComponent.End Routine.val:
CodeComponent.End Routine.valType:extendedCode
CodeComponent.name.default:code
CodeComponent.name.allowedTypes:[]
CodeComponent.name.allowedUpdates:None
CodeComponent.name.allowedVals:[]
CodeComponent.name.categ:Basic
CodeComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
CodeComponent.name.label:Name
CodeComponent.name.readOnly:False
CodeComponent.name.staticUpdater:None
CodeComponent.name.val:code
CodeComponent.name.valType:code
DotsComponent.order:['name']
DotsComponent.coherence.default:1.0
DotsComponent.coherence.allowedTypes:[]
DotsComponent.coherence.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.coherence.allowedVals:[]
DotsComponent.coherence.categ:Dots
DotsComponent.coherence.hint:Coherence of the dots (fraction moving in the signal direction on any one frame)
DotsComponent.coherence.label:Coherence
DotsComponent.coherence.readOnly:False
DotsComponent.coherence.staticUpdater:None
DotsComponent.coherence.updates:constant
DotsComponent.coherence.val:1.0
DotsComponent.coherence.valType:code
DotsComponent.color.default:[1.0,1.0,1.0]
DotsComponent.color.allowedTypes:[]
DotsComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.color.allowedVals:[]
DotsComponent.color.categ:Basic
DotsComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
DotsComponent.color.label:Color
DotsComponent.color.readOnly:False
DotsComponent.color.staticUpdater:None
DotsComponent.color.updates:constant
DotsComponent.color.val:$[1.0,1.0,1.0]
DotsComponent.color.valType:str
DotsComponent.colorSpace.default:'rgb'
DotsComponent.colorSpace.allowedTypes:[]
DotsComponent.colorSpace.allowedUpdates:None
DotsComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
DotsComponent.colorSpace.categ:Basic
DotsComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
DotsComponent.colorSpace.label:Color space
DotsComponent.colorSpace.readOnly:False
DotsComponent.colorSpace.staticUpdater:None
DotsComponent.colorSpace.updates:constant
DotsComponent.colorSpace.val:rgb
DotsComponent.colorSpace.valType:str
DotsComponent.dir.default:0.0
DotsComponent.dir.allowedTypes:[]
DotsComponent.dir.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.dir.allowedVals:[]
DotsComponent.dir.categ:Dots
DotsComponent.dir.hint:Direction of motion for the signal dots (degrees)
DotsComponent.dir.label:Direction
DotsComponent.dir.readOnly:False
DotsComponent.dir.staticUpdater:None
DotsComponent.dir.updates:constant
DotsComponent.dir.val:0.0
DotsComponent.dir.valType:code
DotsComponent.dotLife.default:3
DotsComponent.dotLife.allowedTypes:[]
DotsComponent.dotLife.allowedUpdates:None
DotsComponent.dotLife.allowedVals:[]
DotsComponent.dotLife.categ:Dots
DotsComponent.dotLife.hint:Number of frames before each dot is killed and randomly assigned a new position
DotsComponent.dotLife.label:Dot life-time
DotsComponent.dotLife.readOnly:False
DotsComponent.dotLife.staticUpdater:None
DotsComponent.dotLife.updates:None
DotsComponent.dotLife.val:3
DotsComponent.dotLife.valType:code
DotsComponent.dotSize.default:2
DotsComponent.dotSize.allowedTypes:[]
DotsComponent.dotSize.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.dotSize.allowedVals:[]
DotsComponent.dotSize.categ:Dots
DotsComponent.dotSize.hint:Size of the dots IN PIXELS regardless of the set units
DotsComponent.dotSize.label:Dot size
DotsComponent.dotSize.readOnly:False
DotsComponent.dotSize.staticUpdater:None
DotsComponent.dotSize.updates:constant
DotsComponent.dotSize.val:2
DotsComponent.dotSize.valType:code
DotsComponent.durationEstim.default:
DotsComponent.durationEstim.allowedTypes:[]
DotsComponent.durationEstim.allowedUpdates:None
DotsComponent.durationEstim.allowedVals:[]
DotsComponent.durationEstim.categ:Basic
DotsComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
DotsComponent.durationEstim.label:Expected duration (s)
DotsComponent.durationEstim.readOnly:False
DotsComponent.durationEstim.staticUpdater:None
DotsComponent.durationEstim.updates:None
DotsComponent.durationEstim.val:
DotsComponent.durationEstim.valType:code
DotsComponent.fieldPos.default:(0.0, 0.0)
DotsComponent.fieldPos.allowedTypes:[]
DotsComponent.fieldPos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.fieldPos.allowedVals:[]
DotsComponent.fieldPos.categ:Basic
DotsComponent.fieldPos.hint:Where is the field centred (in the specified units)?
DotsComponent.fieldPos.label:Field position
DotsComponent.fieldPos.readOnly:False
DotsComponent.fieldPos.staticUpdater:None
DotsComponent.fieldPos.updates:constant
DotsComponent.fieldPos.val:(0.0, 0.0)
DotsComponent.fieldPos.valType:code
DotsComponent.fieldShape.default:'circle'
DotsComponent.fieldShape.allowedTypes:[]
DotsComponent.fieldShape.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.fieldShape.allowedVals:['circle', 'square']
DotsComponent.fieldShape.categ:Basic
DotsComponent.fieldShape.hint:What is the shape of the field?
DotsComponent.fieldShape.label:Field shape
DotsComponent.fieldShape.readOnly:False
DotsComponent.fieldShape.staticUpdater:None
DotsComponent.fieldShape.updates:constant
DotsComponent.fieldShape.val:circle
DotsComponent.fieldShape.valType:str
DotsComponent.fieldSize.default:1.0
DotsComponent.fieldSize.allowedTypes:[]
DotsComponent.fieldSize.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.fieldSize.allowedVals:[]
DotsComponent.fieldSize.categ:Basic
DotsComponent.fieldSize.hint:What is the size of the field (in the specified units)?
DotsComponent.fieldSize.label:Field size
DotsComponent.fieldSize.readOnly:False
DotsComponent.fieldSize.staticUpdater:None
DotsComponent.fieldSize.updates:constant
DotsComponent.fieldSize.val:1.0
DotsComponent.fieldSize.valType:code
DotsComponent.nDots.default:100
DotsComponent.nDots.allowedTypes:[]
DotsComponent.nDots.allowedUpdates:None
DotsComponent.nDots.allowedVals:[]
DotsComponent.nDots.categ:Dots
DotsComponent.nDots.hint:Number of dots in the field (for circular fields this will be average number of dots)
DotsComponent.nDots.label:Number of dots
DotsComponent.nDots.readOnly:False
DotsComponent.nDots.staticUpdater:None
DotsComponent.nDots.updates:constant
DotsComponent.nDots.val:100
DotsComponent.nDots.valType:code
DotsComponent.name.default:dots
DotsComponent.name.allowedTypes:[]
DotsComponent.name.allowedUpdates:None
DotsComponent.name.allowedVals:[]
DotsComponent.name.categ:Basic
DotsComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
DotsComponent.name.label:Name
DotsComponent.name.readOnly:False
DotsComponent.name.staticUpdater:None
DotsComponent.name.val:dots
DotsComponent.name.valType:code
DotsComponent.noiseDots.default:'direction'
DotsComponent.noiseDots.allowedTypes:[]
DotsComponent.noiseDots.allowedUpdates:None
DotsComponent.noiseDots.allowedVals:['direction', 'position', 'walk']
DotsComponent.noiseDots.categ:Dots
DotsComponent.noiseDots.hint:What governs the behaviour of the noise dots? See Scase et al.
DotsComponent.noiseDots.label:Noise dots
DotsComponent.noiseDots.readOnly:False
DotsComponent.noiseDots.staticUpdater:None
DotsComponent.noiseDots.updates:None
DotsComponent.noiseDots.val:direction
DotsComponent.noiseDots.valType:str
DotsComponent.opacity.default:1
DotsComponent.opacity.allowedTypes:[]
DotsComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.opacity.allowedVals:[]
DotsComponent.opacity.categ:Basic
DotsComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
DotsComponent.opacity.label:Opacity
DotsComponent.opacity.readOnly:False
DotsComponent.opacity.staticUpdater:None
DotsComponent.opacity.updates:constant
DotsComponent.opacity.val:1
DotsComponent.opacity.valType:code
DotsComponent.refreshDots.default:'repeat'
DotsComponent.refreshDots.allowedTypes:[]
DotsComponent.refreshDots.allowedUpdates:[]
DotsComponent.refreshDots.allowedVals:['none', 'repeat']
DotsComponent.refreshDots.categ:Dots
DotsComponent.refreshDots.hint:When should the whole sample of dots be refreshed
DotsComponent.refreshDots.label:Dot refresh rule
DotsComponent.refreshDots.readOnly:False
DotsComponent.refreshDots.staticUpdater:None
DotsComponent.refreshDots.updates:None
DotsComponent.refreshDots.val:repeat
DotsComponent.refreshDots.valType:str
DotsComponent.signalDots.default:'same'
DotsComponent.signalDots.allowedTypes:[]
DotsComponent.signalDots.allowedUpdates:None
DotsComponent.signalDots.allowedVals:['same', 'different']
DotsComponent.signalDots.categ:Dots
DotsComponent.signalDots.hint:On each frame are the signals dots remaining the same or changing? See Scase et al.
DotsComponent.signalDots.label:Signal dots
DotsComponent.signalDots.readOnly:False
DotsComponent.signalDots.staticUpdater:None
DotsComponent.signalDots.updates:None
DotsComponent.signalDots.val:same
DotsComponent.signalDots.valType:str
DotsComponent.speed.default:0.1
DotsComponent.speed.allowedTypes:[]
DotsComponent.speed.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.speed.allowedVals:[]
DotsComponent.speed.categ:Dots
DotsComponent.speed.hint:Speed of the dots (displacement per frame in the specified units)
DotsComponent.speed.label:Speed
DotsComponent.speed.readOnly:False
DotsComponent.speed.staticUpdater:None
DotsComponent.speed.updates:constant
DotsComponent.speed.val:0.1
DotsComponent.speed.valType:code
DotsComponent.startEstim.default:
DotsComponent.startEstim.allowedTypes:[]
DotsComponent.startEstim.allowedUpdates:None
DotsComponent.startEstim.allowedVals:[]
DotsComponent.startEstim.categ:Basic
DotsComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
DotsComponent.startEstim.label:Expected start (s)
DotsComponent.startEstim.readOnly:False
DotsComponent.startEstim.staticUpdater:None
DotsComponent.startEstim.updates:None
DotsComponent.startEstim.val:
DotsComponent.startEstim.valType:code
DotsComponent.startType.default:'time (s)'
DotsComponent.startType.allowedTypes:[]
DotsComponent.startType.allowedUpdates:None
DotsComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
DotsComponent.startType.categ:Basic
DotsComponent.startType.hint:How do you want to define your start point?
DotsComponent.startType.label:start type
DotsComponent.startType.readOnly:False
DotsComponent.startType.staticUpdater:None
DotsComponent.startType.updates:None
DotsComponent.startType.val:time (s)
DotsComponent.startType.valType:str
DotsComponent.startVal.default:0.0
DotsComponent.startVal.allowedTypes:[]
DotsComponent.startVal.allowedUpdates:None
DotsComponent.startVal.allowedVals:[]
DotsComponent.startVal.categ:Basic
DotsComponent.startVal.hint:When does the component start?
DotsComponent.startVal.label:Start
DotsComponent.startVal.readOnly:False
DotsComponent.startVal.staticUpdater:None
DotsComponent.startVal.updates:None
DotsComponent.startVal.val:0.0
DotsComponent.startVal.valType:code
DotsComponent.stopType.default:'duration (s)'
DotsComponent.stopType.allowedTypes:[]
DotsComponent.stopType.allowedUpdates:None
DotsComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
DotsComponent.stopType.categ:Basic
DotsComponent.stopType.hint:How do you want to define your end point?
DotsComponent.stopType.label:stop type
DotsComponent.stopType.readOnly:False
DotsComponent.stopType.staticUpdater:None
DotsComponent.stopType.updates:None
DotsComponent.stopType.val:duration (s)
DotsComponent.stopType.valType:str
DotsComponent.stopVal.default:1.0
DotsComponent.stopVal.allowedTypes:[]
DotsComponent.stopVal.allowedUpdates:[]
DotsComponent.stopVal.allowedVals:[]
DotsComponent.stopVal.categ:Basic
DotsComponent.stopVal.hint:When does the component end? (blank is endless)
DotsComponent.stopVal.label:Stop
DotsComponent.stopVal.readOnly:False
DotsComponent.stopVal.staticUpdater:None
DotsComponent.stopVal.updates:constant
DotsComponent.stopVal.val:1.0
DotsComponent.stopVal.valType:code
DotsComponent.units.default:'from exp settings'
DotsComponent.units.allowedTypes:[]
DotsComponent.units.allowedUpdates:None
DotsComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
DotsComponent.units.categ:Basic
DotsComponent.units.hint:Units of dimensions for this stimulus
DotsComponent.units.label:Units
DotsComponent.units.readOnly:False
DotsComponent.units.staticUpdater:None
DotsComponent.units.updates:None
DotsComponent.units.val:from exp settings
DotsComponent.units.valType:str
EnvGratingComponent.order:['carrier', 'mask']
EnvGratingComponent.beat.default:False
EnvGratingComponent.beat.allowedTypes:[]
EnvGratingComponent.beat.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.beat.allowedVals:[]
EnvGratingComponent.beat.categ:Envelope
EnvGratingComponent.beat.hint:Do you want a 'beat'? [beat = carrier*envelope, no beat = carrier*(1+envelope), True/False, Y/N]
EnvGratingComponent.beat.label:Is modulation a beat
EnvGratingComponent.beat.readOnly:False
EnvGratingComponent.beat.staticUpdater:None
EnvGratingComponent.beat.updates:constant
EnvGratingComponent.beat.val:False
EnvGratingComponent.beat.valType:str
EnvGratingComponent.blendmode.default:'avg'
EnvGratingComponent.blendmode.allowedTypes:[]
EnvGratingComponent.blendmode.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.blendmode.allowedVals:['avg', 'add']
EnvGratingComponent.blendmode.categ:Basic
EnvGratingComponent.blendmode.hint:OpenGL Blendmode. Avg is most common mode in PsychoPy, add is useful if combining a beat with the carrier image or numpy array at point of display
EnvGratingComponent.blendmode.label:OpenGL blend mode
EnvGratingComponent.blendmode.readOnly:False
EnvGratingComponent.blendmode.staticUpdater:None
EnvGratingComponent.blendmode.updates:constant
EnvGratingComponent.blendmode.val:avg
EnvGratingComponent.blendmode.valType:str
EnvGratingComponent.carrier.default:'sin'
EnvGratingComponent.carrier.allowedTypes:[]
EnvGratingComponent.carrier.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.carrier.allowedVals:[]
EnvGratingComponent.carrier.categ:Carrier
EnvGratingComponent.carrier.hint:The (2D) texture of the background - can be sin, sqr, sinXsin... or a filename (including path)
EnvGratingComponent.carrier.label:Carrier texture
EnvGratingComponent.carrier.readOnly:False
EnvGratingComponent.carrier.staticUpdater:None
EnvGratingComponent.carrier.updates:constant
EnvGratingComponent.carrier.val:sin
EnvGratingComponent.carrier.valType:str
EnvGratingComponent.color.default:[1,1,1]
EnvGratingComponent.color.allowedTypes:[]
EnvGratingComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.color.allowedVals:[]
EnvGratingComponent.color.categ:Basic
EnvGratingComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
EnvGratingComponent.color.label:Color
EnvGratingComponent.color.readOnly:False
EnvGratingComponent.color.staticUpdater:None
EnvGratingComponent.color.updates:constant
EnvGratingComponent.color.val:$[1,1,1]
EnvGratingComponent.color.valType:str
EnvGratingComponent.colorSpace.default:'rgb'
EnvGratingComponent.colorSpace.allowedTypes:[]
EnvGratingComponent.colorSpace.allowedUpdates:None
EnvGratingComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
EnvGratingComponent.colorSpace.categ:Basic
EnvGratingComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
EnvGratingComponent.colorSpace.label:Color space
EnvGratingComponent.colorSpace.readOnly:False
EnvGratingComponent.colorSpace.staticUpdater:None
EnvGratingComponent.colorSpace.updates:constant
EnvGratingComponent.colorSpace.val:rgb
EnvGratingComponent.colorSpace.valType:str
EnvGratingComponent.contrast.default:0.5
EnvGratingComponent.contrast.allowedTypes:[]
EnvGratingComponent.contrast.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.contrast.allowedVals:[]
EnvGratingComponent.contrast.categ:Carrier
EnvGratingComponent.contrast.hint:Contrast of background carrier
EnvGratingComponent.contrast.label:Carrier contrast
EnvGratingComponent.contrast.readOnly:False
EnvGratingComponent.contrast.staticUpdater:None
EnvGratingComponent.contrast.updates:constant
EnvGratingComponent.contrast.val:0.5
EnvGratingComponent.contrast.valType:code
EnvGratingComponent.durationEstim.default:
EnvGratingComponent.durationEstim.allowedTypes:[]
EnvGratingComponent.durationEstim.allowedUpdates:None
EnvGratingComponent.durationEstim.allowedVals:[]
EnvGratingComponent.durationEstim.categ:Basic
EnvGratingComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
EnvGratingComponent.durationEstim.label:Expected duration (s)
EnvGratingComponent.durationEstim.readOnly:False
EnvGratingComponent.durationEstim.staticUpdater:None
EnvGratingComponent.durationEstim.updates:None
EnvGratingComponent.durationEstim.val:
EnvGratingComponent.durationEstim.valType:code
EnvGratingComponent.envelope.default:'sin'
EnvGratingComponent.envelope.allowedTypes:[]
EnvGratingComponent.envelope.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.envelope.allowedVals:[]
EnvGratingComponent.envelope.categ:Envelope
EnvGratingComponent.envelope.hint:The (2D) texture of the envelope - can be sin, sqr, sinXsin... or a filename (including path)
EnvGratingComponent.envelope.label:Envelope texture
EnvGratingComponent.envelope.readOnly:False
EnvGratingComponent.envelope.staticUpdater:None
EnvGratingComponent.envelope.updates:constant
EnvGratingComponent.envelope.val:sin
EnvGratingComponent.envelope.valType:str
EnvGratingComponent.envori.default:0.0
EnvGratingComponent.envori.allowedTypes:[]
EnvGratingComponent.envori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.envori.allowedVals:[]
EnvGratingComponent.envori.categ:Envelope
EnvGratingComponent.envori.hint:Orientation of the modulation envelope(wraps in range 0-360)
EnvGratingComponent.envori.label:Envelope orientation
EnvGratingComponent.envori.readOnly:False
EnvGratingComponent.envori.staticUpdater:None
EnvGratingComponent.envori.updates:constant
EnvGratingComponent.envori.val:0.0
EnvGratingComponent.envori.valType:code
EnvGratingComponent.envphase.default:0.0
EnvGratingComponent.envphase.allowedTypes:[]
EnvGratingComponent.envphase.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.envphase.allowedVals:[]
EnvGratingComponent.envphase.categ:Envelope
EnvGratingComponent.envphase.hint:Spatial positioning of the modulation envelope(wraps in range 0-1.0)
EnvGratingComponent.envphase.label:Envelope phase
EnvGratingComponent.envphase.readOnly:False
EnvGratingComponent.envphase.staticUpdater:None
EnvGratingComponent.envphase.updates:constant
EnvGratingComponent.envphase.val:0.0
EnvGratingComponent.envphase.valType:code
EnvGratingComponent.envsf.default:1.0
EnvGratingComponent.envsf.allowedTypes:[]
EnvGratingComponent.envsf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.envsf.allowedVals:[]
EnvGratingComponent.envsf.categ:Envelope
EnvGratingComponent.envsf.hint:Spatial frequency of the modulation envelope repeats across the grating in 1 or 2 dimensions, e.g. 4 or [2,3]
EnvGratingComponent.envsf.label:Envelope spatial frequency
EnvGratingComponent.envsf.readOnly:False
EnvGratingComponent.envsf.staticUpdater:None
EnvGratingComponent.envsf.updates:constant
EnvGratingComponent.envsf.val:1.0
EnvGratingComponent.envsf.valType:code
EnvGratingComponent.interpolate.default:'linear'
EnvGratingComponent.interpolate.allowedTypes:[]
EnvGratingComponent.interpolate.allowedUpdates:[]
EnvGratingComponent.interpolate.allowedVals:['linear', 'nearest']
EnvGratingComponent.interpolate.categ:Carrier
EnvGratingComponent.interpolate.hint:How should the image be interpolated if/when rescaled
EnvGratingComponent.interpolate.label:Interpolate
EnvGratingComponent.interpolate.readOnly:False
EnvGratingComponent.interpolate.staticUpdater:None
EnvGratingComponent.interpolate.updates:constant
EnvGratingComponent.interpolate.val:linear
EnvGratingComponent.interpolate.valType:str
EnvGratingComponent.mask.default:'None'
EnvGratingComponent.mask.allowedTypes:[]
EnvGratingComponent.mask.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.mask.allowedVals:[]
EnvGratingComponent.mask.categ:Carrier
EnvGratingComponent.mask.hint:An image to define the alpha mask (ie shape)- gauss, circle... or a filename (including path)
EnvGratingComponent.mask.label:Mask
EnvGratingComponent.mask.readOnly:False
EnvGratingComponent.mask.staticUpdater:None
EnvGratingComponent.mask.updates:constant
EnvGratingComponent.mask.val:None
EnvGratingComponent.mask.valType:str
EnvGratingComponent.moddepth.default:1.0
EnvGratingComponent.moddepth.allowedTypes:[]
EnvGratingComponent.moddepth.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.moddepth.allowedVals:[]
EnvGratingComponent.moddepth.categ:Envelope
EnvGratingComponent.moddepth.hint:Modulation depth of modulation envelope
EnvGratingComponent.moddepth.label:Envelope modulation depth
EnvGratingComponent.moddepth.readOnly:False
EnvGratingComponent.moddepth.staticUpdater:None
EnvGratingComponent.moddepth.updates:constant
EnvGratingComponent.moddepth.val:1.0
EnvGratingComponent.moddepth.valType:code
EnvGratingComponent.name.default:env_grating
EnvGratingComponent.name.allowedTypes:[]
EnvGratingComponent.name.allowedUpdates:None
EnvGratingComponent.name.allowedVals:[]
EnvGratingComponent.name.categ:Basic
EnvGratingComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
EnvGratingComponent.name.label:Name
EnvGratingComponent.name.readOnly:False
EnvGratingComponent.name.staticUpdater:None
EnvGratingComponent.name.val:env_grating
EnvGratingComponent.name.valType:code
EnvGratingComponent.opacity.default:1
EnvGratingComponent.opacity.allowedTypes:[]
EnvGratingComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.opacity.allowedVals:[]
EnvGratingComponent.opacity.categ:Basic
EnvGratingComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
EnvGratingComponent.opacity.label:Opacity
EnvGratingComponent.opacity.readOnly:False
EnvGratingComponent.opacity.staticUpdater:None
EnvGratingComponent.opacity.updates:constant
EnvGratingComponent.opacity.val:1
EnvGratingComponent.opacity.valType:code
EnvGratingComponent.ori.default:0
EnvGratingComponent.ori.allowedTypes:[]
EnvGratingComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.ori.allowedVals:[]
EnvGratingComponent.ori.categ:Carrier
EnvGratingComponent.ori.hint:Orientation of this stimulus (in deg)
EnvGratingComponent.ori.label:Carrier Orientation
EnvGratingComponent.ori.readOnly:False
EnvGratingComponent.ori.staticUpdater:None
EnvGratingComponent.ori.updates:constant
EnvGratingComponent.ori.val:0
EnvGratingComponent.ori.valType:code
EnvGratingComponent.phase.default:0.0
EnvGratingComponent.phase.allowedTypes:[]
EnvGratingComponent.phase.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.phase.allowedVals:[]
EnvGratingComponent.phase.categ:Carrier
EnvGratingComponent.phase.hint:Spatial positioning of the background carrier (wraps in range 0-1.0)
EnvGratingComponent.phase.label:Carrier phase (in cycles)
EnvGratingComponent.phase.readOnly:False
EnvGratingComponent.phase.staticUpdater:None
EnvGratingComponent.phase.updates:constant
EnvGratingComponent.phase.val:0.0
EnvGratingComponent.phase.valType:code
EnvGratingComponent.pos.default:(0, 0)
EnvGratingComponent.pos.allowedTypes:[]
EnvGratingComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.pos.allowedVals:[]
EnvGratingComponent.pos.categ:Basic
EnvGratingComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
EnvGratingComponent.pos.label:Position [x,y]
EnvGratingComponent.pos.readOnly:False
EnvGratingComponent.pos.staticUpdater:None
EnvGratingComponent.pos.updates:constant
EnvGratingComponent.pos.val:(0, 0)
EnvGratingComponent.pos.valType:code
EnvGratingComponent.sf.default:1.0
EnvGratingComponent.sf.allowedTypes:[]
EnvGratingComponent.sf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.sf.allowedVals:[]
EnvGratingComponent.sf.categ:Carrier
EnvGratingComponent.sf.hint:Spatial frequency of background carrier repeats across the grating in 1 or 2 dimensions, e.g. 4 or [2,3]
EnvGratingComponent.sf.label:Carrier spatial frequency
EnvGratingComponent.sf.readOnly:False
EnvGratingComponent.sf.staticUpdater:None
EnvGratingComponent.sf.updates:constant
EnvGratingComponent.sf.val:1.0
EnvGratingComponent.sf.valType:code
EnvGratingComponent.size.default:(0.5, 0.5)
EnvGratingComponent.size.allowedTypes:[]
EnvGratingComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.size.allowedVals:[]
EnvGratingComponent.size.categ:Basic
EnvGratingComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
EnvGratingComponent.size.label:Size [w,h]
EnvGratingComponent.size.readOnly:False
EnvGratingComponent.size.staticUpdater:None
EnvGratingComponent.size.updates:constant
EnvGratingComponent.size.val:(0.5, 0.5)
EnvGratingComponent.size.valType:code
EnvGratingComponent.startEstim.default:
EnvGratingComponent.startEstim.allowedTypes:[]
EnvGratingComponent.startEstim.allowedUpdates:None
EnvGratingComponent.startEstim.allowedVals:[]
EnvGratingComponent.startEstim.categ:Basic
EnvGratingComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
EnvGratingComponent.startEstim.label:Expected start (s)
EnvGratingComponent.startEstim.readOnly:False
EnvGratingComponent.startEstim.staticUpdater:None
EnvGratingComponent.startEstim.updates:None
EnvGratingComponent.startEstim.val:
EnvGratingComponent.startEstim.valType:code
EnvGratingComponent.startType.default:'time (s)'
EnvGratingComponent.startType.allowedTypes:[]
EnvGratingComponent.startType.allowedUpdates:None
EnvGratingComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
EnvGratingComponent.startType.categ:Basic
EnvGratingComponent.startType.hint:How do you want to define your start point?
EnvGratingComponent.startType.label:start type
EnvGratingComponent.startType.readOnly:False
EnvGratingComponent.startType.staticUpdater:None
EnvGratingComponent.startType.updates:None
EnvGratingComponent.startType.val:time (s)
EnvGratingComponent.startType.valType:str
EnvGratingComponent.startVal.default:0.0
EnvGratingComponent.startVal.allowedTypes:[]
EnvGratingComponent.startVal.allowedUpdates:None
EnvGratingComponent.startVal.allowedVals:[]
EnvGratingComponent.startVal.categ:Basic
EnvGratingComponent.startVal.hint:When does the component start?
EnvGratingComponent.startVal.label:Start
EnvGratingComponent.startVal.readOnly:False
EnvGratingComponent.startVal.staticUpdater:None
EnvGratingComponent.startVal.updates:None
EnvGratingComponent.startVal.val:0.0
EnvGratingComponent.startVal.valType:code
EnvGratingComponent.stopType.default:'duration (s)'
EnvGratingComponent.stopType.allowedTypes:[]
EnvGratingComponent.stopType.allowedUpdates:None
EnvGratingComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
EnvGratingComponent.stopType.categ:Basic
EnvGratingComponent.stopType.hint:How do you want to define your end point?
EnvGratingComponent.stopType.label:stop type
EnvGratingComponent.stopType.readOnly:False
EnvGratingComponent.stopType.staticUpdater:None
EnvGratingComponent.stopType.updates:None
EnvGratingComponent.stopType.val:duration (s)
EnvGratingComponent.stopType.valType:str
EnvGratingComponent.stopVal.default:1.0
EnvGratingComponent.stopVal.allowedTypes:[]
EnvGratingComponent.stopVal.allowedUpdates:[]
EnvGratingComponent.stopVal.allowedVals:[]
EnvGratingComponent.stopVal.categ:Basic
EnvGratingComponent.stopVal.hint:When does the component end? (blank is endless)
EnvGratingComponent.stopVal.label:Stop
EnvGratingComponent.stopVal.readOnly:False
EnvGratingComponent.stopVal.staticUpdater:None
EnvGratingComponent.stopVal.updates:constant
EnvGratingComponent.stopVal.val:1.0
EnvGratingComponent.stopVal.valType:code
EnvGratingComponent.texture resolution.default:128
EnvGratingComponent.texture resolution.allowedTypes:[]
EnvGratingComponent.texture resolution.allowedUpdates:[]
EnvGratingComponent.texture resolution.allowedVals:['32', '64', '128', '256', '512']
EnvGratingComponent.texture resolution.categ:Carrier
EnvGratingComponent.texture resolution.hint:Resolution of the texture for standard ones such as sin, sqr etc. For most cases a value of 256 pixels will suffice
EnvGratingComponent.texture resolution.label:Texture resolution
EnvGratingComponent.texture resolution.readOnly:False
EnvGratingComponent.texture resolution.staticUpdater:None
EnvGratingComponent.texture resolution.updates:constant
EnvGratingComponent.texture resolution.val:128
EnvGratingComponent.texture resolution.valType:code
EnvGratingComponent.units.default:'from exp settings'
EnvGratingComponent.units.allowedTypes:[]
EnvGratingComponent.units.allowedUpdates:None
EnvGratingComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
EnvGratingComponent.units.categ:Basic
EnvGratingComponent.units.hint:Units of dimensions for this stimulus
EnvGratingComponent.units.label:Units
EnvGratingComponent.units.readOnly:False
EnvGratingComponent.units.staticUpdater:None
EnvGratingComponent.units.updates:None
EnvGratingComponent.units.val:from exp settings
EnvGratingComponent.units.valType:str
GratingComponent.order:['tex', 'mask']
GratingComponent.blendmode.default:'avg'
GratingComponent.blendmode.allowedTypes:[]
GratingComponent.blendmode.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.blendmode.allowedVals:['avg', 'add']
GratingComponent.blendmode.categ:Basic
GratingComponent.blendmode.hint:OpenGL Blendmode: avg gives traditional transparency, add is important to combine gratings)]
GratingComponent.blendmode.label:OpenGL blend mode
GratingComponent.blendmode.readOnly:False
GratingComponent.blendmode.staticUpdater:None
GratingComponent.blendmode.updates:constant
GratingComponent.blendmode.val:avg
GratingComponent.blendmode.valType:str
GratingComponent.color.default:[1,1,1]
GratingComponent.color.allowedTypes:[]
GratingComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.color.allowedVals:[]
GratingComponent.color.categ:Basic
GratingComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
GratingComponent.color.label:Color
GratingComponent.color.readOnly:False
GratingComponent.color.staticUpdater:None
GratingComponent.color.updates:constant
GratingComponent.color.val:$[1,1,1]
GratingComponent.color.valType:str
GratingComponent.colorSpace.default:'rgb'
GratingComponent.colorSpace.allowedTypes:[]
GratingComponent.colorSpace.allowedUpdates:None
GratingComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
GratingComponent.colorSpace.categ:Basic
GratingComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
GratingComponent.colorSpace.label:Color space
GratingComponent.colorSpace.readOnly:False
GratingComponent.colorSpace.staticUpdater:None
GratingComponent.colorSpace.updates:constant
GratingComponent.colorSpace.val:rgb
GratingComponent.colorSpace.valType:str
GratingComponent.durationEstim.default:
GratingComponent.durationEstim.allowedTypes:[]
GratingComponent.durationEstim.allowedUpdates:None
GratingComponent.durationEstim.allowedVals:[]
GratingComponent.durationEstim.categ:Basic
GratingComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
GratingComponent.durationEstim.label:Expected duration (s)
GratingComponent.durationEstim.readOnly:False
GratingComponent.durationEstim.staticUpdater:None
GratingComponent.durationEstim.updates:None
GratingComponent.durationEstim.val:
GratingComponent.durationEstim.valType:code
GratingComponent.interpolate.default:'linear'
GratingComponent.interpolate.allowedTypes:[]
GratingComponent.interpolate.allowedUpdates:[]
GratingComponent.interpolate.allowedVals:['linear', 'nearest']
GratingComponent.interpolate.categ:Advanced
GratingComponent.interpolate.hint:How should the image be interpolated if/when rescaled
GratingComponent.interpolate.label:Interpolate
GratingComponent.interpolate.readOnly:False
GratingComponent.interpolate.staticUpdater:None
GratingComponent.interpolate.updates:constant
GratingComponent.interpolate.val:linear
GratingComponent.interpolate.valType:str
GratingComponent.mask.default:'None'
GratingComponent.mask.allowedTypes:[]
GratingComponent.mask.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.mask.allowedVals:[]
GratingComponent.mask.categ:Advanced
GratingComponent.mask.hint:An image to define the alpha mask (ie shape)- gauss, circle... or a filename (including path)
GratingComponent.mask.label:Mask
GratingComponent.mask.readOnly:False
GratingComponent.mask.staticUpdater:None
GratingComponent.mask.updates:constant
GratingComponent.mask.val:None
GratingComponent.mask.valType:str
GratingComponent.name.default:grating
GratingComponent.name.allowedTypes:[]
GratingComponent.name.allowedUpdates:None
GratingComponent.name.allowedVals:[]
GratingComponent.name.categ:Basic
GratingComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
GratingComponent.name.label:Name
GratingComponent.name.readOnly:False
GratingComponent.name.staticUpdater:None
GratingComponent.name.val:grating
GratingComponent.name.valType:code
GratingComponent.opacity.default:1
GratingComponent.opacity.allowedTypes:[]
GratingComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.opacity.allowedVals:[]
GratingComponent.opacity.categ:Basic
GratingComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
GratingComponent.opacity.label:Opacity
GratingComponent.opacity.readOnly:False
GratingComponent.opacity.staticUpdater:None
GratingComponent.opacity.updates:constant
GratingComponent.opacity.val:1
GratingComponent.opacity.valType:code
GratingComponent.ori.default:0
GratingComponent.ori.allowedTypes:[]
GratingComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.ori.allowedVals:[]
GratingComponent.ori.categ:Basic
GratingComponent.ori.hint:Orientation of this stimulus (in deg)
GratingComponent.ori.label:Orientation
GratingComponent.ori.readOnly:False
GratingComponent.ori.staticUpdater:None
GratingComponent.ori.updates:constant
GratingComponent.ori.val:0
GratingComponent.ori.valType:code
GratingComponent.phase.default:0.0
GratingComponent.phase.allowedTypes:[]
GratingComponent.phase.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.phase.allowedVals:[]
GratingComponent.phase.categ:Advanced
GratingComponent.phase.hint:Spatial positioning of the image on the grating (wraps in range 0-1.0)
GratingComponent.phase.label:Phase (in cycles)
GratingComponent.phase.readOnly:False
GratingComponent.phase.staticUpdater:None
GratingComponent.phase.updates:constant
GratingComponent.phase.val:0.0
GratingComponent.phase.valType:code
GratingComponent.pos.default:(0, 0)
GratingComponent.pos.allowedTypes:[]
GratingComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.pos.allowedVals:[]
GratingComponent.pos.categ:Basic
GratingComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
GratingComponent.pos.label:Position [x,y]
GratingComponent.pos.readOnly:False
GratingComponent.pos.staticUpdater:None
GratingComponent.pos.updates:constant
GratingComponent.pos.val:(0, 0)
GratingComponent.pos.valType:code
GratingComponent.sf.default:None
GratingComponent.sf.allowedTypes:[]
GratingComponent.sf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.sf.allowedVals:[]
GratingComponent.sf.categ:Advanced
GratingComponent.sf.hint:Spatial frequency of image repeats across the grating in 1 or 2 dimensions, e.g. 4 or [2,3]
GratingComponent.sf.label:Spatial frequency
GratingComponent.sf.readOnly:False
GratingComponent.sf.staticUpdater:None
GratingComponent.sf.updates:constant
GratingComponent.sf.val:None
GratingComponent.sf.valType:code
GratingComponent.size.default:(0.5, 0.5)
GratingComponent.size.allowedTypes:[]
GratingComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.size.allowedVals:[]
GratingComponent.size.categ:Basic
GratingComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
GratingComponent.size.label:Size [w,h]
GratingComponent.size.readOnly:False
GratingComponent.size.staticUpdater:None
GratingComponent.size.updates:constant
GratingComponent.size.val:(0.5, 0.5)
GratingComponent.size.valType:code
GratingComponent.startEstim.default:
GratingComponent.startEstim.allowedTypes:[]
GratingComponent.startEstim.allowedUpdates:None
GratingComponent.startEstim.allowedVals:[]
GratingComponent.startEstim.categ:Basic
GratingComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
GratingComponent.startEstim.label:Expected start (s)
GratingComponent.startEstim.readOnly:False
GratingComponent.startEstim.staticUpdater:None
GratingComponent.startEstim.updates:None
GratingComponent.startEstim.val:
GratingComponent.startEstim.valType:code
GratingComponent.startType.default:'time (s)'
GratingComponent.startType.allowedTypes:[]
GratingComponent.startType.allowedUpdates:None
GratingComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
GratingComponent.startType.categ:Basic
GratingComponent.startType.hint:How do you want to define your start point?
GratingComponent.startType.label:start type
GratingComponent.startType.readOnly:False
GratingComponent.startType.staticUpdater:None
GratingComponent.startType.updates:None
GratingComponent.startType.val:time (s)
GratingComponent.startType.valType:str
GratingComponent.startVal.default:0.0
GratingComponent.startVal.allowedTypes:[]
GratingComponent.startVal.allowedUpdates:None
GratingComponent.startVal.allowedVals:[]
GratingComponent.startVal.categ:Basic
GratingComponent.startVal.hint:When does the component start?
GratingComponent.startVal.label:Start
GratingComponent.startVal.readOnly:False
GratingComponent.startVal.staticUpdater:None
GratingComponent.startVal.updates:None
GratingComponent.startVal.val:0.0
GratingComponent.startVal.valType:code
GratingComponent.stopType.default:'duration (s)'
GratingComponent.stopType.allowedTypes:[]
GratingComponent.stopType.allowedUpdates:None
GratingComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
GratingComponent.stopType.categ:Basic
GratingComponent.stopType.hint:How do you want to define your end point?
GratingComponent.stopType.label:stop type
GratingComponent.stopType.readOnly:False
GratingComponent.stopType.staticUpdater:None
GratingComponent.stopType.updates:None
GratingComponent.stopType.val:duration (s)
GratingComponent.stopType.valType:str
GratingComponent.stopVal.default:1.0
GratingComponent.stopVal.allowedTypes:[]
GratingComponent.stopVal.allowedUpdates:[]
GratingComponent.stopVal.allowedVals:[]
GratingComponent.stopVal.categ:Basic
GratingComponent.stopVal.hint:When does the component end? (blank is endless)
GratingComponent.stopVal.label:Stop
GratingComponent.stopVal.readOnly:False
GratingComponent.stopVal.staticUpdater:None
GratingComponent.stopVal.updates:constant
GratingComponent.stopVal.val:1.0
GratingComponent.stopVal.valType:code
GratingComponent.tex.default:'sin'
GratingComponent.tex.allowedTypes:[]
GratingComponent.tex.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.tex.allowedVals:[]
GratingComponent.tex.categ:Advanced
GratingComponent.tex.hint:The (2D) texture of the grating - can be sin, sqr, sinXsin... or a filename (including path)
GratingComponent.tex.label:Texture
GratingComponent.tex.readOnly:False
GratingComponent.tex.staticUpdater:None
GratingComponent.tex.updates:constant
GratingComponent.tex.val:sin
GratingComponent.tex.valType:str
GratingComponent.texture resolution.default:128
GratingComponent.texture resolution.allowedTypes:[]
GratingComponent.texture resolution.allowedUpdates:[]
GratingComponent.texture resolution.allowedVals:['32', '64', '128', '256', '512']
GratingComponent.texture resolution.categ:Advanced
GratingComponent.texture resolution.hint:Resolution of the texture for standard ones such as sin, sqr etc. For most cases a value of 256 pixels will suffice
GratingComponent.texture resolution.label:Texture resolution
GratingComponent.texture resolution.readOnly:False
GratingComponent.texture resolution.staticUpdater:None
GratingComponent.texture resolution.updates:constant
GratingComponent.texture resolution.val:128
GratingComponent.texture resolution.valType:code
GratingComponent.units.default:'from exp settings'
GratingComponent.units.allowedTypes:[]
GratingComponent.units.allowedUpdates:None
GratingComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
GratingComponent.units.categ:Basic
GratingComponent.units.hint:Units of dimensions for this stimulus
GratingComponent.units.label:Units
GratingComponent.units.readOnly:False
GratingComponent.units.staticUpdater:None
GratingComponent.units.updates:None
GratingComponent.units.val:from exp settings
GratingComponent.units.valType:str
ImageComponent.order:['name', 'image', 'pos', 'size', 'ori', 'opacity']
ImageComponent.color.default:[1,1,1]
ImageComponent.color.allowedTypes:[]
ImageComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.color.allowedVals:[]
ImageComponent.color.categ:Advanced
ImageComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
ImageComponent.color.label:Color
ImageComponent.color.readOnly:False
ImageComponent.color.staticUpdater:None
ImageComponent.color.updates:constant
ImageComponent.color.val:$[1,1,1]
ImageComponent.color.valType:str
ImageComponent.colorSpace.default:'rgb'
ImageComponent.colorSpace.allowedTypes:[]
ImageComponent.colorSpace.allowedUpdates:None
ImageComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
ImageComponent.colorSpace.categ:Advanced
ImageComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
ImageComponent.colorSpace.label:Color space
ImageComponent.colorSpace.readOnly:False
ImageComponent.colorSpace.staticUpdater:None
ImageComponent.colorSpace.updates:constant
ImageComponent.colorSpace.val:rgb
ImageComponent.colorSpace.valType:str
ImageComponent.durationEstim.default:
ImageComponent.durationEstim.allowedTypes:[]
ImageComponent.durationEstim.allowedUpdates:None
ImageComponent.durationEstim.allowedVals:[]
ImageComponent.durationEstim.categ:Basic
ImageComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
ImageComponent.durationEstim.label:Expected duration (s)
ImageComponent.durationEstim.readOnly:False
ImageComponent.durationEstim.staticUpdater:None
ImageComponent.durationEstim.updates:None
ImageComponent.durationEstim.val:
ImageComponent.durationEstim.valType:code
ImageComponent.flipHoriz.default:False
ImageComponent.flipHoriz.allowedTypes:[]
ImageComponent.flipHoriz.allowedUpdates:[]
ImageComponent.flipHoriz.allowedVals:[]
ImageComponent.flipHoriz.categ:Advanced
ImageComponent.flipHoriz.hint:Should the image be flipped horizontally (left to right)?
ImageComponent.flipHoriz.label:Flip horizontally
ImageComponent.flipHoriz.readOnly:False
ImageComponent.flipHoriz.staticUpdater:None
ImageComponent.flipHoriz.updates:constant
ImageComponent.flipHoriz.val:False
ImageComponent.flipHoriz.valType:bool
ImageComponent.flipVert.default:False
ImageComponent.flipVert.allowedTypes:[]
ImageComponent.flipVert.allowedUpdates:[]
ImageComponent.flipVert.allowedVals:[]
ImageComponent.flipVert.categ:Advanced
ImageComponent.flipVert.hint:Should the image be flipped vertically (top to bottom)?
ImageComponent.flipVert.label:Flip vertically
ImageComponent.flipVert.readOnly:False
ImageComponent.flipVert.staticUpdater:None
ImageComponent.flipVert.updates:constant
ImageComponent.flipVert.val:False
ImageComponent.flipVert.valType:bool
ImageComponent.image.default:'None'
ImageComponent.image.allowedTypes:[]
ImageComponent.image.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.image.allowedVals:[]
ImageComponent.image.categ:Basic
ImageComponent.image.hint:The image to be displayed - a filename, including path
ImageComponent.image.label:Image
ImageComponent.image.readOnly:False
ImageComponent.image.staticUpdater:None
ImageComponent.image.updates:constant
ImageComponent.image.val:None
ImageComponent.image.valType:str
ImageComponent.interpolate.default:'linear'
ImageComponent.interpolate.allowedTypes:[]
ImageComponent.interpolate.allowedUpdates:[]
ImageComponent.interpolate.allowedVals:['linear', 'nearest']
ImageComponent.interpolate.categ:Advanced
ImageComponent.interpolate.hint:How should the image be interpolated if/when rescaled
ImageComponent.interpolate.label:Interpolate
ImageComponent.interpolate.readOnly:False
ImageComponent.interpolate.staticUpdater:None
ImageComponent.interpolate.updates:constant
ImageComponent.interpolate.val:linear
ImageComponent.interpolate.valType:str
ImageComponent.mask.default:'None'
ImageComponent.mask.allowedTypes:[]
ImageComponent.mask.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.mask.allowedVals:[]
ImageComponent.mask.categ:Advanced
ImageComponent.mask.hint:An image to define the alpha mask through which the image is seen - gauss, circle, None or a filename (including path)
ImageComponent.mask.label:Mask
ImageComponent.mask.readOnly:False
ImageComponent.mask.staticUpdater:None
ImageComponent.mask.updates:constant
ImageComponent.mask.val:None
ImageComponent.mask.valType:str
ImageComponent.name.default:image
ImageComponent.name.allowedTypes:[]
ImageComponent.name.allowedUpdates:None
ImageComponent.name.allowedVals:[]
ImageComponent.name.categ:Basic
ImageComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
ImageComponent.name.label:Name
ImageComponent.name.readOnly:False
ImageComponent.name.staticUpdater:None
ImageComponent.name.val:image
ImageComponent.name.valType:code
ImageComponent.opacity.default:1
ImageComponent.opacity.allowedTypes:[]
ImageComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.opacity.allowedVals:[]
ImageComponent.opacity.categ:Basic
ImageComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
ImageComponent.opacity.label:Opacity
ImageComponent.opacity.readOnly:False
ImageComponent.opacity.staticUpdater:None
ImageComponent.opacity.updates:constant
ImageComponent.opacity.val:1
ImageComponent.opacity.valType:code
ImageComponent.ori.default:0
ImageComponent.ori.allowedTypes:[]
ImageComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.ori.allowedVals:[]
ImageComponent.ori.categ:Basic
ImageComponent.ori.hint:Orientation of this stimulus (in deg)
ImageComponent.ori.label:Orientation
ImageComponent.ori.readOnly:False
ImageComponent.ori.staticUpdater:None
ImageComponent.ori.updates:constant
ImageComponent.ori.val:0
ImageComponent.ori.valType:code
ImageComponent.pos.default:(0, 0)
ImageComponent.pos.allowedTypes:[]
ImageComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.pos.allowedVals:[]
ImageComponent.pos.categ:Basic
ImageComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
ImageComponent.pos.label:Position [x,y]
ImageComponent.pos.readOnly:False
ImageComponent.pos.staticUpdater:None
ImageComponent.pos.updates:constant
ImageComponent.pos.val:(0, 0)
ImageComponent.pos.valType:code
ImageComponent.size.default:(0.5, 0.5)
ImageComponent.size.allowedTypes:[]
ImageComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.size.allowedVals:[]
ImageComponent.size.categ:Basic
ImageComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
ImageComponent.size.label:Size [w,h]
ImageComponent.size.readOnly:False
ImageComponent.size.staticUpdater:None
ImageComponent.size.updates:constant
ImageComponent.size.val:(0.5, 0.5)
ImageComponent.size.valType:code
ImageComponent.startEstim.default:
ImageComponent.startEstim.allowedTypes:[]
ImageComponent.startEstim.allowedUpdates:None
ImageComponent.startEstim.allowedVals:[]
ImageComponent.startEstim.categ:Basic
ImageComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
ImageComponent.startEstim.label:Expected start (s)
ImageComponent.startEstim.readOnly:False
ImageComponent.startEstim.staticUpdater:None
ImageComponent.startEstim.updates:None
ImageComponent.startEstim.val:
ImageComponent.startEstim.valType:code
ImageComponent.startType.default:'time (s)'
ImageComponent.startType.allowedTypes:[]
ImageComponent.startType.allowedUpdates:None
ImageComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
ImageComponent.startType.categ:Basic
ImageComponent.startType.hint:How do you want to define your start point?
ImageComponent.startType.label:start type
ImageComponent.startType.readOnly:False
ImageComponent.startType.staticUpdater:None
ImageComponent.startType.updates:None
ImageComponent.startType.val:time (s)
ImageComponent.startType.valType:str
ImageComponent.startVal.default:0.0
ImageComponent.startVal.allowedTypes:[]
ImageComponent.startVal.allowedUpdates:None
ImageComponent.startVal.allowedVals:[]
ImageComponent.startVal.categ:Basic
ImageComponent.startVal.hint:When does the component start?
ImageComponent.startVal.label:Start
ImageComponent.startVal.readOnly:False
ImageComponent.startVal.staticUpdater:None
ImageComponent.startVal.updates:None
ImageComponent.startVal.val:0.0
ImageComponent.startVal.valType:code
ImageComponent.stopType.default:'duration (s)'
ImageComponent.stopType.allowedTypes:[]
ImageComponent.stopType.allowedUpdates:None
ImageComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
ImageComponent.stopType.categ:Basic
ImageComponent.stopType.hint:How do you want to define your end point?
ImageComponent.stopType.label:stop type
ImageComponent.stopType.readOnly:False
ImageComponent.stopType.staticUpdater:None
ImageComponent.stopType.updates:None
ImageComponent.stopType.val:duration (s)
ImageComponent.stopType.valType:str
ImageComponent.stopVal.default:1.0
ImageComponent.stopVal.allowedTypes:[]
ImageComponent.stopVal.allowedUpdates:[]
ImageComponent.stopVal.allowedVals:[]
ImageComponent.stopVal.categ:Basic
ImageComponent.stopVal.hint:When does the component end? (blank is endless)
ImageComponent.stopVal.label:Stop
ImageComponent.stopVal.readOnly:False
ImageComponent.stopVal.staticUpdater:None
ImageComponent.stopVal.updates:constant
ImageComponent.stopVal.val:1.0
ImageComponent.stopVal.valType:code
ImageComponent.texture resolution.default:128
ImageComponent.texture resolution.allowedTypes:[]
ImageComponent.texture resolution.allowedUpdates:[]
ImageComponent.texture resolution.allowedVals:['32', '64', '128', '256', '512']
ImageComponent.texture resolution.categ:Advanced
ImageComponent.texture resolution.hint:Resolution of the mask if one is used.
ImageComponent.texture resolution.label:Texture resolution
ImageComponent.texture resolution.readOnly:False
ImageComponent.texture resolution.staticUpdater:None
ImageComponent.texture resolution.updates:constant
ImageComponent.texture resolution.val:128
ImageComponent.texture resolution.valType:code
ImageComponent.units.default:'from exp settings'
ImageComponent.units.allowedTypes:[]
ImageComponent.units.allowedUpdates:None
ImageComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
ImageComponent.units.categ:Basic
ImageComponent.units.hint:Units of dimensions for this stimulus
ImageComponent.units.label:Units
ImageComponent.units.readOnly:False
ImageComponent.units.staticUpdater:None
ImageComponent.units.updates:None
ImageComponent.units.val:from exp settings
ImageComponent.units.valType:str
JoyButtonsComponent.order:['forceEndRoutine', 'allowedKeys', 'store', 'storeCorrect', 'correctAns', 'deviceNumber']
JoyButtonsComponent.allowedKeys.default:0,1,2,3,4
JoyButtonsComponent.allowedKeys.allowedTypes:[]
JoyButtonsComponent.allowedKeys.allowedUpdates:['constant', 'set every repeat']
JoyButtonsComponent.allowedKeys.allowedVals:[]
JoyButtonsComponent.allowedKeys.categ:Basic
JoyButtonsComponent.allowedKeys.hint:A comma-separated list of button numbers, such as 0,1,2,3,4
JoyButtonsComponent.allowedKeys.label:Allowed buttons
JoyButtonsComponent.allowedKeys.readOnly:False
JoyButtonsComponent.allowedKeys.staticUpdater:None
JoyButtonsComponent.allowedKeys.updates:constant
JoyButtonsComponent.allowedKeys.val:0,1,2,3,4
JoyButtonsComponent.allowedKeys.valType:code
JoyButtonsComponent.correctAns.default:''
JoyButtonsComponent.correctAns.allowedTypes:[]
JoyButtonsComponent.correctAns.allowedUpdates:None
JoyButtonsComponent.correctAns.allowedVals:[]
JoyButtonsComponent.correctAns.categ:Basic
JoyButtonsComponent.correctAns.hint:What is the 'correct' key? Might be helpful to add a correctAns column and use $correctAns to compare to the key press.
JoyButtonsComponent.correctAns.label:Correct answer
JoyButtonsComponent.correctAns.readOnly:False
JoyButtonsComponent.correctAns.staticUpdater:None
JoyButtonsComponent.correctAns.updates:constant
JoyButtonsComponent.correctAns.val:
JoyButtonsComponent.correctAns.valType:str
JoyButtonsComponent.deviceNumber.default:0
JoyButtonsComponent.deviceNumber.allowedTypes:[]
JoyButtonsComponent.deviceNumber.allowedUpdates:[]
JoyButtonsComponent.deviceNumber.allowedVals:[]
JoyButtonsComponent.deviceNumber.categ:Advanced
JoyButtonsComponent.deviceNumber.hint:Device number, if you have multiple devices which one do you want (0, 1, 2...)
JoyButtonsComponent.deviceNumber.label:Device number
JoyButtonsComponent.deviceNumber.readOnly:False
JoyButtonsComponent.deviceNumber.staticUpdater:None
JoyButtonsComponent.deviceNumber.updates:constant
JoyButtonsComponent.deviceNumber.val:0
JoyButtonsComponent.deviceNumber.valType:code
JoyButtonsComponent.durationEstim.default:
JoyButtonsComponent.durationEstim.allowedTypes:[]
JoyButtonsComponent.durationEstim.allowedUpdates:None
JoyButtonsComponent.durationEstim.allowedVals:[]
JoyButtonsComponent.durationEstim.categ:Basic
JoyButtonsComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
JoyButtonsComponent.durationEstim.label:Expected duration (s)
JoyButtonsComponent.durationEstim.readOnly:False
JoyButtonsComponent.durationEstim.staticUpdater:None
JoyButtonsComponent.durationEstim.updates:None
JoyButtonsComponent.durationEstim.val:
JoyButtonsComponent.durationEstim.valType:code
JoyButtonsComponent.forceEndRoutine.default:True
JoyButtonsComponent.forceEndRoutine.allowedTypes:[]
JoyButtonsComponent.forceEndRoutine.allowedUpdates:None
JoyButtonsComponent.forceEndRoutine.allowedVals:[]
JoyButtonsComponent.forceEndRoutine.categ:Basic
JoyButtonsComponent.forceEndRoutine.hint:Should a response force the end of the Routine (e.g end the trial)?
JoyButtonsComponent.forceEndRoutine.label:Force end of Routine
JoyButtonsComponent.forceEndRoutine.readOnly:False
JoyButtonsComponent.forceEndRoutine.staticUpdater:None
JoyButtonsComponent.forceEndRoutine.updates:constant
JoyButtonsComponent.forceEndRoutine.val:True
JoyButtonsComponent.forceEndRoutine.valType:bool
JoyButtonsComponent.name.default:button_resp
JoyButtonsComponent.name.allowedTypes:[]
JoyButtonsComponent.name.allowedUpdates:None
JoyButtonsComponent.name.allowedVals:[]
JoyButtonsComponent.name.categ:Basic
JoyButtonsComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
JoyButtonsComponent.name.label:Name
JoyButtonsComponent.name.readOnly:False
JoyButtonsComponent.name.staticUpdater:None
JoyButtonsComponent.name.val:button_resp
JoyButtonsComponent.name.valType:code
JoyButtonsComponent.startEstim.default:
JoyButtonsComponent.startEstim.allowedTypes:[]
JoyButtonsComponent.startEstim.allowedUpdates:None
JoyButtonsComponent.startEstim.allowedVals:[]
JoyButtonsComponent.startEstim.categ:Basic
JoyButtonsComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
JoyButtonsComponent.startEstim.label:Expected start (s)
JoyButtonsComponent.startEstim.readOnly:False
JoyButtonsComponent.startEstim.staticUpdater:None
JoyButtonsComponent.startEstim.updates:None
JoyButtonsComponent.startEstim.val:
JoyButtonsComponent.startEstim.valType:code
JoyButtonsComponent.startType.default:'time (s)'
JoyButtonsComponent.startType.allowedTypes:[]
JoyButtonsComponent.startType.allowedUpdates:None
JoyButtonsComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
JoyButtonsComponent.startType.categ:Basic
JoyButtonsComponent.startType.hint:How do you want to define your start point?
JoyButtonsComponent.startType.label:start type
JoyButtonsComponent.startType.readOnly:False
JoyButtonsComponent.startType.staticUpdater:None
JoyButtonsComponent.startType.updates:None
JoyButtonsComponent.startType.val:time (s)
JoyButtonsComponent.startType.valType:str
JoyButtonsComponent.startVal.default:0.0
JoyButtonsComponent.startVal.allowedTypes:[]
JoyButtonsComponent.startVal.allowedUpdates:None
JoyButtonsComponent.startVal.allowedVals:[]
JoyButtonsComponent.startVal.categ:Basic
JoyButtonsComponent.startVal.hint:When does the component start?
JoyButtonsComponent.startVal.label:Start
JoyButtonsComponent.startVal.readOnly:False
JoyButtonsComponent.startVal.staticUpdater:None
JoyButtonsComponent.startVal.updates:None
JoyButtonsComponent.startVal.val:0.0
JoyButtonsComponent.startVal.valType:code
JoyButtonsComponent.stopType.default:'duration (s)'
JoyButtonsComponent.stopType.allowedTypes:[]
JoyButtonsComponent.stopType.allowedUpdates:None
JoyButtonsComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
JoyButtonsComponent.stopType.categ:Basic
JoyButtonsComponent.stopType.hint:How do you want to define your end point?
JoyButtonsComponent.stopType.label:stop type
JoyButtonsComponent.stopType.readOnly:False
JoyButtonsComponent.stopType.staticUpdater:None
JoyButtonsComponent.stopType.updates:None
JoyButtonsComponent.stopType.val:duration (s)
JoyButtonsComponent.stopType.valType:str
JoyButtonsComponent.stopVal.default:
JoyButtonsComponent.stopVal.allowedTypes:[]
JoyButtonsComponent.stopVal.allowedUpdates:[]
JoyButtonsComponent.stopVal.allowedVals:[]
JoyButtonsComponent.stopVal.categ:Basic
JoyButtonsComponent.stopVal.hint:When does the component end? (blank is endless)
JoyButtonsComponent.stopVal.label:Stop
JoyButtonsComponent.stopVal.readOnly:False
JoyButtonsComponent.stopVal.staticUpdater:None
JoyButtonsComponent.stopVal.updates:constant
JoyButtonsComponent.stopVal.val:
JoyButtonsComponent.stopVal.valType:code
JoyButtonsComponent.store.default:'last key'
JoyButtonsComponent.store.allowedTypes:[]
JoyButtonsComponent.store.allowedUpdates:None
JoyButtonsComponent.store.allowedVals:['last key', 'first key', 'all keys', 'nothing']
JoyButtonsComponent.store.categ:Basic
JoyButtonsComponent.store.hint:Choose which (if any) responses to store at the end of a trial
JoyButtonsComponent.store.label:Store
JoyButtonsComponent.store.readOnly:False
JoyButtonsComponent.store.staticUpdater:None
JoyButtonsComponent.store.updates:constant
JoyButtonsComponent.store.val:last key
JoyButtonsComponent.store.valType:str
JoyButtonsComponent.storeCorrect.default:False
JoyButtonsComponent.storeCorrect.allowedTypes:[]
JoyButtonsComponent.storeCorrect.allowedUpdates:None
JoyButtonsComponent.storeCorrect.allowedVals:[]
JoyButtonsComponent.storeCorrect.categ:Basic
JoyButtonsComponent.storeCorrect.hint:Do you want to save the response as correct/incorrect?
JoyButtonsComponent.storeCorrect.label:Store correct
JoyButtonsComponent.storeCorrect.readOnly:False
JoyButtonsComponent.storeCorrect.staticUpdater:None
JoyButtonsComponent.storeCorrect.updates:constant
JoyButtonsComponent.storeCorrect.val:False
JoyButtonsComponent.storeCorrect.valType:bool
JoyButtonsComponent.syncScreenRefresh.default:True
JoyButtonsComponent.syncScreenRefresh.allowedTypes:[]
JoyButtonsComponent.syncScreenRefresh.allowedUpdates:None
JoyButtonsComponent.syncScreenRefresh.allowedVals:[]
JoyButtonsComponent.syncScreenRefresh.categ:Basic
JoyButtonsComponent.syncScreenRefresh.hint:A reaction time to a visual stimulus should be based on when the screen flipped
JoyButtonsComponent.syncScreenRefresh.label:sync RT with screen
JoyButtonsComponent.syncScreenRefresh.readOnly:False
JoyButtonsComponent.syncScreenRefresh.staticUpdater:None
JoyButtonsComponent.syncScreenRefresh.updates:constant
JoyButtonsComponent.syncScreenRefresh.val:True
JoyButtonsComponent.syncScreenRefresh.valType:bool
KeyboardComponent.order:['forceEndRoutine', 'allowedKeys', 'store', 'storeCorrect', 'correctAns']
KeyboardComponent.allowedKeys.default:'y','n','left','right','space'
KeyboardComponent.allowedKeys.allowedTypes:[]
KeyboardComponent.allowedKeys.allowedUpdates:['constant', 'set every repeat']
KeyboardComponent.allowedKeys.allowedVals:[]
KeyboardComponent.allowedKeys.categ:Basic
KeyboardComponent.allowedKeys.hint:A comma-separated list of keys (with quotes), such as 'q','right','space','left'
KeyboardComponent.allowedKeys.label:Allowed keys
KeyboardComponent.allowedKeys.readOnly:False
KeyboardComponent.allowedKeys.staticUpdater:None
KeyboardComponent.allowedKeys.updates:constant
KeyboardComponent.allowedKeys.val:'y','n','left','right','space'
KeyboardComponent.allowedKeys.valType:code
KeyboardComponent.correctAns.default:''
KeyboardComponent.correctAns.allowedTypes:[]
KeyboardComponent.correctAns.allowedUpdates:None
KeyboardComponent.correctAns.allowedVals:[]
KeyboardComponent.correctAns.categ:Basic
KeyboardComponent.correctAns.hint:What is the 'correct' key? Might be helpful to add a correctAns column and use $correctAns to compare to the key press.
KeyboardComponent.correctAns.label:Correct answer
KeyboardComponent.correctAns.readOnly:False
KeyboardComponent.correctAns.staticUpdater:None
KeyboardComponent.correctAns.updates:constant
KeyboardComponent.correctAns.val:
KeyboardComponent.correctAns.valType:str
KeyboardComponent.discard previous.default:True
KeyboardComponent.discard previous.allowedTypes:[]
KeyboardComponent.discard previous.allowedUpdates:None
KeyboardComponent.discard previous.allowedVals:[]
KeyboardComponent.discard previous.categ:Basic
KeyboardComponent.discard previous.hint:Do you want to discard all responses occuring before the onset of this component?
KeyboardComponent.discard previous.label:Discard previous
KeyboardComponent.discard previous.readOnly:False
KeyboardComponent.discard previous.staticUpdater:None
KeyboardComponent.discard previous.updates:constant
KeyboardComponent.discard previous.val:True
KeyboardComponent.discard previous.valType:bool
KeyboardComponent.durationEstim.default:
KeyboardComponent.durationEstim.allowedTypes:[]
KeyboardComponent.durationEstim.allowedUpdates:None
KeyboardComponent.durationEstim.allowedVals:[]
KeyboardComponent.durationEstim.categ:Basic
KeyboardComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
KeyboardComponent.durationEstim.label:Expected duration (s)
KeyboardComponent.durationEstim.readOnly:False
KeyboardComponent.durationEstim.staticUpdater:None
KeyboardComponent.durationEstim.updates:None
KeyboardComponent.durationEstim.val:
KeyboardComponent.durationEstim.valType:code
KeyboardComponent.forceEndRoutine.default:True
KeyboardComponent.forceEndRoutine.allowedTypes:[]
KeyboardComponent.forceEndRoutine.allowedUpdates:None
KeyboardComponent.forceEndRoutine.allowedVals:[]
KeyboardComponent.forceEndRoutine.categ:Basic
KeyboardComponent.forceEndRoutine.hint:Should a response force the end of the Routine (e.g end the trial)?
KeyboardComponent.forceEndRoutine.label:Force end of Routine
KeyboardComponent.forceEndRoutine.readOnly:False
KeyboardComponent.forceEndRoutine.staticUpdater:None
KeyboardComponent.forceEndRoutine.updates:constant
KeyboardComponent.forceEndRoutine.val:True
KeyboardComponent.forceEndRoutine.valType:bool
KeyboardComponent.name.default:key_resp
KeyboardComponent.name.allowedTypes:[]
KeyboardComponent.name.allowedUpdates:None
KeyboardComponent.name.allowedVals:[]
KeyboardComponent.name.categ:Basic
KeyboardComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
KeyboardComponent.name.label:Name
KeyboardComponent.name.readOnly:False
KeyboardComponent.name.staticUpdater:None
KeyboardComponent.name.val:key_resp
KeyboardComponent.name.valType:code
KeyboardComponent.startEstim.default:
KeyboardComponent.startEstim.allowedTypes:[]
KeyboardComponent.startEstim.allowedUpdates:None
KeyboardComponent.startEstim.allowedVals:[]
KeyboardComponent.startEstim.categ:Basic
KeyboardComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
KeyboardComponent.startEstim.label:Expected start (s)
KeyboardComponent.startEstim.readOnly:False
KeyboardComponent.startEstim.staticUpdater:None
KeyboardComponent.startEstim.updates:None
KeyboardComponent.startEstim.val:
KeyboardComponent.startEstim.valType:code
KeyboardComponent.startType.default:'time (s)'
KeyboardComponent.startType.allowedTypes:[]
KeyboardComponent.startType.allowedUpdates:None
KeyboardComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
KeyboardComponent.startType.categ:Basic
KeyboardComponent.startType.hint:How do you want to define your start point?
KeyboardComponent.startType.label:start type
KeyboardComponent.startType.readOnly:False
KeyboardComponent.startType.staticUpdater:None
KeyboardComponent.startType.updates:None
KeyboardComponent.startType.val:time (s)
KeyboardComponent.startType.valType:str
KeyboardComponent.startVal.default:0.0
KeyboardComponent.startVal.allowedTypes:[]
KeyboardComponent.startVal.allowedUpdates:None
KeyboardComponent.startVal.allowedVals:[]
KeyboardComponent.startVal.categ:Basic
KeyboardComponent.startVal.hint:When does the component start?
KeyboardComponent.startVal.label:Start
KeyboardComponent.startVal.readOnly:False
KeyboardComponent.startVal.staticUpdater:None
KeyboardComponent.startVal.updates:None
KeyboardComponent.startVal.val:0.0
KeyboardComponent.startVal.valType:code
KeyboardComponent.stopType.default:'duration (s)'
KeyboardComponent.stopType.allowedTypes:[]
KeyboardComponent.stopType.allowedUpdates:None
KeyboardComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
KeyboardComponent.stopType.categ:Basic
KeyboardComponent.stopType.hint:How do you want to define your end point?
KeyboardComponent.stopType.label:stop type
KeyboardComponent.stopType.readOnly:False
KeyboardComponent.stopType.staticUpdater:None
KeyboardComponent.stopType.updates:None
KeyboardComponent.stopType.val:duration (s)
KeyboardComponent.stopType.valType:str
KeyboardComponent.stopVal.default:
KeyboardComponent.stopVal.allowedTypes:[]
KeyboardComponent.stopVal.allowedUpdates:[]
KeyboardComponent.stopVal.allowedVals:[]
KeyboardComponent.stopVal.categ:Basic
KeyboardComponent.stopVal.hint:When does the component end? (blank is endless)
KeyboardComponent.stopVal.label:Stop
KeyboardComponent.stopVal.readOnly:False
KeyboardComponent.stopVal.staticUpdater:None
KeyboardComponent.stopVal.updates:constant
KeyboardComponent.stopVal.val:
KeyboardComponent.stopVal.valType:code
KeyboardComponent.store.default:'last key'
KeyboardComponent.store.allowedTypes:[]
KeyboardComponent.store.allowedUpdates:None
KeyboardComponent.store.allowedVals:['last key', 'first key', 'all keys', 'nothing']
KeyboardComponent.store.categ:Basic
KeyboardComponent.store.hint:Choose which (if any) responses to store at the end of a trial
KeyboardComponent.store.label:Store
KeyboardComponent.store.readOnly:False
KeyboardComponent.store.staticUpdater:None
KeyboardComponent.store.updates:constant
KeyboardComponent.store.val:last key
KeyboardComponent.store.valType:str
KeyboardComponent.storeCorrect.default:False
KeyboardComponent.storeCorrect.allowedTypes:[]
KeyboardComponent.storeCorrect.allowedUpdates:None
KeyboardComponent.storeCorrect.allowedVals:[]
KeyboardComponent.storeCorrect.categ:Basic
KeyboardComponent.storeCorrect.hint:Do you want to save the response as correct/incorrect?
KeyboardComponent.storeCorrect.label:Store correct
KeyboardComponent.storeCorrect.readOnly:False
KeyboardComponent.storeCorrect.staticUpdater:None
KeyboardComponent.storeCorrect.updates:constant
KeyboardComponent.storeCorrect.val:False
KeyboardComponent.storeCorrect.valType:bool
KeyboardComponent.syncScreenRefresh.default:True
KeyboardComponent.syncScreenRefresh.allowedTypes:[]
KeyboardComponent.syncScreenRefresh.allowedUpdates:None
KeyboardComponent.syncScreenRefresh.allowedVals:[]
KeyboardComponent.syncScreenRefresh.categ:Basic
KeyboardComponent.syncScreenRefresh.hint:A reaction time to a visual stimulus should be based on when the screen flipped
KeyboardComponent.syncScreenRefresh.label:sync RT with screen
KeyboardComponent.syncScreenRefresh.readOnly:False
KeyboardComponent.syncScreenRefresh.staticUpdater:None
KeyboardComponent.syncScreenRefresh.updates:constant
KeyboardComponent.syncScreenRefresh.val:True
KeyboardComponent.syncScreenRefresh.valType:bool
MicrophoneComponent.order:['name']
MicrophoneComponent.durationEstim.default:
MicrophoneComponent.durationEstim.allowedTypes:[]
MicrophoneComponent.durationEstim.allowedUpdates:None
MicrophoneComponent.durationEstim.allowedVals:[]
MicrophoneComponent.durationEstim.categ:Basic
MicrophoneComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
MicrophoneComponent.durationEstim.label:Expected duration (s)
MicrophoneComponent.durationEstim.readOnly:False
MicrophoneComponent.durationEstim.staticUpdater:None
MicrophoneComponent.durationEstim.updates:None
MicrophoneComponent.durationEstim.val:
MicrophoneComponent.durationEstim.valType:code
MicrophoneComponent.name.default:mic_1
MicrophoneComponent.name.allowedTypes:[]
MicrophoneComponent.name.allowedUpdates:None
MicrophoneComponent.name.allowedVals:[]
MicrophoneComponent.name.categ:Basic
MicrophoneComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
MicrophoneComponent.name.label:Name
MicrophoneComponent.name.readOnly:False
MicrophoneComponent.name.staticUpdater:None
MicrophoneComponent.name.val:mic_1
MicrophoneComponent.name.valType:code
MicrophoneComponent.startEstim.default:
MicrophoneComponent.startEstim.allowedTypes:[]
MicrophoneComponent.startEstim.allowedUpdates:None
MicrophoneComponent.startEstim.allowedVals:[]
MicrophoneComponent.startEstim.categ:Basic
MicrophoneComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
MicrophoneComponent.startEstim.label:Expected start (s)
MicrophoneComponent.startEstim.readOnly:False
MicrophoneComponent.startEstim.staticUpdater:None
MicrophoneComponent.startEstim.updates:None
MicrophoneComponent.startEstim.val:
MicrophoneComponent.startEstim.valType:code
MicrophoneComponent.startType.default:'time (s)'
MicrophoneComponent.startType.allowedTypes:[]
MicrophoneComponent.startType.allowedUpdates:None
MicrophoneComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
MicrophoneComponent.startType.categ:Basic
MicrophoneComponent.startType.hint:How do you want to define your start point?
MicrophoneComponent.startType.label:start type
MicrophoneComponent.startType.readOnly:False
MicrophoneComponent.startType.staticUpdater:None
MicrophoneComponent.startType.updates:None
MicrophoneComponent.startType.val:time (s)
MicrophoneComponent.startType.valType:str
MicrophoneComponent.startVal.default:0.0
MicrophoneComponent.startVal.allowedTypes:[]
MicrophoneComponent.startVal.allowedUpdates:None
MicrophoneComponent.startVal.allowedVals:[]
MicrophoneComponent.startVal.categ:Basic
MicrophoneComponent.startVal.hint:When does the component start?
MicrophoneComponent.startVal.label:Start
MicrophoneComponent.startVal.readOnly:False
MicrophoneComponent.startVal.staticUpdater:None
MicrophoneComponent.startVal.updates:None
MicrophoneComponent.startVal.val:0.0
MicrophoneComponent.startVal.valType:code
MicrophoneComponent.stereo.default:False
MicrophoneComponent.stereo.allowedTypes:[]
MicrophoneComponent.stereo.allowedUpdates:None
MicrophoneComponent.stereo.allowedVals:[]
MicrophoneComponent.stereo.categ:Basic
MicrophoneComponent.stereo.hint:Record two channels (stereo) or one (mono, smaller file)
MicrophoneComponent.stereo.label:Stereo
MicrophoneComponent.stereo.readOnly:False
MicrophoneComponent.stereo.staticUpdater:None
MicrophoneComponent.stereo.updates:None
MicrophoneComponent.stereo.val:False
MicrophoneComponent.stereo.valType:bool
MicrophoneComponent.stopType.default:'duration (s)'
MicrophoneComponent.stopType.allowedTypes:[]
MicrophoneComponent.stopType.allowedUpdates:None
MicrophoneComponent.stopType.allowedVals:['duration (s)']
MicrophoneComponent.stopType.categ:Basic
MicrophoneComponent.stopType.hint:The duration of the recording in seconds; blank = 0 sec
MicrophoneComponent.stopType.label:stop type
MicrophoneComponent.stopType.readOnly:False
MicrophoneComponent.stopType.staticUpdater:None
MicrophoneComponent.stopType.updates:None
MicrophoneComponent.stopType.val:duration (s)
MicrophoneComponent.stopType.valType:str
MicrophoneComponent.stopVal.default:2.0
MicrophoneComponent.stopVal.allowedTypes:[]
MicrophoneComponent.stopVal.allowedUpdates:[]
MicrophoneComponent.stopVal.allowedVals:[]
MicrophoneComponent.stopVal.categ:Basic
MicrophoneComponent.stopVal.hint:When does the component end? (blank is endless)
MicrophoneComponent.stopVal.label:Stop
MicrophoneComponent.stopVal.readOnly:False
MicrophoneComponent.stopVal.staticUpdater:None
MicrophoneComponent.stopVal.updates:constant
MicrophoneComponent.stopVal.val:2.0
MicrophoneComponent.stopVal.valType:code
MouseComponent.order:['name', 'forceEndRoutineOnPress', 'saveMouseState', 'timeRelativeTo', 'newClicksOnly', 'clickable', 'saveParamsClickable']
MouseComponent.clickable.default:
MouseComponent.clickable.allowedTypes:[]
MouseComponent.clickable.allowedUpdates:None
MouseComponent.clickable.allowedVals:[]
MouseComponent.clickable.categ:Basic
MouseComponent.clickable.hint:A comma-separated list of your stimulus names that can be "clicked" by the participant. e.g. target, foil
MouseComponent.clickable.label:Clickable stimuli
MouseComponent.clickable.readOnly:False
MouseComponent.clickable.staticUpdater:None
MouseComponent.clickable.updates:constant
MouseComponent.clickable.val:
MouseComponent.clickable.valType:code
MouseComponent.durationEstim.default:
MouseComponent.durationEstim.allowedTypes:[]
MouseComponent.durationEstim.allowedUpdates:None
MouseComponent.durationEstim.allowedVals:[]
MouseComponent.durationEstim.categ:Basic
MouseComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
MouseComponent.durationEstim.label:Expected duration (s)
MouseComponent.durationEstim.readOnly:False
MouseComponent.durationEstim.staticUpdater:None
MouseComponent.durationEstim.updates:None
MouseComponent.durationEstim.val:
MouseComponent.durationEstim.valType:code
MouseComponent.forceEndRoutineOnPress.default:'any click'
MouseComponent.forceEndRoutineOnPress.allowedTypes:[]
MouseComponent.forceEndRoutineOnPress.allowedUpdates:None
MouseComponent.forceEndRoutineOnPress.allowedVals:['never', 'any click', 'valid click']
MouseComponent.forceEndRoutineOnPress.categ:Basic
MouseComponent.forceEndRoutineOnPress.hint:Should a button press force the end of the routine (e.g end the trial)?
MouseComponent.forceEndRoutineOnPress.label:End Routine on press
MouseComponent.forceEndRoutineOnPress.readOnly:False
MouseComponent.forceEndRoutineOnPress.staticUpdater:None
MouseComponent.forceEndRoutineOnPress.updates:constant
MouseComponent.forceEndRoutineOnPress.val:any click
MouseComponent.forceEndRoutineOnPress.valType:str
MouseComponent.name.default:mouse
MouseComponent.name.allowedTypes:[]
MouseComponent.name.allowedUpdates:None
MouseComponent.name.allowedVals:[]
MouseComponent.name.categ:Basic
MouseComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
MouseComponent.name.label:Name
MouseComponent.name.readOnly:False
MouseComponent.name.staticUpdater:None
MouseComponent.name.val:mouse
MouseComponent.name.valType:code
MouseComponent.newClicksOnly.default:True
MouseComponent.newClicksOnly.allowedTypes:[]
MouseComponent.newClicksOnly.allowedUpdates:None
MouseComponent.newClicksOnly.allowedVals:[]
MouseComponent.newClicksOnly.categ:Basic
MouseComponent.newClicksOnly.hint:If the mouse button is already down when we startchecking then wait for it to be released beforerecording as a new click.
MouseComponent.newClicksOnly.label:New clicks only
MouseComponent.newClicksOnly.readOnly:False
MouseComponent.newClicksOnly.staticUpdater:None
MouseComponent.newClicksOnly.updates:constant
MouseComponent.newClicksOnly.val:True
MouseComponent.newClicksOnly.valType:bool
MouseComponent.saveMouseState.default:'final'
MouseComponent.saveMouseState.allowedTypes:[]
MouseComponent.saveMouseState.allowedUpdates:None
MouseComponent.saveMouseState.allowedVals:['final', 'on click', 'every frame', 'never']
MouseComponent.saveMouseState.categ:Basic
MouseComponent.saveMouseState.hint:How often should the mouse state (x,y,buttons) be stored? On every video frame, every click or just at the end of the Routine?
MouseComponent.saveMouseState.label:Save mouse state
MouseComponent.saveMouseState.readOnly:False
MouseComponent.saveMouseState.staticUpdater:None
MouseComponent.saveMouseState.updates:None
MouseComponent.saveMouseState.val:final
MouseComponent.saveMouseState.valType:str
MouseComponent.saveParamsClickable.default:name,
MouseComponent.saveParamsClickable.allowedTypes:[]
MouseComponent.saveParamsClickable.allowedUpdates:[]
MouseComponent.saveParamsClickable.allowedVals:[]
MouseComponent.saveParamsClickable.categ:Basic
MouseComponent.saveParamsClickable.hint:The params (e.g. name, text), for which you want to store the current value, for the stimulus that was"clicked" by the mouse. Make sure that all the clickable objects have all these params.
MouseComponent.saveParamsClickable.label:Store params for clicked
MouseComponent.saveParamsClickable.readOnly:False
MouseComponent.saveParamsClickable.staticUpdater:None
MouseComponent.saveParamsClickable.updates:constant
MouseComponent.saveParamsClickable.val:name,
MouseComponent.saveParamsClickable.valType:code
MouseComponent.startEstim.default:
MouseComponent.startEstim.allowedTypes:[]
MouseComponent.startEstim.allowedUpdates:None
MouseComponent.startEstim.allowedVals:[]
MouseComponent.startEstim.categ:Basic
MouseComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
MouseComponent.startEstim.label:Expected start (s)
MouseComponent.startEstim.readOnly:False
MouseComponent.startEstim.staticUpdater:None
MouseComponent.startEstim.updates:None
MouseComponent.startEstim.val:
MouseComponent.startEstim.valType:code
MouseComponent.startType.default:'time (s)'
MouseComponent.startType.allowedTypes:[]
MouseComponent.startType.allowedUpdates:None
MouseComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
MouseComponent.startType.categ:Basic
MouseComponent.startType.hint:How do you want to define your start point?
MouseComponent.startType.label:start type
MouseComponent.startType.readOnly:False
MouseComponent.startType.staticUpdater:None
MouseComponent.startType.updates:None
MouseComponent.startType.val:time (s)
MouseComponent.startType.valType:str
MouseComponent.startVal.default:0.0
MouseComponent.startVal.allowedTypes:[]
MouseComponent.startVal.allowedUpdates:None
MouseComponent.startVal.allowedVals:[]
MouseComponent.startVal.categ:Basic
MouseComponent.startVal.hint:When does the component start?
MouseComponent.startVal.label:Start
MouseComponent.startVal.readOnly:False
MouseComponent.startVal.staticUpdater:None
MouseComponent.startVal.updates:None
MouseComponent.startVal.val:0.0
MouseComponent.startVal.valType:code
MouseComponent.stopType.default:'duration (s)'
MouseComponent.stopType.allowedTypes:[]
MouseComponent.stopType.allowedUpdates:None
MouseComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
MouseComponent.stopType.categ:Basic
MouseComponent.stopType.hint:How do you want to define your end point?
MouseComponent.stopType.label:stop type
MouseComponent.stopType.readOnly:False
MouseComponent.stopType.staticUpdater:None
MouseComponent.stopType.updates:None
MouseComponent.stopType.val:duration (s)
MouseComponent.stopType.valType:str
MouseComponent.stopVal.default:1.0
MouseComponent.stopVal.allowedTypes:[]
MouseComponent.stopVal.allowedUpdates:[]
MouseComponent.stopVal.allowedVals:[]
MouseComponent.stopVal.categ:Basic
MouseComponent.stopVal.hint:When does the component end? (blank is endless)
MouseComponent.stopVal.label:Stop
MouseComponent.stopVal.readOnly:False
MouseComponent.stopVal.staticUpdater:None
MouseComponent.stopVal.updates:constant
MouseComponent.stopVal.val:1.0
MouseComponent.stopVal.valType:code
MouseComponent.timeRelativeTo.default:'mouse onset'
MouseComponent.timeRelativeTo.allowedTypes:[]
MouseComponent.timeRelativeTo.allowedUpdates:None
MouseComponent.timeRelativeTo.allowedVals:['mouse onset', 'experiment', 'routine']
MouseComponent.timeRelativeTo.categ:Basic
MouseComponent.timeRelativeTo.hint:What should the values of mouse.time should be relative to?
MouseComponent.timeRelativeTo.label:Time relative to
MouseComponent.timeRelativeTo.readOnly:False
MouseComponent.timeRelativeTo.staticUpdater:None
MouseComponent.timeRelativeTo.updates:constant
MouseComponent.timeRelativeTo.val:mouse onset
MouseComponent.timeRelativeTo.valType:str
MovieComponent.order:['forceEndRoutine']
MovieComponent.No audio.default:False
MovieComponent.No audio.allowedTypes:[]
MovieComponent.No audio.allowedUpdates:None
MovieComponent.No audio.allowedVals:[]
MovieComponent.No audio.categ:Basic
MovieComponent.No audio.hint:Prevent the audio stream from being loaded/processed (moviepy and opencv only)
MovieComponent.No audio.label:No audio
MovieComponent.No audio.readOnly:False
MovieComponent.No audio.staticUpdater:None
MovieComponent.No audio.updates:None
MovieComponent.No audio.val:False
MovieComponent.No audio.valType:bool
MovieComponent.backend.default:'moviepy'
MovieComponent.backend.allowedTypes:[]
MovieComponent.backend.allowedUpdates:None
MovieComponent.backend.allowedVals:['moviepy', 'avbin', 'opencv']
MovieComponent.backend.categ:Basic
MovieComponent.backend.hint:What underlying lib to use for loading movies
MovieComponent.backend.label:backend
MovieComponent.backend.readOnly:False
MovieComponent.backend.staticUpdater:None
MovieComponent.backend.updates:None
MovieComponent.backend.val:moviepy
MovieComponent.backend.valType:str
MovieComponent.durationEstim.default:
MovieComponent.durationEstim.allowedTypes:[]
MovieComponent.durationEstim.allowedUpdates:None
MovieComponent.durationEstim.allowedVals:[]
MovieComponent.durationEstim.categ:Basic
MovieComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
MovieComponent.durationEstim.label:Expected duration (s)
MovieComponent.durationEstim.readOnly:False
MovieComponent.durationEstim.staticUpdater:None
MovieComponent.durationEstim.updates:None
MovieComponent.durationEstim.val:
MovieComponent.durationEstim.valType:code
MovieComponent.forceEndRoutine.default:False
MovieComponent.forceEndRoutine.allowedTypes:[]
MovieComponent.forceEndRoutine.allowedUpdates:[]
MovieComponent.forceEndRoutine.allowedVals:[]
MovieComponent.forceEndRoutine.categ:Basic
MovieComponent.forceEndRoutine.hint:Should the end of the movie cause the end of the routine (e.g. trial)?
MovieComponent.forceEndRoutine.label:Force end of Routine
MovieComponent.forceEndRoutine.readOnly:False
MovieComponent.forceEndRoutine.staticUpdater:None
MovieComponent.forceEndRoutine.updates:constant
MovieComponent.forceEndRoutine.val:False
MovieComponent.forceEndRoutine.valType:bool
MovieComponent.movie.default:''
MovieComponent.movie.allowedTypes:[]
MovieComponent.movie.allowedUpdates:['constant', 'set every repeat']
MovieComponent.movie.allowedVals:[]
MovieComponent.movie.categ:Basic
MovieComponent.movie.hint:A filename for the movie (including path)
MovieComponent.movie.label:Movie file
MovieComponent.movie.readOnly:False
MovieComponent.movie.staticUpdater:None
MovieComponent.movie.updates:constant
MovieComponent.movie.val:
MovieComponent.movie.valType:str
MovieComponent.name.default:movie
MovieComponent.name.allowedTypes:[]
MovieComponent.name.allowedUpdates:None
MovieComponent.name.allowedVals:[]
MovieComponent.name.categ:Basic
MovieComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
MovieComponent.name.label:Name
MovieComponent.name.readOnly:False
MovieComponent.name.staticUpdater:None
MovieComponent.name.val:movie
MovieComponent.name.valType:code
MovieComponent.opacity.default:1
MovieComponent.opacity.allowedTypes:[]
MovieComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
MovieComponent.opacity.allowedVals:[]
MovieComponent.opacity.categ:Basic
MovieComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
MovieComponent.opacity.label:Opacity
MovieComponent.opacity.readOnly:False
MovieComponent.opacity.staticUpdater:None
MovieComponent.opacity.updates:constant
MovieComponent.opacity.val:1
MovieComponent.opacity.valType:code
MovieComponent.ori.default:0
MovieComponent.ori.allowedTypes:[]
MovieComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
MovieComponent.ori.allowedVals:[]
MovieComponent.ori.categ:Basic
MovieComponent.ori.hint:Orientation of this stimulus (in deg)
MovieComponent.ori.label:Orientation
MovieComponent.ori.readOnly:False
MovieComponent.ori.staticUpdater:None
MovieComponent.ori.updates:constant
MovieComponent.ori.val:0
MovieComponent.ori.valType:code
MovieComponent.pos.default:(0, 0)
MovieComponent.pos.allowedTypes:[]
MovieComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
MovieComponent.pos.allowedVals:[]
MovieComponent.pos.categ:Basic
MovieComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
MovieComponent.pos.label:Position [x,y]
MovieComponent.pos.readOnly:False
MovieComponent.pos.staticUpdater:None
MovieComponent.pos.updates:constant
MovieComponent.pos.val:(0, 0)
MovieComponent.pos.valType:code
MovieComponent.size.default:
MovieComponent.size.allowedTypes:[]
MovieComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
MovieComponent.size.allowedVals:[]
MovieComponent.size.categ:Basic
MovieComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
MovieComponent.size.label:Size [w,h]
MovieComponent.size.readOnly:False
MovieComponent.size.staticUpdater:None
MovieComponent.size.updates:constant
MovieComponent.size.val:
MovieComponent.size.valType:code
MovieComponent.startEstim.default:
MovieComponent.startEstim.allowedTypes:[]
MovieComponent.startEstim.allowedUpdates:None
MovieComponent.startEstim.allowedVals:[]
MovieComponent.startEstim.categ:Basic
MovieComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
MovieComponent.startEstim.label:Expected start (s)
MovieComponent.startEstim.readOnly:False
MovieComponent.startEstim.staticUpdater:None
MovieComponent.startEstim.updates:None
MovieComponent.startEstim.val:
MovieComponent.startEstim.valType:code
MovieComponent.startType.default:'time (s)'
MovieComponent.startType.allowedTypes:[]
MovieComponent.startType.allowedUpdates:None
MovieComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
MovieComponent.startType.categ:Basic
MovieComponent.startType.hint:How do you want to define your start point?
MovieComponent.startType.label:start type
MovieComponent.startType.readOnly:False
MovieComponent.startType.staticUpdater:None
MovieComponent.startType.updates:None
MovieComponent.startType.val:time (s)
MovieComponent.startType.valType:str
MovieComponent.startVal.default:0.0
MovieComponent.startVal.allowedTypes:[]
MovieComponent.startVal.allowedUpdates:None
MovieComponent.startVal.allowedVals:[]
MovieComponent.startVal.categ:Basic
MovieComponent.startVal.hint:When does the component start?
MovieComponent.startVal.label:Start
MovieComponent.startVal.readOnly:False
MovieComponent.startVal.staticUpdater:None
MovieComponent.startVal.updates:None
MovieComponent.startVal.val:0.0
MovieComponent.startVal.valType:code
MovieComponent.stopType.default:'duration (s)'
MovieComponent.stopType.allowedTypes:[]
MovieComponent.stopType.allowedUpdates:None
MovieComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
MovieComponent.stopType.categ:Basic
MovieComponent.stopType.hint:How do you want to define your end point?
MovieComponent.stopType.label:stop type
MovieComponent.stopType.readOnly:False
MovieComponent.stopType.staticUpdater:None
MovieComponent.stopType.updates:None
MovieComponent.stopType.val:duration (s)
MovieComponent.stopType.valType:str
MovieComponent.stopVal.default:1.0
MovieComponent.stopVal.allowedTypes:[]
MovieComponent.stopVal.allowedUpdates:[]
MovieComponent.stopVal.allowedVals:[]
MovieComponent.stopVal.categ:Basic
MovieComponent.stopVal.hint:When does the component end? (blank to use the duration of the media)
MovieComponent.stopVal.label:Stop
MovieComponent.stopVal.readOnly:False
MovieComponent.stopVal.staticUpdater:None
MovieComponent.stopVal.updates:constant
MovieComponent.stopVal.val:1.0
MovieComponent.stopVal.valType:code
MovieComponent.units.default:'from exp settings'
MovieComponent.units.allowedTypes:[]
MovieComponent.units.allowedUpdates:None
MovieComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
MovieComponent.units.categ:Basic
MovieComponent.units.hint:Units of dimensions for this stimulus
MovieComponent.units.label:Units
MovieComponent.units.readOnly:False
MovieComponent.units.staticUpdater:None
MovieComponent.units.updates:None
MovieComponent.units.val:from exp settings
MovieComponent.units.valType:str
NoiseStimComponent.order:['tex', 'mask']
NoiseStimComponent.blendmode.default:'avg'
NoiseStimComponent.blendmode.allowedTypes:[]
NoiseStimComponent.blendmode.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.blendmode.allowedVals:['avg', 'add']
NoiseStimComponent.blendmode.categ:Basic
NoiseStimComponent.blendmode.hint:OpenGL Blendmode [avg, add (avg is most common mode in PsychoPy, add is used if you want to generate the sum of two components)]
NoiseStimComponent.blendmode.label:OpenGL blend mode
NoiseStimComponent.blendmode.readOnly:False
NoiseStimComponent.blendmode.staticUpdater:None
NoiseStimComponent.blendmode.updates:constant
NoiseStimComponent.blendmode.val:avg
NoiseStimComponent.blendmode.valType:str
NoiseStimComponent.color.default:[1,1,1]
NoiseStimComponent.color.allowedTypes:[]
NoiseStimComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.color.allowedVals:[]
NoiseStimComponent.color.categ:Basic
NoiseStimComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
NoiseStimComponent.color.label:Color
NoiseStimComponent.color.readOnly:False
NoiseStimComponent.color.staticUpdater:None
NoiseStimComponent.color.updates:constant
NoiseStimComponent.color.val:$[1,1,1]
NoiseStimComponent.color.valType:str
NoiseStimComponent.colorSpace.default:'rgb'
NoiseStimComponent.colorSpace.allowedTypes:[]
NoiseStimComponent.colorSpace.allowedUpdates:None
NoiseStimComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
NoiseStimComponent.colorSpace.categ:Basic
NoiseStimComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
NoiseStimComponent.colorSpace.label:Color space
NoiseStimComponent.colorSpace.readOnly:False
NoiseStimComponent.colorSpace.staticUpdater:None
NoiseStimComponent.colorSpace.updates:constant
NoiseStimComponent.colorSpace.val:rgb
NoiseStimComponent.colorSpace.valType:str
NoiseStimComponent.contrast.default:1.0
NoiseStimComponent.contrast.allowedTypes:[]
NoiseStimComponent.contrast.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.contrast.allowedVals:[]
NoiseStimComponent.contrast.categ:Advanced
NoiseStimComponent.contrast.hint:Michaelson contrast of the image
NoiseStimComponent.contrast.label:Contrast
NoiseStimComponent.contrast.readOnly:False
NoiseStimComponent.contrast.staticUpdater:None
NoiseStimComponent.contrast.updates:constant
NoiseStimComponent.contrast.val:1.0
NoiseStimComponent.contrast.valType:code
NoiseStimComponent.durationEstim.default:
NoiseStimComponent.durationEstim.allowedTypes:[]
NoiseStimComponent.durationEstim.allowedUpdates:None
NoiseStimComponent.durationEstim.allowedVals:[]
NoiseStimComponent.durationEstim.categ:Basic
NoiseStimComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
NoiseStimComponent.durationEstim.label:Expected duration (s)
NoiseStimComponent.durationEstim.readOnly:False
NoiseStimComponent.durationEstim.staticUpdater:None
NoiseStimComponent.durationEstim.updates:None
NoiseStimComponent.durationEstim.val:
NoiseStimComponent.durationEstim.valType:code
NoiseStimComponent.interpolate.default:'nearest'
NoiseStimComponent.interpolate.allowedTypes:[]
NoiseStimComponent.interpolate.allowedUpdates:[]
NoiseStimComponent.interpolate.allowedVals:['linear', 'nearest']
NoiseStimComponent.interpolate.categ:Advanced
NoiseStimComponent.interpolate.hint:How should the image be interpolated if/when rescaled
NoiseStimComponent.interpolate.label:Interpolate
NoiseStimComponent.interpolate.readOnly:False
NoiseStimComponent.interpolate.staticUpdater:None
NoiseStimComponent.interpolate.updates:constant
NoiseStimComponent.interpolate.val:nearest
NoiseStimComponent.interpolate.valType:str
NoiseStimComponent.mask.default:'None'
NoiseStimComponent.mask.allowedTypes:[]
NoiseStimComponent.mask.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.mask.allowedVals:[]
NoiseStimComponent.mask.categ:Advanced
NoiseStimComponent.mask.hint:An image to define the alpha mask (ie shape)- gauss, circle... or a filename (including path)
NoiseStimComponent.mask.label:Mask
NoiseStimComponent.mask.readOnly:False
NoiseStimComponent.mask.staticUpdater:None
NoiseStimComponent.mask.updates:constant
NoiseStimComponent.mask.val:None
NoiseStimComponent.mask.valType:str
NoiseStimComponent.name.default:noise
NoiseStimComponent.name.allowedTypes:[]
NoiseStimComponent.name.allowedUpdates:None
NoiseStimComponent.name.allowedVals:[]
NoiseStimComponent.name.categ:Basic
NoiseStimComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
NoiseStimComponent.name.label:Name
NoiseStimComponent.name.readOnly:False
NoiseStimComponent.name.staticUpdater:None
NoiseStimComponent.name.val:noise
NoiseStimComponent.name.valType:code
NoiseStimComponent.noiseBW.default:1
NoiseStimComponent.noiseBW.allowedTypes:[]
NoiseStimComponent.noiseBW.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseBW.allowedVals:[]
NoiseStimComponent.noiseBW.categ:Gabor/Isotropic
NoiseStimComponent.noiseBW.hint:Spatial frequency bandwidth in octaves - Full width half height
NoiseStimComponent.noiseBW.label:Spatial frequency bandwidth
NoiseStimComponent.noiseBW.readOnly:False
NoiseStimComponent.noiseBW.staticUpdater:None
NoiseStimComponent.noiseBW.updates:constant
NoiseStimComponent.noiseBW.val:1
NoiseStimComponent.noiseBW.valType:code
NoiseStimComponent.noiseBWO.default:1
NoiseStimComponent.noiseBWO.allowedTypes:[]
NoiseStimComponent.noiseBWO.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseBWO.allowedVals:[]
NoiseStimComponent.noiseBWO.categ:Gabor/Isotropic
NoiseStimComponent.noiseBWO.hint:Orientation bandwidth in degrees (Gabor only) - Full width half height
NoiseStimComponent.noiseBWO.label:Orientation bandwidth for Gabor noise
NoiseStimComponent.noiseBWO.readOnly:False
NoiseStimComponent.noiseBWO.staticUpdater:None
NoiseStimComponent.noiseBWO.updates:constant
NoiseStimComponent.noiseBWO.val:1
NoiseStimComponent.noiseBWO.valType:code
NoiseStimComponent.noiseBaseSf.default:8.0
NoiseStimComponent.noiseBaseSf.allowedTypes:[]
NoiseStimComponent.noiseBaseSf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseBaseSf.allowedVals:[]
NoiseStimComponent.noiseBaseSf.categ:Gabor/Isotropic
NoiseStimComponent.noiseBaseSf.hint:Base spatial frequency
NoiseStimComponent.noiseBaseSf.label:Base spatial frequency
NoiseStimComponent.noiseBaseSf.readOnly:False
NoiseStimComponent.noiseBaseSf.staticUpdater:None
NoiseStimComponent.noiseBaseSf.updates:constant
NoiseStimComponent.noiseBaseSf.val:8.0
NoiseStimComponent.noiseBaseSf.valType:code
NoiseStimComponent.noiseClip.default:3.0
NoiseStimComponent.noiseClip.allowedTypes:[]
NoiseStimComponent.noiseClip.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseClip.allowedVals:[]
NoiseStimComponent.noiseClip.categ: Noise
NoiseStimComponent.noiseClip.hint:Truncate high and low values beyond stated standard deviations from mean (not used for binary or uniform noise; scales rather than clips normal noise). The higher this is the lower the final RMS contrast. If low noise may appear binary
NoiseStimComponent.noiseClip.label:Number of standard deviations at which to clip noise
NoiseStimComponent.noiseClip.readOnly:False
NoiseStimComponent.noiseClip.staticUpdater:None
NoiseStimComponent.noiseClip.updates:constant
NoiseStimComponent.noiseClip.val:3.0
NoiseStimComponent.noiseClip.valType:code
NoiseStimComponent.noiseElementSize.default:0.0625
NoiseStimComponent.noiseElementSize.allowedTypes:[]
NoiseStimComponent.noiseElementSize.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseElementSize.allowedVals:[]
NoiseStimComponent.noiseElementSize.categ:Binary/Normal/Uniform
NoiseStimComponent.noiseElementSize.hint:(Binary, Normal an Uniform only) Size of noise elements
NoiseStimComponent.noiseElementSize.label:Noise element size for pixelated noise
NoiseStimComponent.noiseElementSize.readOnly:False
NoiseStimComponent.noiseElementSize.staticUpdater:None
NoiseStimComponent.noiseElementSize.updates:constant
NoiseStimComponent.noiseElementSize.val:0.0625
NoiseStimComponent.noiseElementSize.valType:code
NoiseStimComponent.noiseFilterLower.default:1.0
NoiseStimComponent.noiseFilterLower.allowedTypes:[]
NoiseStimComponent.noiseFilterLower.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseFilterLower.allowedVals:[]
NoiseStimComponent.noiseFilterLower.categ:Filtered
NoiseStimComponent.noiseFilterLower.hint:Lower cutoff frequency
NoiseStimComponent.noiseFilterLower.label:Lower cut off frequency
NoiseStimComponent.noiseFilterLower.readOnly:False
NoiseStimComponent.noiseFilterLower.staticUpdater:None
NoiseStimComponent.noiseFilterLower.updates:constant
NoiseStimComponent.noiseFilterLower.val:1.0
NoiseStimComponent.noiseFilterLower.valType:code
NoiseStimComponent.noiseFilterOrder.default:0.0
NoiseStimComponent.noiseFilterOrder.allowedTypes:[]
NoiseStimComponent.noiseFilterOrder.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseFilterOrder.allowedVals:[]
NoiseStimComponent.noiseFilterOrder.categ:Filtered
NoiseStimComponent.noiseFilterOrder.hint:Order of filter - higher = steeper fall off, zero = no filter
NoiseStimComponent.noiseFilterOrder.label:Order of filter
NoiseStimComponent.noiseFilterOrder.readOnly:False
NoiseStimComponent.noiseFilterOrder.staticUpdater:None
NoiseStimComponent.noiseFilterOrder.updates:constant
NoiseStimComponent.noiseFilterOrder.val:0.0
NoiseStimComponent.noiseFilterOrder.valType:code
NoiseStimComponent.noiseFilterUpper.default:8.0
NoiseStimComponent.noiseFilterUpper.allowedTypes:[]
NoiseStimComponent.noiseFilterUpper.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseFilterUpper.allowedVals:[]
NoiseStimComponent.noiseFilterUpper.categ:Filtered
NoiseStimComponent.noiseFilterUpper.hint:Upper cutoff frequency
NoiseStimComponent.noiseFilterUpper.label:Upper cut off frequency
NoiseStimComponent.noiseFilterUpper.readOnly:False
NoiseStimComponent.noiseFilterUpper.staticUpdater:None
NoiseStimComponent.noiseFilterUpper.updates:constant
NoiseStimComponent.noiseFilterUpper.val:8.0
NoiseStimComponent.noiseFilterUpper.valType:code
NoiseStimComponent.noiseFractalPower.default:0.0
NoiseStimComponent.noiseFractalPower.allowedTypes:[]
NoiseStimComponent.noiseFractalPower.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseFractalPower.allowedVals:[]
NoiseStimComponent.noiseFractalPower.categ:Filtered
NoiseStimComponent.noiseFractalPower.hint:Exponent for spectral slope (A=f^Exponent) of noise negative exponents look nice. -1='pink noise', 0='white noise' (changes the spatial frequency spectrum - does not make the noise colourful)
NoiseStimComponent.noiseFractalPower.label:Skew in frequency spectrum
NoiseStimComponent.noiseFractalPower.readOnly:False
NoiseStimComponent.noiseFractalPower.staticUpdater:None
NoiseStimComponent.noiseFractalPower.updates:constant
NoiseStimComponent.noiseFractalPower.val:0.0
NoiseStimComponent.noiseFractalPower.valType:code
NoiseStimComponent.noiseImage.default:'None'
NoiseStimComponent.noiseImage.allowedTypes:[]
NoiseStimComponent.noiseImage.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseImage.allowedVals:[]
NoiseStimComponent.noiseImage.categ:Image noise
NoiseStimComponent.noiseImage.hint:An image from which to derive the frequency spectrum for the noise. Give filename (including path)
NoiseStimComponent.noiseImage.label:Image from which to derive noise spectrum
NoiseStimComponent.noiseImage.readOnly:False
NoiseStimComponent.noiseImage.staticUpdater:None
NoiseStimComponent.noiseImage.updates:constant
NoiseStimComponent.noiseImage.val:None
NoiseStimComponent.noiseImage.valType:str
NoiseStimComponent.noiseNewSample.default:'None'
NoiseStimComponent.noiseNewSample.allowedTypes:[]
NoiseStimComponent.noiseNewSample.allowedUpdates:[]
NoiseStimComponent.noiseNewSample.allowedVals:['None', 'Repeat', 'N-frames', 'Seconds']
NoiseStimComponent.noiseNewSample.categ: Noise
NoiseStimComponent.noiseNewSample.hint:How to update noise if not otherwise required by other changes (none, repeat, N-frames, Seconds)
NoiseStimComponent.noiseNewSample.label:How to update noise sample
NoiseStimComponent.noiseNewSample.readOnly:False
NoiseStimComponent.noiseNewSample.staticUpdater:None
NoiseStimComponent.noiseNewSample.updates:constant
NoiseStimComponent.noiseNewSample.val:None
NoiseStimComponent.noiseNewSample.valType:str
NoiseStimComponent.noiseNewSampleWhen.default:'1'
NoiseStimComponent.noiseNewSampleWhen.allowedTypes:[]
NoiseStimComponent.noiseNewSampleWhen.allowedUpdates:[]
NoiseStimComponent.noiseNewSampleWhen.allowedVals:[]
NoiseStimComponent.noiseNewSampleWhen.categ: Noise
NoiseStimComponent.noiseNewSampleWhen.hint:How often to update noise (in frames or seconds) - can be a variable, ignored if any noise characteristic is updating on every frame
NoiseStimComponent.noiseNewSampleWhen.label:When to update noise sample
NoiseStimComponent.noiseNewSampleWhen.readOnly:False
NoiseStimComponent.noiseNewSampleWhen.staticUpdater:None
NoiseStimComponent.noiseNewSampleWhen.updates:constant
NoiseStimComponent.noiseNewSampleWhen.val:1
NoiseStimComponent.noiseNewSampleWhen.valType:str
NoiseStimComponent.noiseType.default:'Binary'
NoiseStimComponent.noiseType.allowedTypes:[]
NoiseStimComponent.noiseType.allowedUpdates:[]
NoiseStimComponent.noiseType.allowedVals:['Binary', 'Normal', 'Uniform', 'Gabor', 'Isotropic', 'White', 'Filtered', 'Image']
NoiseStimComponent.noiseType.categ: Noise
NoiseStimComponent.noiseType.hint:Type of noise (Binary, Normal, Gabor, Isotropic, White, Coloured, Filtered, Image)
NoiseStimComponent.noiseType.label:Type of noise
NoiseStimComponent.noiseType.readOnly:False
NoiseStimComponent.noiseType.staticUpdater:None
NoiseStimComponent.noiseType.updates:constant
NoiseStimComponent.noiseType.val:Binary
NoiseStimComponent.noiseType.valType:str
NoiseStimComponent.opacity.default:1
NoiseStimComponent.opacity.allowedTypes:[]
NoiseStimComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.opacity.allowedVals:[]
NoiseStimComponent.opacity.categ:Basic
NoiseStimComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
NoiseStimComponent.opacity.label:Opacity
NoiseStimComponent.opacity.readOnly:False
NoiseStimComponent.opacity.staticUpdater:None
NoiseStimComponent.opacity.updates:constant
NoiseStimComponent.opacity.val:1
NoiseStimComponent.opacity.valType:code
NoiseStimComponent.ori.default:0
NoiseStimComponent.ori.allowedTypes:[]
NoiseStimComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.ori.allowedVals:[]
NoiseStimComponent.ori.categ:Advanced
NoiseStimComponent.ori.hint:Orientation of this stimulus (in deg)
NoiseStimComponent.ori.label:Orientation
NoiseStimComponent.ori.readOnly:False
NoiseStimComponent.ori.staticUpdater:None
NoiseStimComponent.ori.updates:constant
NoiseStimComponent.ori.val:0
NoiseStimComponent.ori.valType:code
NoiseStimComponent.phase.default:0.0
NoiseStimComponent.phase.allowedTypes:[]
NoiseStimComponent.phase.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.phase.allowedVals:[]
NoiseStimComponent.phase.categ:Advanced
NoiseStimComponent.phase.hint:Spatial positioning of the image  (wraps in range 0-1.0)
NoiseStimComponent.phase.label:Phase (in cycles)
NoiseStimComponent.phase.readOnly:False
NoiseStimComponent.phase.staticUpdater:None
NoiseStimComponent.phase.updates:constant
NoiseStimComponent.phase.val:0.0
NoiseStimComponent.phase.valType:code
NoiseStimComponent.pos.default:(0, 0)
NoiseStimComponent.pos.allowedTypes:[]
NoiseStimComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.pos.allowedVals:[]
NoiseStimComponent.pos.categ:Basic
NoiseStimComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
NoiseStimComponent.pos.label:Position [x,y]
NoiseStimComponent.pos.readOnly:False
NoiseStimComponent.pos.staticUpdater:None
NoiseStimComponent.pos.updates:constant
NoiseStimComponent.pos.val:(0, 0)
NoiseStimComponent.pos.valType:code
NoiseStimComponent.sf.default:None
NoiseStimComponent.sf.allowedTypes:[]
NoiseStimComponent.sf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.sf.allowedVals:[]
NoiseStimComponent.sf.categ:Advanced
NoiseStimComponent.sf.hint:Final spatial frequency of image in 1 or 2 dimensions, e.g. 4 or [2,3] use None to set to 1 cycle per unit length or 1 cycle per image if units=pix
NoiseStimComponent.sf.label:Final spatial frequency
NoiseStimComponent.sf.readOnly:False
NoiseStimComponent.sf.staticUpdater:None
NoiseStimComponent.sf.updates:constant
NoiseStimComponent.sf.val:None
NoiseStimComponent.sf.valType:code
NoiseStimComponent.size.default:(0.5, 0.5)
NoiseStimComponent.size.allowedTypes:[]
NoiseStimComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.size.allowedVals:[]
NoiseStimComponent.size.categ:Basic
NoiseStimComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
NoiseStimComponent.size.label:Size [w,h]
NoiseStimComponent.size.readOnly:False
NoiseStimComponent.size.staticUpdater:None
NoiseStimComponent.size.updates:constant
NoiseStimComponent.size.val:(0.5, 0.5)
NoiseStimComponent.size.valType:code
NoiseStimComponent.startEstim.default:
NoiseStimComponent.startEstim.allowedTypes:[]
NoiseStimComponent.startEstim.allowedUpdates:None
NoiseStimComponent.startEstim.allowedVals:[]
NoiseStimComponent.startEstim.categ:Basic
NoiseStimComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
NoiseStimComponent.startEstim.label:Expected start (s)
NoiseStimComponent.startEstim.readOnly:False
NoiseStimComponent.startEstim.staticUpdater:None
NoiseStimComponent.startEstim.updates:None
NoiseStimComponent.startEstim.val:
NoiseStimComponent.startEstim.valType:code
NoiseStimComponent.startType.default:'time (s)'
NoiseStimComponent.startType.allowedTypes:[]
NoiseStimComponent.startType.allowedUpdates:None
NoiseStimComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
NoiseStimComponent.startType.categ:Basic
NoiseStimComponent.startType.hint:How do you want to define your start point?
NoiseStimComponent.startType.label:start type
NoiseStimComponent.startType.readOnly:False
NoiseStimComponent.startType.staticUpdater:None
NoiseStimComponent.startType.updates:None
NoiseStimComponent.startType.val:time (s)
NoiseStimComponent.startType.valType:str
NoiseStimComponent.startVal.default:0.0
NoiseStimComponent.startVal.allowedTypes:[]
NoiseStimComponent.startVal.allowedUpdates:None
NoiseStimComponent.startVal.allowedVals:[]
NoiseStimComponent.startVal.categ:Basic
NoiseStimComponent.startVal.hint:When does the component start?
NoiseStimComponent.startVal.label:Start
NoiseStimComponent.startVal.readOnly:False
NoiseStimComponent.startVal.staticUpdater:None
NoiseStimComponent.startVal.updates:None
NoiseStimComponent.startVal.val:0.0
NoiseStimComponent.startVal.valType:code
NoiseStimComponent.stopType.default:'duration (s)'
NoiseStimComponent.stopType.allowedTypes:[]
NoiseStimComponent.stopType.allowedUpdates:None
NoiseStimComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
NoiseStimComponent.stopType.categ:Basic
NoiseStimComponent.stopType.hint:How do you want to define your end point?
NoiseStimComponent.stopType.label:stop type
NoiseStimComponent.stopType.readOnly:False
NoiseStimComponent.stopType.staticUpdater:None
NoiseStimComponent.stopType.updates:None
NoiseStimComponent.stopType.val:duration (s)
NoiseStimComponent.stopType.valType:str
NoiseStimComponent.stopVal.default:1.0
NoiseStimComponent.stopVal.allowedTypes:[]
NoiseStimComponent.stopVal.allowedUpdates:[]
NoiseStimComponent.stopVal.allowedVals:[]
NoiseStimComponent.stopVal.categ:Basic
NoiseStimComponent.stopVal.hint:When does the component end? (blank is endless)
NoiseStimComponent.stopVal.label:Stop
NoiseStimComponent.stopVal.readOnly:False
NoiseStimComponent.stopVal.staticUpdater:None
NoiseStimComponent.stopVal.updates:constant
NoiseStimComponent.stopVal.val:1.0
NoiseStimComponent.stopVal.valType:code
NoiseStimComponent.texture resolution.default:128
NoiseStimComponent.texture resolution.allowedTypes:[]
NoiseStimComponent.texture resolution.allowedUpdates:[]
NoiseStimComponent.texture resolution.allowedVals:['32', '64', '128', '256', '512']
NoiseStimComponent.texture resolution.categ:Advanced
NoiseStimComponent.texture resolution.hint:Resolution of the texture for standard ones such as sin, sqr etc. For most cases a value of 256 pixels will suffice
NoiseStimComponent.texture resolution.label:Texture resolution
NoiseStimComponent.texture resolution.readOnly:False
NoiseStimComponent.texture resolution.staticUpdater:None
NoiseStimComponent.texture resolution.updates:constant
NoiseStimComponent.texture resolution.val:128
NoiseStimComponent.texture resolution.valType:code
NoiseStimComponent.units.default:'from exp settings'
NoiseStimComponent.units.allowedTypes:[]
NoiseStimComponent.units.allowedUpdates:None
NoiseStimComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
NoiseStimComponent.units.categ:Basic
NoiseStimComponent.units.hint:Units of dimensions for this stimulus
NoiseStimComponent.units.label:Units
NoiseStimComponent.units.readOnly:False
NoiseStimComponent.units.staticUpdater:None
NoiseStimComponent.units.updates:None
NoiseStimComponent.units.val:from exp settings
NoiseStimComponent.units.valType:str
ParallelOutComponent.order:['address', 'startData', 'stopData']
ParallelOutComponent.address.default:'0x0378'
ParallelOutComponent.address.allowedTypes:[]
ParallelOutComponent.address.allowedUpdates:None
ParallelOutComponent.address.allowedVals:['0x0378', '0x03BC', 'LabJack U3']
ParallelOutComponent.address.categ:Basic
ParallelOutComponent.address.hint:Parallel port to be used (you can change these options in preferences>general)
ParallelOutComponent.address.label:Port address
ParallelOutComponent.address.readOnly:False
ParallelOutComponent.address.staticUpdater:None
ParallelOutComponent.address.updates:None
ParallelOutComponent.address.val:0x0378
ParallelOutComponent.address.valType:str
ParallelOutComponent.durationEstim.default:
ParallelOutComponent.durationEstim.allowedTypes:[]
ParallelOutComponent.durationEstim.allowedUpdates:None
ParallelOutComponent.durationEstim.allowedVals:[]
ParallelOutComponent.durationEstim.categ:Basic
ParallelOutComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
ParallelOutComponent.durationEstim.label:Expected duration (s)
ParallelOutComponent.durationEstim.readOnly:False
ParallelOutComponent.durationEstim.staticUpdater:None
ParallelOutComponent.durationEstim.updates:None
ParallelOutComponent.durationEstim.val:
ParallelOutComponent.durationEstim.valType:code
ParallelOutComponent.name.default:p_port
ParallelOutComponent.name.allowedTypes:[]
ParallelOutComponent.name.allowedUpdates:None
ParallelOutComponent.name.allowedVals:[]
ParallelOutComponent.name.categ:Basic
ParallelOutComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
ParallelOutComponent.name.label:Name
ParallelOutComponent.name.readOnly:False
ParallelOutComponent.name.staticUpdater:None
ParallelOutComponent.name.val:p_port
ParallelOutComponent.name.valType:code
ParallelOutComponent.startData.default:1
ParallelOutComponent.startData.allowedTypes:[]
ParallelOutComponent.startData.allowedUpdates:None
ParallelOutComponent.startData.allowedVals:[]
ParallelOutComponent.startData.categ:Basic
ParallelOutComponent.startData.hint:Data to be sent at 'start'
ParallelOutComponent.startData.label:Start data
ParallelOutComponent.startData.readOnly:False
ParallelOutComponent.startData.staticUpdater:None
ParallelOutComponent.startData.updates:None
ParallelOutComponent.startData.val:1
ParallelOutComponent.startData.valType:code
ParallelOutComponent.startEstim.default:
ParallelOutComponent.startEstim.allowedTypes:[]
ParallelOutComponent.startEstim.allowedUpdates:None
ParallelOutComponent.startEstim.allowedVals:[]
ParallelOutComponent.startEstim.categ:Basic
ParallelOutComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
ParallelOutComponent.startEstim.label:Expected start (s)
ParallelOutComponent.startEstim.readOnly:False
ParallelOutComponent.startEstim.staticUpdater:None
ParallelOutComponent.startEstim.updates:None
ParallelOutComponent.startEstim.val:
ParallelOutComponent.startEstim.valType:code
ParallelOutComponent.startType.default:'time (s)'
ParallelOutComponent.startType.allowedTypes:[]
ParallelOutComponent.startType.allowedUpdates:None
ParallelOutComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
ParallelOutComponent.startType.categ:Basic
ParallelOutComponent.startType.hint:How do you want to define your start point?
ParallelOutComponent.startType.label:start type
ParallelOutComponent.startType.readOnly:False
ParallelOutComponent.startType.staticUpdater:None
ParallelOutComponent.startType.updates:None
ParallelOutComponent.startType.val:time (s)
ParallelOutComponent.startType.valType:str
ParallelOutComponent.startVal.default:0.0
ParallelOutComponent.startVal.allowedTypes:[]
ParallelOutComponent.startVal.allowedUpdates:None
ParallelOutComponent.startVal.allowedVals:[]
ParallelOutComponent.startVal.categ:Basic
ParallelOutComponent.startVal.hint:When does the component start?
ParallelOutComponent.startVal.label:Start
ParallelOutComponent.startVal.readOnly:False
ParallelOutComponent.startVal.staticUpdater:None
ParallelOutComponent.startVal.updates:None
ParallelOutComponent.startVal.val:0.0
ParallelOutComponent.startVal.valType:code
ParallelOutComponent.stopData.default:0
ParallelOutComponent.stopData.allowedTypes:[]
ParallelOutComponent.stopData.allowedUpdates:None
ParallelOutComponent.stopData.allowedVals:[]
ParallelOutComponent.stopData.categ:Basic
ParallelOutComponent.stopData.hint:Data to be sent at 'end'
ParallelOutComponent.stopData.label:Stop data
ParallelOutComponent.stopData.readOnly:False
ParallelOutComponent.stopData.staticUpdater:None
ParallelOutComponent.stopData.updates:None
ParallelOutComponent.stopData.val:0
ParallelOutComponent.stopData.valType:code
ParallelOutComponent.stopType.default:'duration (s)'
ParallelOutComponent.stopType.allowedTypes:[]
ParallelOutComponent.stopType.allowedUpdates:None
ParallelOutComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
ParallelOutComponent.stopType.categ:Basic
ParallelOutComponent.stopType.hint:How do you want to define your end point?
ParallelOutComponent.stopType.label:stop type
ParallelOutComponent.stopType.readOnly:False
ParallelOutComponent.stopType.staticUpdater:None
ParallelOutComponent.stopType.updates:None
ParallelOutComponent.stopType.val:duration (s)
ParallelOutComponent.stopType.valType:str
ParallelOutComponent.stopVal.default:1.0
ParallelOutComponent.stopVal.allowedTypes:[]
ParallelOutComponent.stopVal.allowedUpdates:[]
ParallelOutComponent.stopVal.allowedVals:[]
ParallelOutComponent.stopVal.categ:Basic
ParallelOutComponent.stopVal.hint:When does the component end? (blank is endless)
ParallelOutComponent.stopVal.label:Stop
ParallelOutComponent.stopVal.readOnly:False
ParallelOutComponent.stopVal.staticUpdater:None
ParallelOutComponent.stopVal.updates:constant
ParallelOutComponent.stopVal.val:1.0
ParallelOutComponent.stopVal.valType:code
ParallelOutComponent.syncScreen.default:True
ParallelOutComponent.syncScreen.allowedTypes:[]
ParallelOutComponent.syncScreen.allowedUpdates:[]
ParallelOutComponent.syncScreen.allowedVals:[True, False]
ParallelOutComponent.syncScreen.categ:Basic
ParallelOutComponent.syncScreen.hint:If the parallel port data relates to visual stimuli then sync its pulse to the screen refresh
ParallelOutComponent.syncScreen.label:Sync to screen
ParallelOutComponent.syncScreen.readOnly:False
ParallelOutComponent.syncScreen.staticUpdater:None
ParallelOutComponent.syncScreen.updates:constant
ParallelOutComponent.syncScreen.val:True
ParallelOutComponent.syncScreen.valType:bool
PatchComponent.order:['name']
PatchComponent.color.default:[1,1,1]
PatchComponent.color.allowedTypes:[]
PatchComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.color.allowedVals:[]
PatchComponent.color.categ:Advanced
PatchComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
PatchComponent.color.label:Color
PatchComponent.color.readOnly:False
PatchComponent.color.staticUpdater:None
PatchComponent.color.updates:constant
PatchComponent.color.val:$[1,1,1]
PatchComponent.color.valType:str
PatchComponent.colorSpace.default:'rgb'
PatchComponent.colorSpace.allowedTypes:[]
PatchComponent.colorSpace.allowedUpdates:None
PatchComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
PatchComponent.colorSpace.categ:Advanced
PatchComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
PatchComponent.colorSpace.label:Color space
PatchComponent.colorSpace.readOnly:False
PatchComponent.colorSpace.staticUpdater:None
PatchComponent.colorSpace.updates:constant
PatchComponent.colorSpace.val:rgb
PatchComponent.colorSpace.valType:str
PatchComponent.durationEstim.default:
PatchComponent.durationEstim.allowedTypes:[]
PatchComponent.durationEstim.allowedUpdates:None
PatchComponent.durationEstim.allowedVals:[]
PatchComponent.durationEstim.categ:Basic
PatchComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
PatchComponent.durationEstim.label:Expected duration (s)
PatchComponent.durationEstim.readOnly:False
PatchComponent.durationEstim.staticUpdater:None
PatchComponent.durationEstim.updates:None
PatchComponent.durationEstim.val:
PatchComponent.durationEstim.valType:code
PatchComponent.image.default:'sin'
PatchComponent.image.allowedTypes:[]
PatchComponent.image.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.image.allowedVals:[]
PatchComponent.image.categ:Basic
PatchComponent.image.hint:The image to be displayed - 'sin','sqr'... or a filename (including path)
PatchComponent.image.label:Image/tex
PatchComponent.image.readOnly:False
PatchComponent.image.staticUpdater:None
PatchComponent.image.updates:constant
PatchComponent.image.val:sin
PatchComponent.image.valType:str
PatchComponent.interpolate.default:'linear'
PatchComponent.interpolate.allowedTypes:[]
PatchComponent.interpolate.allowedUpdates:[]
PatchComponent.interpolate.allowedVals:['linear', 'nearest']
PatchComponent.interpolate.categ:Advanced
PatchComponent.interpolate.hint:How should the image be interpolated if/when rescaled
PatchComponent.interpolate.label:Interpolate
PatchComponent.interpolate.readOnly:False
PatchComponent.interpolate.staticUpdater:None
PatchComponent.interpolate.updates:constant
PatchComponent.interpolate.val:linear
PatchComponent.interpolate.valType:str
PatchComponent.mask.default:'None'
PatchComponent.mask.allowedTypes:[]
PatchComponent.mask.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.mask.allowedVals:[]
PatchComponent.mask.categ:Basic
PatchComponent.mask.hint:An image to define the alpha mask (ie shape)- gauss, circle... or a filename (including path)
PatchComponent.mask.label:Mask
PatchComponent.mask.readOnly:False
PatchComponent.mask.staticUpdater:None
PatchComponent.mask.updates:constant
PatchComponent.mask.val:None
PatchComponent.mask.valType:str
PatchComponent.name.default:patch
PatchComponent.name.allowedTypes:[]
PatchComponent.name.allowedUpdates:None
PatchComponent.name.allowedVals:[]
PatchComponent.name.categ:Basic
PatchComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
PatchComponent.name.label:Name
PatchComponent.name.readOnly:False
PatchComponent.name.staticUpdater:None
PatchComponent.name.val:patch
PatchComponent.name.valType:code
PatchComponent.opacity.default:1
PatchComponent.opacity.allowedTypes:[]
PatchComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.opacity.allowedVals:[]
PatchComponent.opacity.categ:Basic
PatchComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
PatchComponent.opacity.label:Opacity
PatchComponent.opacity.readOnly:False
PatchComponent.opacity.staticUpdater:None
PatchComponent.opacity.updates:constant
PatchComponent.opacity.val:1
PatchComponent.opacity.valType:code
PatchComponent.ori.default:0
PatchComponent.ori.allowedTypes:[]
PatchComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.ori.allowedVals:[]
PatchComponent.ori.categ:Basic
PatchComponent.ori.hint:Orientation of this stimulus (in deg)
PatchComponent.ori.label:Orientation
PatchComponent.ori.readOnly:False
PatchComponent.ori.staticUpdater:None
PatchComponent.ori.updates:constant
PatchComponent.ori.val:0
PatchComponent.ori.valType:code
PatchComponent.phase.default:0.0
PatchComponent.phase.allowedTypes:[]
PatchComponent.phase.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.phase.allowedVals:[]
PatchComponent.phase.categ:Advanced
PatchComponent.phase.hint:Spatial positioning of the image on the patch (in range 0-1.0)
PatchComponent.phase.label:Phase (in cycles)
PatchComponent.phase.readOnly:False
PatchComponent.phase.staticUpdater:None
PatchComponent.phase.updates:constant
PatchComponent.phase.val:0.0
PatchComponent.phase.valType:code
PatchComponent.pos.default:(0, 0)
PatchComponent.pos.allowedTypes:[]
PatchComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.pos.allowedVals:[]
PatchComponent.pos.categ:Basic
PatchComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
PatchComponent.pos.label:Position [x,y]
PatchComponent.pos.readOnly:False
PatchComponent.pos.staticUpdater:None
PatchComponent.pos.updates:constant
PatchComponent.pos.val:(0, 0)
PatchComponent.pos.valType:code
PatchComponent.sf.default:None
PatchComponent.sf.allowedTypes:[]
PatchComponent.sf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.sf.allowedVals:[]
PatchComponent.sf.categ:Advanced
PatchComponent.sf.hint:Spatial frequency of image repeats across the patch, e.g. 4 or [2,3]
PatchComponent.sf.label:Spatial frequency
PatchComponent.sf.readOnly:False
PatchComponent.sf.staticUpdater:None
PatchComponent.sf.updates:constant
PatchComponent.sf.val:None
PatchComponent.sf.valType:code
PatchComponent.size.default:(0.5, 0.5)
PatchComponent.size.allowedTypes:[]
PatchComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.size.allowedVals:[]
PatchComponent.size.categ:Basic
PatchComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
PatchComponent.size.label:Size [w,h]
PatchComponent.size.readOnly:False
PatchComponent.size.staticUpdater:None
PatchComponent.size.updates:constant
PatchComponent.size.val:(0.5, 0.5)
PatchComponent.size.valType:code
PatchComponent.startEstim.default:
PatchComponent.startEstim.allowedTypes:[]
PatchComponent.startEstim.allowedUpdates:None
PatchComponent.startEstim.allowedVals:[]
PatchComponent.startEstim.categ:Basic
PatchComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
PatchComponent.startEstim.label:Expected start (s)
PatchComponent.startEstim.readOnly:False
PatchComponent.startEstim.staticUpdater:None
PatchComponent.startEstim.updates:None
PatchComponent.startEstim.val:
PatchComponent.startEstim.valType:code
PatchComponent.startType.default:'time (s)'
PatchComponent.startType.allowedTypes:[]
PatchComponent.startType.allowedUpdates:None
PatchComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
PatchComponent.startType.categ:Basic
PatchComponent.startType.hint:How do you want to define your start point?
PatchComponent.startType.label:start type
PatchComponent.startType.readOnly:False
PatchComponent.startType.staticUpdater:None
PatchComponent.startType.updates:None
PatchComponent.startType.val:time (s)
PatchComponent.startType.valType:str
PatchComponent.startVal.default:0.0
PatchComponent.startVal.allowedTypes:[]
PatchComponent.startVal.allowedUpdates:None
PatchComponent.startVal.allowedVals:[]
PatchComponent.startVal.categ:Basic
PatchComponent.startVal.hint:When does the component start?
PatchComponent.startVal.label:Start
PatchComponent.startVal.readOnly:False
PatchComponent.startVal.staticUpdater:None
PatchComponent.startVal.updates:None
PatchComponent.startVal.val:0.0
PatchComponent.startVal.valType:code
PatchComponent.stopType.default:'duration (s)'
PatchComponent.stopType.allowedTypes:[]
PatchComponent.stopType.allowedUpdates:None
PatchComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
PatchComponent.stopType.categ:Basic
PatchComponent.stopType.hint:How do you want to define your end point?
PatchComponent.stopType.label:stop type
PatchComponent.stopType.readOnly:False
PatchComponent.stopType.staticUpdater:None
PatchComponent.stopType.updates:None
PatchComponent.stopType.val:duration (s)
PatchComponent.stopType.valType:str
PatchComponent.stopVal.default:1.0
PatchComponent.stopVal.allowedTypes:[]
PatchComponent.stopVal.allowedUpdates:[]
PatchComponent.stopVal.allowedVals:[]
PatchComponent.stopVal.categ:Basic
PatchComponent.stopVal.hint:When does the component end? (blank is endless)
PatchComponent.stopVal.label:Stop
PatchComponent.stopVal.readOnly:False
PatchComponent.stopVal.staticUpdater:None
PatchComponent.stopVal.updates:constant
PatchComponent.stopVal.val:1.0
PatchComponent.stopVal.valType:code
PatchComponent.texture resolution.default:128
PatchComponent.texture resolution.allowedTypes:[]
PatchComponent.texture resolution.allowedUpdates:[]
PatchComponent.texture resolution.allowedVals:['32', '64', '128', '256', '512']
PatchComponent.texture resolution.categ:Advanced
PatchComponent.texture resolution.hint:Resolution of the texture for standard ones such as sin, sqr etc. For most cases a value of 256 pixels will suffice
PatchComponent.texture resolution.label:Texture resolution
PatchComponent.texture resolution.readOnly:False
PatchComponent.texture resolution.staticUpdater:None
PatchComponent.texture resolution.updates:constant
PatchComponent.texture resolution.val:128
PatchComponent.texture resolution.valType:code
PatchComponent.units.default:'from exp settings'
PatchComponent.units.allowedTypes:[]
PatchComponent.units.allowedUpdates:None
PatchComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
PatchComponent.units.categ:Basic
PatchComponent.units.hint:Units of dimensions for this stimulus
PatchComponent.units.label:Units
PatchComponent.units.readOnly:False
PatchComponent.units.staticUpdater:None
PatchComponent.units.updates:None
PatchComponent.units.val:from exp settings
PatchComponent.units.valType:str
PolygonComponent.order:['shape', 'nVertices']
PolygonComponent.durationEstim.default:
PolygonComponent.durationEstim.allowedTypes:[]
PolygonComponent.durationEstim.allowedUpdates:None
PolygonComponent.durationEstim.allowedVals:[]
PolygonComponent.durationEstim.categ:Basic
PolygonComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
PolygonComponent.durationEstim.label:Expected duration (s)
PolygonComponent.durationEstim.readOnly:False
PolygonComponent.durationEstim.staticUpdater:None
PolygonComponent.durationEstim.updates:None
PolygonComponent.durationEstim.val:
PolygonComponent.durationEstim.valType:code
PolygonComponent.fillColor.default:[1,1,1]
PolygonComponent.fillColor.allowedTypes:[]
PolygonComponent.fillColor.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.fillColor.allowedVals:[]
PolygonComponent.fillColor.categ:Advanced
PolygonComponent.fillColor.hint:Fill color of this shape; Right-click to bring up a color-picker (rgb only)
PolygonComponent.fillColor.label:Fill color
PolygonComponent.fillColor.readOnly:False
PolygonComponent.fillColor.staticUpdater:None
PolygonComponent.fillColor.updates:constant
PolygonComponent.fillColor.val:$[1,1,1]
PolygonComponent.fillColor.valType:str
PolygonComponent.fillColorSpace.default:'rgb'
PolygonComponent.fillColorSpace.allowedTypes:[]
PolygonComponent.fillColorSpace.allowedUpdates:None
PolygonComponent.fillColorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv', 'rgb255']
PolygonComponent.fillColorSpace.categ:Advanced
PolygonComponent.fillColorSpace.hint:Choice of color space for the fill color (rgb, dkl, lms, hsv)
PolygonComponent.fillColorSpace.label:Fill color-space
PolygonComponent.fillColorSpace.readOnly:False
PolygonComponent.fillColorSpace.staticUpdater:None
PolygonComponent.fillColorSpace.updates:constant
PolygonComponent.fillColorSpace.val:rgb
PolygonComponent.fillColorSpace.valType:str
PolygonComponent.interpolate.default:'linear'
PolygonComponent.interpolate.allowedTypes:[]
PolygonComponent.interpolate.allowedUpdates:[]
PolygonComponent.interpolate.allowedVals:['linear', 'nearest']
PolygonComponent.interpolate.categ:Advanced
PolygonComponent.interpolate.hint:How should the image be interpolated if/when rescaled
PolygonComponent.interpolate.label:Interpolate
PolygonComponent.interpolate.readOnly:False
PolygonComponent.interpolate.staticUpdater:None
PolygonComponent.interpolate.updates:constant
PolygonComponent.interpolate.val:linear
PolygonComponent.interpolate.valType:str
PolygonComponent.lineColor.default:[1,1,1]
PolygonComponent.lineColor.allowedTypes:[]
PolygonComponent.lineColor.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.lineColor.allowedVals:[]
PolygonComponent.lineColor.categ:Advanced
PolygonComponent.lineColor.hint:Line color of this shape; Right-click to bring up a color-picker (rgb only)
PolygonComponent.lineColor.label:Line color
PolygonComponent.lineColor.readOnly:False
PolygonComponent.lineColor.staticUpdater:None
PolygonComponent.lineColor.updates:constant
PolygonComponent.lineColor.val:$[1,1,1]
PolygonComponent.lineColor.valType:str
PolygonComponent.lineColorSpace.default:'rgb'
PolygonComponent.lineColorSpace.allowedTypes:[]
PolygonComponent.lineColorSpace.allowedUpdates:None
PolygonComponent.lineColorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
PolygonComponent.lineColorSpace.categ:Advanced
PolygonComponent.lineColorSpace.hint:Choice of color space for the fill color (rgb, dkl, lms, hsv)
PolygonComponent.lineColorSpace.label:Line color-space
PolygonComponent.lineColorSpace.readOnly:False
PolygonComponent.lineColorSpace.staticUpdater:None
PolygonComponent.lineColorSpace.updates:constant
PolygonComponent.lineColorSpace.val:rgb
PolygonComponent.lineColorSpace.valType:str
PolygonComponent.lineWidth.default:1
PolygonComponent.lineWidth.allowedTypes:[]
PolygonComponent.lineWidth.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.lineWidth.allowedVals:[]
PolygonComponent.lineWidth.categ:Basic
PolygonComponent.lineWidth.hint:Width of the shape's line (always in pixels - this does NOT use 'units')
PolygonComponent.lineWidth.label:Line width
PolygonComponent.lineWidth.readOnly:False
PolygonComponent.lineWidth.staticUpdater:None
PolygonComponent.lineWidth.updates:constant
PolygonComponent.lineWidth.val:1
PolygonComponent.lineWidth.valType:code
PolygonComponent.nVertices.default:4
PolygonComponent.nVertices.allowedTypes:[]
PolygonComponent.nVertices.allowedUpdates:['constant']
PolygonComponent.nVertices.allowedVals:[]
PolygonComponent.nVertices.categ:Basic
PolygonComponent.nVertices.hint:How many vertices in your regular polygon?
PolygonComponent.nVertices.label:Num. vertices
PolygonComponent.nVertices.readOnly:False
PolygonComponent.nVertices.staticUpdater:None
PolygonComponent.nVertices.updates:constant
PolygonComponent.nVertices.val:4
PolygonComponent.nVertices.valType:int
PolygonComponent.name.default:polygon
PolygonComponent.name.allowedTypes:[]
PolygonComponent.name.allowedUpdates:None
PolygonComponent.name.allowedVals:[]
PolygonComponent.name.categ:Basic
PolygonComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
PolygonComponent.name.label:Name
PolygonComponent.name.readOnly:False
PolygonComponent.name.staticUpdater:None
PolygonComponent.name.val:polygon
PolygonComponent.name.valType:code
PolygonComponent.opacity.default:1
PolygonComponent.opacity.allowedTypes:[]
PolygonComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.opacity.allowedVals:[]
PolygonComponent.opacity.categ:Basic
PolygonComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
PolygonComponent.opacity.label:Opacity
PolygonComponent.opacity.readOnly:False
PolygonComponent.opacity.staticUpdater:None
PolygonComponent.opacity.updates:constant
PolygonComponent.opacity.val:1
PolygonComponent.opacity.valType:code
PolygonComponent.ori.default:0
PolygonComponent.ori.allowedTypes:[]
PolygonComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.ori.allowedVals:[]
PolygonComponent.ori.categ:Basic
PolygonComponent.ori.hint:Orientation of this stimulus (in deg)
PolygonComponent.ori.label:Orientation
PolygonComponent.ori.readOnly:False
PolygonComponent.ori.staticUpdater:None
PolygonComponent.ori.updates:constant
PolygonComponent.ori.val:0
PolygonComponent.ori.valType:code
PolygonComponent.pos.default:(0, 0)
PolygonComponent.pos.allowedTypes:[]
PolygonComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.pos.allowedVals:[]
PolygonComponent.pos.categ:Basic
PolygonComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
PolygonComponent.pos.label:Position [x,y]
PolygonComponent.pos.readOnly:False
PolygonComponent.pos.staticUpdater:None
PolygonComponent.pos.updates:constant
PolygonComponent.pos.val:(0, 0)
PolygonComponent.pos.valType:code
PolygonComponent.shape.default:'triangle'
PolygonComponent.shape.allowedTypes:[]
PolygonComponent.shape.allowedUpdates:['constant']
PolygonComponent.shape.allowedVals:['line', 'triangle', 'rectangle', 'cross', 'regular polygon...']
PolygonComponent.shape.categ:Basic
PolygonComponent.shape.hint:What shape is this? With 'regular polygon...' you can set number of vertices
PolygonComponent.shape.label:Shape
PolygonComponent.shape.readOnly:False
PolygonComponent.shape.staticUpdater:None
PolygonComponent.shape.updates:constant
PolygonComponent.shape.val:triangle
PolygonComponent.shape.valType:str
PolygonComponent.size.default:(0.5, 0.5)
PolygonComponent.size.allowedTypes:[]
PolygonComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.size.allowedVals:[]
PolygonComponent.size.categ:Basic
PolygonComponent.size.hint:Size of this stimulus [w,h]. Note that for a line only the first value is used, for triangle and rect the [w,h] is as expected,
 but for higher-order polygons it represents the [w,h] of the ellipse that the polygon sits on!! 
PolygonComponent.size.label:Size [w,h]
PolygonComponent.size.readOnly:False
PolygonComponent.size.staticUpdater:None
PolygonComponent.size.updates:constant
PolygonComponent.size.val:(0.5, 0.5)
PolygonComponent.size.valType:code
PolygonComponent.startEstim.default:
PolygonComponent.startEstim.allowedTypes:[]
PolygonComponent.startEstim.allowedUpdates:None
PolygonComponent.startEstim.allowedVals:[]
PolygonComponent.startEstim.categ:Basic
PolygonComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
PolygonComponent.startEstim.label:Expected start (s)
PolygonComponent.startEstim.readOnly:False
PolygonComponent.startEstim.staticUpdater:None
PolygonComponent.startEstim.updates:None
PolygonComponent.startEstim.val:
PolygonComponent.startEstim.valType:code
PolygonComponent.startType.default:'time (s)'
PolygonComponent.startType.allowedTypes:[]
PolygonComponent.startType.allowedUpdates:None
PolygonComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
PolygonComponent.startType.categ:Basic
PolygonComponent.startType.hint:How do you want to define your start point?
PolygonComponent.startType.label:start type
PolygonComponent.startType.readOnly:False
PolygonComponent.startType.staticUpdater:None
PolygonComponent.startType.updates:None
PolygonComponent.startType.val:time (s)
PolygonComponent.startType.valType:str
PolygonComponent.startVal.default:0.0
PolygonComponent.startVal.allowedTypes:[]
PolygonComponent.startVal.allowedUpdates:None
PolygonComponent.startVal.allowedVals:[]
PolygonComponent.startVal.categ:Basic
PolygonComponent.startVal.hint:When does the component start?
PolygonComponent.startVal.label:Start
PolygonComponent.startVal.readOnly:False
PolygonComponent.startVal.staticUpdater:None
PolygonComponent.startVal.updates:None
PolygonComponent.startVal.val:0.0
PolygonComponent.startVal.valType:code
PolygonComponent.stopType.default:'duration (s)'
PolygonComponent.stopType.allowedTypes:[]
PolygonComponent.stopType.allowedUpdates:None
PolygonComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
PolygonComponent.stopType.categ:Basic
PolygonComponent.stopType.hint:How do you want to define your end point?
PolygonComponent.stopType.label:stop type
PolygonComponent.stopType.readOnly:False
PolygonComponent.stopType.staticUpdater:None
PolygonComponent.stopType.updates:None
PolygonComponent.stopType.val:duration (s)
PolygonComponent.stopType.valType:str
PolygonComponent.stopVal.default:1.0
PolygonComponent.stopVal.allowedTypes:[]
PolygonComponent.stopVal.allowedUpdates:[]
PolygonComponent.stopVal.allowedVals:[]
PolygonComponent.stopVal.categ:Basic
PolygonComponent.stopVal.hint:When does the component end? (blank is endless)
PolygonComponent.stopVal.label:Stop
PolygonComponent.stopVal.readOnly:False
PolygonComponent.stopVal.staticUpdater:None
PolygonComponent.stopVal.updates:constant
PolygonComponent.stopVal.val:1.0
PolygonComponent.stopVal.valType:code
PolygonComponent.units.default:'from exp settings'
PolygonComponent.units.allowedTypes:[]
PolygonComponent.units.allowedUpdates:None
PolygonComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
PolygonComponent.units.categ:Basic
PolygonComponent.units.hint:Units of dimensions for this stimulus
PolygonComponent.units.label:Units
PolygonComponent.units.readOnly:False
PolygonComponent.units.staticUpdater:None
PolygonComponent.units.updates:None
PolygonComponent.units.val:from exp settings
PolygonComponent.units.valType:str
RatingScaleComponent.order:['name', 'visualAnalogScale', 'categoryChoices', 'scaleDescription', 'low', 'high', 'labels', 'markerStart', 'size', 'pos', 'tickHeight']
RatingScaleComponent.categoryChoices.default:''
RatingScaleComponent.categoryChoices.allowedTypes:[]
RatingScaleComponent.categoryChoices.allowedUpdates:[]
RatingScaleComponent.categoryChoices.allowedVals:[]
RatingScaleComponent.categoryChoices.categ:Basic
RatingScaleComponent.categoryChoices.hint:A list of categories (non-numeric alternatives) to present, space or comma-separated; these take precedence over a numeric scale
RatingScaleComponent.categoryChoices.label:Category choices
RatingScaleComponent.categoryChoices.readOnly:False
RatingScaleComponent.categoryChoices.staticUpdater:None
RatingScaleComponent.categoryChoices.updates:constant
RatingScaleComponent.categoryChoices.val:
RatingScaleComponent.categoryChoices.valType:str
RatingScaleComponent.customize_everything.default:''
RatingScaleComponent.customize_everything.allowedTypes:[]
RatingScaleComponent.customize_everything.allowedUpdates:[]
RatingScaleComponent.customize_everything.allowedVals:[]
RatingScaleComponent.customize_everything.categ:Custom
RatingScaleComponent.customize_everything.hint:Use this text to create the rating scale as you would in a code component; overrides all dialog settings except time parameters, forceEndRoutine, storeRatingTime, storeRating
RatingScaleComponent.customize_everything.label:Customize everything :
RatingScaleComponent.customize_everything.readOnly:False
RatingScaleComponent.customize_everything.staticUpdater:None
RatingScaleComponent.customize_everything.updates:constant
RatingScaleComponent.customize_everything.val:
RatingScaleComponent.customize_everything.valType:str
RatingScaleComponent.disappear.default:False
RatingScaleComponent.disappear.allowedTypes:[]
RatingScaleComponent.disappear.allowedUpdates:[]
RatingScaleComponent.disappear.allowedVals:[]
RatingScaleComponent.disappear.categ:Advanced
RatingScaleComponent.disappear.hint:Hide the scale when a rating has been accepted; False to remain on-screen
RatingScaleComponent.disappear.label:Disappear
RatingScaleComponent.disappear.readOnly:False
RatingScaleComponent.disappear.staticUpdater:None
RatingScaleComponent.disappear.updates:constant
RatingScaleComponent.disappear.val:False
RatingScaleComponent.disappear.valType:bool
RatingScaleComponent.durationEstim.default:
RatingScaleComponent.durationEstim.allowedTypes:[]
RatingScaleComponent.durationEstim.allowedUpdates:None
RatingScaleComponent.durationEstim.allowedVals:[]
RatingScaleComponent.durationEstim.categ:Basic
RatingScaleComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
RatingScaleComponent.durationEstim.label:Expected duration (s)
RatingScaleComponent.durationEstim.readOnly:False
RatingScaleComponent.durationEstim.staticUpdater:None
RatingScaleComponent.durationEstim.updates:None
RatingScaleComponent.durationEstim.val:
RatingScaleComponent.durationEstim.valType:code
RatingScaleComponent.forceEndRoutine.default:True
RatingScaleComponent.forceEndRoutine.allowedTypes:[]
RatingScaleComponent.forceEndRoutine.allowedUpdates:[]
RatingScaleComponent.forceEndRoutine.allowedVals:[]
RatingScaleComponent.forceEndRoutine.categ:Advanced
RatingScaleComponent.forceEndRoutine.hint:Should accepting a rating cause the end of the routine (e.g. trial)?
RatingScaleComponent.forceEndRoutine.label:Force end of Routine
RatingScaleComponent.forceEndRoutine.readOnly:False
RatingScaleComponent.forceEndRoutine.staticUpdater:None
RatingScaleComponent.forceEndRoutine.updates:constant
RatingScaleComponent.forceEndRoutine.val:True
RatingScaleComponent.forceEndRoutine.valType:bool
RatingScaleComponent.high.default:7
RatingScaleComponent.high.allowedTypes:[]
RatingScaleComponent.high.allowedUpdates:[]
RatingScaleComponent.high.allowedVals:[]
RatingScaleComponent.high.categ:Basic
RatingScaleComponent.high.hint:Highest rating (top end of the scale); not used for categories.
RatingScaleComponent.high.label:Highest value
RatingScaleComponent.high.readOnly:False
RatingScaleComponent.high.staticUpdater:None
RatingScaleComponent.high.updates:constant
RatingScaleComponent.high.val:7
RatingScaleComponent.high.valType:code
RatingScaleComponent.labels.default:''
RatingScaleComponent.labels.allowedTypes:[]
RatingScaleComponent.labels.allowedUpdates:[]
RatingScaleComponent.labels.allowedVals:[]
RatingScaleComponent.labels.categ:Basic
RatingScaleComponent.labels.hint:Labels for the ends of the scale, separated by commas
RatingScaleComponent.labels.label:Labels
RatingScaleComponent.labels.readOnly:False
RatingScaleComponent.labels.staticUpdater:None
RatingScaleComponent.labels.updates:constant
RatingScaleComponent.labels.val:
RatingScaleComponent.labels.valType:str
RatingScaleComponent.low.default:1
RatingScaleComponent.low.allowedTypes:[]
RatingScaleComponent.low.allowedUpdates:[]
RatingScaleComponent.low.allowedVals:[]
RatingScaleComponent.low.categ:Basic
RatingScaleComponent.low.hint:Lowest rating (low end of the scale); not used for categories.
RatingScaleComponent.low.label:Lowest value
RatingScaleComponent.low.readOnly:False
RatingScaleComponent.low.staticUpdater:None
RatingScaleComponent.low.updates:constant
RatingScaleComponent.low.val:1
RatingScaleComponent.low.valType:code
RatingScaleComponent.marker.default:'triangle'
RatingScaleComponent.marker.allowedTypes:[]
RatingScaleComponent.marker.allowedUpdates:[]
RatingScaleComponent.marker.allowedVals:[]
RatingScaleComponent.marker.categ:Basic
RatingScaleComponent.marker.hint:Style for the marker: triangle, circle, glow, slider, hover
RatingScaleComponent.marker.label:Marker type
RatingScaleComponent.marker.readOnly:False
RatingScaleComponent.marker.staticUpdater:None
RatingScaleComponent.marker.updates:constant
RatingScaleComponent.marker.val:triangle
RatingScaleComponent.marker.valType:str
RatingScaleComponent.markerStart.default:''
RatingScaleComponent.markerStart.allowedTypes:[]
RatingScaleComponent.markerStart.allowedUpdates:[]
RatingScaleComponent.markerStart.allowedVals:[]
RatingScaleComponent.markerStart.categ:Basic
RatingScaleComponent.markerStart.hint:initial position for the marker
RatingScaleComponent.markerStart.label:Marker start
RatingScaleComponent.markerStart.readOnly:False
RatingScaleComponent.markerStart.staticUpdater:None
RatingScaleComponent.markerStart.updates:constant
RatingScaleComponent.markerStart.val:
RatingScaleComponent.markerStart.valType:str
RatingScaleComponent.name.default:rating
RatingScaleComponent.name.allowedTypes:[]
RatingScaleComponent.name.allowedUpdates:None
RatingScaleComponent.name.allowedVals:[]
RatingScaleComponent.name.categ:Basic
RatingScaleComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
RatingScaleComponent.name.label:Name
RatingScaleComponent.name.readOnly:False
RatingScaleComponent.name.staticUpdater:None
RatingScaleComponent.name.val:rating
RatingScaleComponent.name.valType:code
RatingScaleComponent.pos.default:'0, -0.4'
RatingScaleComponent.pos.allowedTypes:[]
RatingScaleComponent.pos.allowedUpdates:[]
RatingScaleComponent.pos.allowedVals:[]
RatingScaleComponent.pos.categ:Advanced
RatingScaleComponent.pos.hint:x,y position on the screen
RatingScaleComponent.pos.label:Position [x,y]
RatingScaleComponent.pos.readOnly:False
RatingScaleComponent.pos.staticUpdater:None
RatingScaleComponent.pos.updates:constant
RatingScaleComponent.pos.val:0, -0.4
RatingScaleComponent.pos.valType:str
RatingScaleComponent.scaleDescription.default:''
RatingScaleComponent.scaleDescription.allowedTypes:[]
RatingScaleComponent.scaleDescription.allowedUpdates:[]
RatingScaleComponent.scaleDescription.allowedVals:[]
RatingScaleComponent.scaleDescription.categ:Basic
RatingScaleComponent.scaleDescription.hint:Brief instructions, such as a description of the scale numbers as seen by the subject.
RatingScaleComponent.scaleDescription.label:Scale description
RatingScaleComponent.scaleDescription.readOnly:False
RatingScaleComponent.scaleDescription.staticUpdater:None
RatingScaleComponent.scaleDescription.updates:constant
RatingScaleComponent.scaleDescription.val:
RatingScaleComponent.scaleDescription.valType:str
RatingScaleComponent.showAccept.default:True
RatingScaleComponent.showAccept.allowedTypes:[]
RatingScaleComponent.showAccept.allowedUpdates:[]
RatingScaleComponent.showAccept.allowedVals:[]
RatingScaleComponent.showAccept.categ:Advanced
RatingScaleComponent.showAccept.hint:Should the accept button by visible?
RatingScaleComponent.showAccept.label:Show accept
RatingScaleComponent.showAccept.readOnly:False
RatingScaleComponent.showAccept.staticUpdater:None
RatingScaleComponent.showAccept.updates:constant
RatingScaleComponent.showAccept.val:True
RatingScaleComponent.showAccept.valType:bool
RatingScaleComponent.singleClick.default:False
RatingScaleComponent.singleClick.allowedTypes:[]
RatingScaleComponent.singleClick.allowedUpdates:[]
RatingScaleComponent.singleClick.allowedVals:[]
RatingScaleComponent.singleClick.categ:Advanced
RatingScaleComponent.singleClick.hint:Should clicking the line accept that rating (without needing to confirm via 'accept')?
RatingScaleComponent.singleClick.label:Single click
RatingScaleComponent.singleClick.readOnly:False
RatingScaleComponent.singleClick.staticUpdater:None
RatingScaleComponent.singleClick.updates:constant
RatingScaleComponent.singleClick.val:False
RatingScaleComponent.singleClick.valType:bool
RatingScaleComponent.size.default:1.0
RatingScaleComponent.size.allowedTypes:[]
RatingScaleComponent.size.allowedUpdates:[]
RatingScaleComponent.size.allowedVals:[]
RatingScaleComponent.size.categ:Advanced
RatingScaleComponent.size.hint:Relative size on the screen; size > 1 is larger than default; size < 1 is smaller
RatingScaleComponent.size.label:Size
RatingScaleComponent.size.readOnly:False
RatingScaleComponent.size.staticUpdater:None
RatingScaleComponent.size.updates:constant
RatingScaleComponent.size.val:1.0
RatingScaleComponent.size.valType:code
RatingScaleComponent.startEstim.default:
RatingScaleComponent.startEstim.allowedTypes:[]
RatingScaleComponent.startEstim.allowedUpdates:None
RatingScaleComponent.startEstim.allowedVals:[]
RatingScaleComponent.startEstim.categ:Basic
RatingScaleComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
RatingScaleComponent.startEstim.label:Expected start (s)
RatingScaleComponent.startEstim.readOnly:False
RatingScaleComponent.startEstim.staticUpdater:None
RatingScaleComponent.startEstim.updates:None
RatingScaleComponent.startEstim.val:
RatingScaleComponent.startEstim.valType:code
RatingScaleComponent.startType.default:'time (s)'
RatingScaleComponent.startType.allowedTypes:[]
RatingScaleComponent.startType.allowedUpdates:None
RatingScaleComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
RatingScaleComponent.startType.categ:Basic
RatingScaleComponent.startType.hint:How do you want to define your start point?
RatingScaleComponent.startType.label:start type
RatingScaleComponent.startType.readOnly:False
RatingScaleComponent.startType.staticUpdater:None
RatingScaleComponent.startType.updates:None
RatingScaleComponent.startType.val:time (s)
RatingScaleComponent.startType.valType:str
RatingScaleComponent.startVal.default:0.0
RatingScaleComponent.startVal.allowedTypes:[]
RatingScaleComponent.startVal.allowedUpdates:None
RatingScaleComponent.startVal.allowedVals:[]
RatingScaleComponent.startVal.categ:Basic
RatingScaleComponent.startVal.hint:When does the component start?
RatingScaleComponent.startVal.label:Start
RatingScaleComponent.startVal.readOnly:False
RatingScaleComponent.startVal.staticUpdater:None
RatingScaleComponent.startVal.updates:None
RatingScaleComponent.startVal.val:0.0
RatingScaleComponent.startVal.valType:code
RatingScaleComponent.stopType.default:'condition'
RatingScaleComponent.stopType.allowedTypes:[]
RatingScaleComponent.stopType.allowedUpdates:None
RatingScaleComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
RatingScaleComponent.stopType.categ:Basic
RatingScaleComponent.stopType.hint:How do you want to define your end point?
RatingScaleComponent.stopType.label:stop type
RatingScaleComponent.stopType.readOnly:False
RatingScaleComponent.stopType.staticUpdater:None
RatingScaleComponent.stopType.updates:None
RatingScaleComponent.stopType.val:condition
RatingScaleComponent.stopType.valType:str
RatingScaleComponent.stopVal.default:
RatingScaleComponent.stopVal.allowedTypes:[]
RatingScaleComponent.stopVal.allowedUpdates:[]
RatingScaleComponent.stopVal.allowedVals:[]
RatingScaleComponent.stopVal.categ:Basic
RatingScaleComponent.stopVal.hint:When does the component end? (blank is endless)
RatingScaleComponent.stopVal.label:Stop
RatingScaleComponent.stopVal.readOnly:False
RatingScaleComponent.stopVal.staticUpdater:None
RatingScaleComponent.stopVal.updates:constant
RatingScaleComponent.stopVal.val:
RatingScaleComponent.stopVal.valType:code
RatingScaleComponent.storeHistory.default:False
RatingScaleComponent.storeHistory.allowedTypes:[]
RatingScaleComponent.storeHistory.allowedUpdates:[]
RatingScaleComponent.storeHistory.allowedVals:[]
RatingScaleComponent.storeHistory.categ:Advanced
RatingScaleComponent.storeHistory.hint:store the history of (selection, time)
RatingScaleComponent.storeHistory.label:Store history
RatingScaleComponent.storeHistory.readOnly:False
RatingScaleComponent.storeHistory.staticUpdater:None
RatingScaleComponent.storeHistory.updates:constant
RatingScaleComponent.storeHistory.val:False
RatingScaleComponent.storeHistory.valType:bool
RatingScaleComponent.storeRating.default:True
RatingScaleComponent.storeRating.allowedTypes:[]
RatingScaleComponent.storeRating.allowedUpdates:[]
RatingScaleComponent.storeRating.allowedVals:[]
RatingScaleComponent.storeRating.categ:Advanced
RatingScaleComponent.storeRating.hint:store the rating
RatingScaleComponent.storeRating.label:Store rating
RatingScaleComponent.storeRating.readOnly:False
RatingScaleComponent.storeRating.staticUpdater:None
RatingScaleComponent.storeRating.updates:constant
RatingScaleComponent.storeRating.val:True
RatingScaleComponent.storeRating.valType:bool
RatingScaleComponent.storeRatingTime.default:True
RatingScaleComponent.storeRatingTime.allowedTypes:[]
RatingScaleComponent.storeRatingTime.allowedUpdates:[]
RatingScaleComponent.storeRatingTime.allowedVals:[]
RatingScaleComponent.storeRatingTime.categ:Advanced
RatingScaleComponent.storeRatingTime.hint:store the time taken to make the choice (in seconds)
RatingScaleComponent.storeRatingTime.label:Store rating time
RatingScaleComponent.storeRatingTime.readOnly:False
RatingScaleComponent.storeRatingTime.staticUpdater:None
RatingScaleComponent.storeRatingTime.updates:constant
RatingScaleComponent.storeRatingTime.val:True
RatingScaleComponent.storeRatingTime.valType:bool
RatingScaleComponent.tickHeight.default:''
RatingScaleComponent.tickHeight.allowedTypes:[]
RatingScaleComponent.tickHeight.allowedUpdates:[]
RatingScaleComponent.tickHeight.allowedVals:[]
RatingScaleComponent.tickHeight.categ:Advanced
RatingScaleComponent.tickHeight.hint:height of tick marks (1 is upward, 0 is hidden, -1 is downward)
RatingScaleComponent.tickHeight.label:Tick height
RatingScaleComponent.tickHeight.readOnly:False
RatingScaleComponent.tickHeight.staticUpdater:None
RatingScaleComponent.tickHeight.updates:constant
RatingScaleComponent.tickHeight.val:
RatingScaleComponent.tickHeight.valType:str
RatingScaleComponent.visualAnalogScale.default:False
RatingScaleComponent.visualAnalogScale.allowedTypes:[]
RatingScaleComponent.visualAnalogScale.allowedUpdates:[]
RatingScaleComponent.visualAnalogScale.allowedVals:[]
RatingScaleComponent.visualAnalogScale.categ:Basic
RatingScaleComponent.visualAnalogScale.hint:Show a continuous visual analog scale; returns 0.00 to 1.00; takes precedence over numeric scale or categorical choices
RatingScaleComponent.visualAnalogScale.label:Visual analog scale
RatingScaleComponent.visualAnalogScale.readOnly:False
RatingScaleComponent.visualAnalogScale.staticUpdater:None
RatingScaleComponent.visualAnalogScale.updates:constant
RatingScaleComponent.visualAnalogScale.val:False
RatingScaleComponent.visualAnalogScale.valType:bool
SettingsComponent.order:['expName', 'Show info dlg', 'Experiment info', 'Data filename', 'Save excel file', 'Save csv file', 'Save wide csv file', 'Save psydat file', 'Save log file', 'logging level', 'Monitor', 'Screen', 'Full-screen window', 'Window size (pixels)', 'color', 'colorSpace', 'Units', 'HTML path']
SettingsComponent.Completed URL.default:''
SettingsComponent.Completed URL.allowedTypes:[]
SettingsComponent.Completed URL.allowedUpdates:None
SettingsComponent.Completed URL.allowedVals:[]
SettingsComponent.Completed URL.categ:Online
SettingsComponent.Completed URL.hint:Where should participants be redirected after the experiment on completion
 INSERT COMPLETION URL E.G.?
SettingsComponent.Completed URL.label:Completed URL
SettingsComponent.Completed URL.readOnly:False
SettingsComponent.Completed URL.staticUpdater:None
SettingsComponent.Completed URL.updates:None
SettingsComponent.Completed URL.val:
SettingsComponent.Completed URL.valType:str
SettingsComponent.Data filename.default:u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])
SettingsComponent.Data filename.allowedTypes:[]
SettingsComponent.Data filename.allowedUpdates:None
SettingsComponent.Data filename.allowedVals:[]
SettingsComponent.Data filename.categ:Data
SettingsComponent.Data filename.hint:Code to create your custom file name base. Don't give a file extension - this will be added.
SettingsComponent.Data filename.label:Data filename
SettingsComponent.Data filename.readOnly:False
SettingsComponent.Data filename.staticUpdater:None
SettingsComponent.Data filename.updates:None
SettingsComponent.Data filename.val:u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])
SettingsComponent.Data filename.valType:code
SettingsComponent.Enable Escape.default:True
SettingsComponent.Enable Escape.allowedTypes:[]
SettingsComponent.Enable Escape.allowedUpdates:None
SettingsComponent.Enable Escape.allowedVals:[]
SettingsComponent.Enable Escape.categ:Basic
SettingsComponent.Enable Escape.hint:Enable the <esc> key, to allow subjects to quit / break out of the experiment
SettingsComponent.Enable Escape.label:Enable Escape key
SettingsComponent.Enable Escape.readOnly:False
SettingsComponent.Enable Escape.staticUpdater:None
SettingsComponent.Enable Escape.updates:None
SettingsComponent.Enable Escape.val:True
SettingsComponent.Enable Escape.valType:bool
SettingsComponent.Experiment info.default:{'participant':'', 'session':'001'}
SettingsComponent.Experiment info.allowedTypes:[]
SettingsComponent.Experiment info.allowedUpdates:None
SettingsComponent.Experiment info.allowedVals:[]
SettingsComponent.Experiment info.categ:Basic
SettingsComponent.Experiment info.hint:The info to present in a dialog box. Right-click to check syntax and preview the dialog box.
SettingsComponent.Experiment info.label:Experiment info
SettingsComponent.Experiment info.readOnly:False
SettingsComponent.Experiment info.staticUpdater:None
SettingsComponent.Experiment info.updates:None
SettingsComponent.Experiment info.val:{'participant':'', 'session':'001'}
SettingsComponent.Experiment info.valType:code
SettingsComponent.Force stereo.default:True
SettingsComponent.Force stereo.allowedTypes:[]
SettingsComponent.Force stereo.allowedUpdates:None
SettingsComponent.Force stereo.allowedVals:[]
SettingsComponent.Force stereo.categ:Basic
SettingsComponent.Force stereo.hint:Force audio to stereo (2-channel) output
SettingsComponent.Force stereo.label:Force stereo
SettingsComponent.Force stereo.readOnly:False
SettingsComponent.Force stereo.staticUpdater:None
SettingsComponent.Force stereo.updates:None
SettingsComponent.Force stereo.val:True
SettingsComponent.Force stereo.valType:bool
SettingsComponent.Full-screen window.default:True
SettingsComponent.Full-screen window.allowedTypes:[]
SettingsComponent.Full-screen window.allowedUpdates:None
SettingsComponent.Full-screen window.allowedVals:[]
SettingsComponent.Full-screen window.categ:Screen
SettingsComponent.Full-screen window.hint:Run the experiment full-screen (recommended)
SettingsComponent.Full-screen window.label:Full-screen window
SettingsComponent.Full-screen window.readOnly:False
SettingsComponent.Full-screen window.staticUpdater:None
SettingsComponent.Full-screen window.updates:None
SettingsComponent.Full-screen window.val:True
SettingsComponent.Full-screen window.valType:bool
SettingsComponent.HTML path.default:'html'
SettingsComponent.HTML path.allowedTypes:[]
SettingsComponent.HTML path.allowedUpdates:None
SettingsComponent.HTML path.allowedVals:[]
SettingsComponent.HTML path.categ:Online
SettingsComponent.HTML path.hint:Place the HTML files will be saved locally 
SettingsComponent.HTML path.label:Output path
SettingsComponent.HTML path.readOnly:False
SettingsComponent.HTML path.staticUpdater:None
SettingsComponent.HTML path.updates:None
SettingsComponent.HTML path.val:html
SettingsComponent.HTML path.valType:str
SettingsComponent.Incomplete URL.default:''
SettingsComponent.Incomplete URL.allowedTypes:[]
SettingsComponent.Incomplete URL.allowedUpdates:None
SettingsComponent.Incomplete URL.allowedVals:[]
SettingsComponent.Incomplete URL.categ:Online
SettingsComponent.Incomplete URL.hint:Where participants are redirected if they do not complete the task
 INSERT INCOMPLETION URL E.G.?
SettingsComponent.Incomplete URL.label:Incomplete URL
SettingsComponent.Incomplete URL.readOnly:False
SettingsComponent.Incomplete URL.staticUpdater:None
SettingsComponent.Incomplete URL.updates:None
SettingsComponent.Incomplete URL.val:
SettingsComponent.Incomplete URL.valType:str
SettingsComponent.JS libs.default:'packaged'
SettingsComponent.JS libs.allowedTypes:[]
SettingsComponent.JS libs.allowedUpdates:None
SettingsComponent.JS libs.allowedVals:['packaged']
SettingsComponent.JS libs.categ:Online
SettingsComponent.JS libs.hint:Should we package a copy of the JS libs or useremote copies (http:/www.psychopy.org/js)?
SettingsComponent.JS libs.label:JS libs
SettingsComponent.JS libs.readOnly:False
SettingsComponent.JS libs.staticUpdater:None
SettingsComponent.JS libs.updates:None
SettingsComponent.JS libs.val:packaged
SettingsComponent.JS libs.valType:str
SettingsComponent.Monitor.default:'testMonitor'
SettingsComponent.Monitor.allowedTypes:[]
SettingsComponent.Monitor.allowedUpdates:None
SettingsComponent.Monitor.allowedVals:[]
SettingsComponent.Monitor.categ:Screen
SettingsComponent.Monitor.hint:Name of the monitor (from Monitor Center). Right-click to go there, then copy & paste a monitor name here.
SettingsComponent.Monitor.label:Monitor
SettingsComponent.Monitor.readOnly:False
SettingsComponent.Monitor.staticUpdater:None
SettingsComponent.Monitor.updates:None
SettingsComponent.Monitor.val:testMonitor
SettingsComponent.Monitor.valType:str
SettingsComponent.Save csv file.default:False
SettingsComponent.Save csv file.allowedTypes:[]
SettingsComponent.Save csv file.allowedUpdates:None
SettingsComponent.Save csv file.allowedVals:[]
SettingsComponent.Save csv file.categ:Data
SettingsComponent.Save csv file.hint:Save data from loops in comma-separated-value (.csv) format for maximum portability
SettingsComponent.Save csv file.label:Save csv file (summaries)
SettingsComponent.Save csv file.readOnly:False
SettingsComponent.Save csv file.staticUpdater:None
SettingsComponent.Save csv file.updates:None
SettingsComponent.Save csv file.val:False
SettingsComponent.Save csv file.valType:bool
SettingsComponent.Save excel file.default:False
SettingsComponent.Save excel file.allowedTypes:[]
SettingsComponent.Save excel file.allowedUpdates:None
SettingsComponent.Save excel file.allowedVals:[]
SettingsComponent.Save excel file.categ:Data
SettingsComponent.Save excel file.hint:Save data from loops in Excel (.xlsx) format
SettingsComponent.Save excel file.label:Save excel file
SettingsComponent.Save excel file.readOnly:False
SettingsComponent.Save excel file.staticUpdater:None
SettingsComponent.Save excel file.updates:None
SettingsComponent.Save excel file.val:False
SettingsComponent.Save excel file.valType:bool
SettingsComponent.Save log file.default:True
SettingsComponent.Save log file.allowedTypes:[]
SettingsComponent.Save log file.allowedUpdates:None
SettingsComponent.Save log file.allowedVals:[]
SettingsComponent.Save log file.categ:Data
SettingsComponent.Save log file.hint:Save a detailed log (more detailed than the excel/csv files) of the entire experiment
SettingsComponent.Save log file.label:Save log file
SettingsComponent.Save log file.readOnly:False
SettingsComponent.Save log file.staticUpdater:None
SettingsComponent.Save log file.updates:None
SettingsComponent.Save log file.val:True
SettingsComponent.Save log file.valType:bool
SettingsComponent.Save psydat file.default:True
SettingsComponent.Save psydat file.allowedTypes:[]
SettingsComponent.Save psydat file.allowedUpdates:None
SettingsComponent.Save psydat file.allowedVals:[True]
SettingsComponent.Save psydat file.categ:Data
SettingsComponent.Save psydat file.hint:Save data from loops in psydat format. This is useful for python programmers to generate analysis scripts.
SettingsComponent.Save psydat file.label:Save psydat file
SettingsComponent.Save psydat file.readOnly:False
SettingsComponent.Save psydat file.staticUpdater:None
SettingsComponent.Save psydat file.updates:None
SettingsComponent.Save psydat file.val:True
SettingsComponent.Save psydat file.valType:bool
SettingsComponent.Save wide csv file.default:True
SettingsComponent.Save wide csv file.allowedTypes:[]
SettingsComponent.Save wide csv file.allowedUpdates:None
SettingsComponent.Save wide csv file.allowedVals:[]
SettingsComponent.Save wide csv file.categ:Data
SettingsComponent.Save wide csv file.hint:Save data from loops in comma-separated-value (.csv) format for maximum portability
SettingsComponent.Save wide csv file.label:Save csv file (trial-by-trial)
SettingsComponent.Save wide csv file.readOnly:False
SettingsComponent.Save wide csv file.staticUpdater:None
SettingsComponent.Save wide csv file.updates:None
SettingsComponent.Save wide csv file.val:True
SettingsComponent.Save wide csv file.valType:bool
SettingsComponent.Screen.default:1.0
SettingsComponent.Screen.allowedTypes:[]
SettingsComponent.Screen.allowedUpdates:None
SettingsComponent.Screen.allowedVals:[]
SettingsComponent.Screen.categ:Screen
SettingsComponent.Screen.hint:Which physical screen to run on (1 or 2)
SettingsComponent.Screen.label:Screen
SettingsComponent.Screen.readOnly:False
SettingsComponent.Screen.staticUpdater:None
SettingsComponent.Screen.updates:None
SettingsComponent.Screen.val:1
SettingsComponent.Screen.valType:num
SettingsComponent.Show info dlg.default:True
SettingsComponent.Show info dlg.allowedTypes:[]
SettingsComponent.Show info dlg.allowedUpdates:None
SettingsComponent.Show info dlg.allowedVals:[]
SettingsComponent.Show info dlg.categ:Basic
SettingsComponent.Show info dlg.hint:Start the experiment with a dialog to set info (e.g.participant or condition)
SettingsComponent.Show info dlg.label:Show info dialog
SettingsComponent.Show info dlg.readOnly:False
SettingsComponent.Show info dlg.staticUpdater:None
SettingsComponent.Show info dlg.updates:None
SettingsComponent.Show info dlg.val:True
SettingsComponent.Show info dlg.valType:bool
SettingsComponent.Show mouse.default:False
SettingsComponent.Show mouse.allowedTypes:[]
SettingsComponent.Show mouse.allowedUpdates:None
SettingsComponent.Show mouse.allowedVals:[]
SettingsComponent.Show mouse.categ:Screen
SettingsComponent.Show mouse.hint:Should the mouse be visible on screen?
SettingsComponent.Show mouse.label:Show mouse
SettingsComponent.Show mouse.readOnly:False
SettingsComponent.Show mouse.staticUpdater:None
SettingsComponent.Show mouse.updates:None
SettingsComponent.Show mouse.val:False
SettingsComponent.Show mouse.valType:bool
SettingsComponent.Units.default:'use prefs'
SettingsComponent.Units.allowedTypes:[]
SettingsComponent.Units.allowedUpdates:None
SettingsComponent.Units.allowedVals:['use prefs', 'deg', 'pix', 'cm', 'norm', 'height', 'degFlatPos', 'degFlat']
SettingsComponent.Units.categ:Screen
SettingsComponent.Units.hint:Units to use for window/stimulus coordinates (e.g. cm, pix, deg)
SettingsComponent.Units.label:Units
SettingsComponent.Units.readOnly:False
SettingsComponent.Units.staticUpdater:None
SettingsComponent.Units.updates:None
SettingsComponent.Units.val:use prefs
SettingsComponent.Units.valType:str
SettingsComponent.Use version.default:''
SettingsComponent.Use version.allowedTypes:[]
SettingsComponent.Use version.allowedUpdates:None
SettingsComponent.Use version.allowedVals:['latest', '1', '1.90', '1.85', '1.84', '1.83', '1.82', '1.81', '1.80', '1.79', '1.78', '1.77', '1.76', '', '1.90.2', '1.90.1', '1.90.0', '1.85.6', '1.85.4', '1.85.3', '1.85.2', '1.85.1', '1.85.0', '1.84.2', '1.84.1', '1.84.0', '1.83.04', '1.83.03', '1.83.01', '1.83.00', '1.82.01', '1.82.00', '1.81.03', '1.81.02', '1.81.01', '1.81.00', '1.80.06', '1.80.05', '1.80.03', '1.80.02', '1.80.01', '1.80.00', '1.79.00', '1.78.01', '1.78.00', '1.77.02', '1.77.01', '1.77.00', '1.76.00']
SettingsComponent.Use version.categ:Basic
SettingsComponent.Use version.hint:The version of PsychoPy to use when running the experiment.
SettingsComponent.Use version.label:Use PsychoPy version
SettingsComponent.Use version.readOnly:False
SettingsComponent.Use version.staticUpdater:None
SettingsComponent.Use version.updates:None
SettingsComponent.Use version.val:
SettingsComponent.Use version.valType:str
SettingsComponent.Window size (pixels).default:(1024, 768)
SettingsComponent.Window size (pixels).allowedTypes:[]
SettingsComponent.Window size (pixels).allowedUpdates:None
SettingsComponent.Window size (pixels).allowedVals:[]
SettingsComponent.Window size (pixels).categ:Screen
SettingsComponent.Window size (pixels).hint:Size of window (if not fullscreen)
SettingsComponent.Window size (pixels).label:Window size (pixels)
SettingsComponent.Window size (pixels).readOnly:False
SettingsComponent.Window size (pixels).staticUpdater:None
SettingsComponent.Window size (pixels).updates:None
SettingsComponent.Window size (pixels).val:(1024, 768)
SettingsComponent.Window size (pixels).valType:code
SettingsComponent.blendMode.default:'avg'
SettingsComponent.blendMode.allowedTypes:[]
SettingsComponent.blendMode.allowedUpdates:None
SettingsComponent.blendMode.allowedVals:['add', 'avg']
SettingsComponent.blendMode.categ:Screen
SettingsComponent.blendMode.hint:Should new stimuli be added or averaged with the stimuli that have been drawn already
SettingsComponent.blendMode.label:Blend mode
SettingsComponent.blendMode.readOnly:False
SettingsComponent.blendMode.staticUpdater:None
SettingsComponent.blendMode.updates:None
SettingsComponent.blendMode.val:avg
SettingsComponent.blendMode.valType:str
SettingsComponent.color.default:[0,0,0]
SettingsComponent.color.allowedTypes:[]
SettingsComponent.color.allowedUpdates:None
SettingsComponent.color.allowedVals:[]
SettingsComponent.color.categ:Screen
SettingsComponent.color.hint:Color of the screen (e.g. black, $[1.0,1.0,1.0], $variable. Right-click to bring up a color-picker.)
SettingsComponent.color.label:Color
SettingsComponent.color.readOnly:False
SettingsComponent.color.staticUpdater:None
SettingsComponent.color.updates:None
SettingsComponent.color.val:$[0,0,0]
SettingsComponent.color.valType:str
SettingsComponent.colorSpace.default:'rgb'
SettingsComponent.colorSpace.allowedTypes:[]
SettingsComponent.colorSpace.allowedUpdates:None
SettingsComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv', 'hex']
SettingsComponent.colorSpace.categ:Screen
SettingsComponent.colorSpace.hint:Needed if color is defined numerically (see PsychoPy documentation on color spaces)
SettingsComponent.colorSpace.label:Color space
SettingsComponent.colorSpace.readOnly:False
SettingsComponent.colorSpace.staticUpdater:None
SettingsComponent.colorSpace.updates:None
SettingsComponent.colorSpace.val:rgb
SettingsComponent.colorSpace.valType:str
SettingsComponent.expName.default:''
SettingsComponent.expName.allowedTypes:[]
SettingsComponent.expName.allowedUpdates:None
SettingsComponent.expName.allowedVals:[]
SettingsComponent.expName.categ:Basic
SettingsComponent.expName.hint:Name of the entire experiment (taken by default from the filename on save)
SettingsComponent.expName.label:Experiment name
SettingsComponent.expName.readOnly:False
SettingsComponent.expName.staticUpdater:None
SettingsComponent.expName.updates:None
SettingsComponent.expName.val:
SettingsComponent.expName.valType:str
SettingsComponent.exportHTML.default:'on Sync'
SettingsComponent.exportHTML.allowedTypes:[]
SettingsComponent.exportHTML.allowedUpdates:None
SettingsComponent.exportHTML.allowedVals:['on Save', 'on Sync', 'manually']
SettingsComponent.exportHTML.categ:Online
SettingsComponent.exportHTML.hint:When to export experiment to the HTML folder.
SettingsComponent.exportHTML.label:Export HTML
SettingsComponent.exportHTML.readOnly:False
SettingsComponent.exportHTML.staticUpdater:None
SettingsComponent.exportHTML.updates:None
SettingsComponent.exportHTML.val:on Sync
SettingsComponent.exportHTML.valType:str
SettingsComponent.logging level.default:exp
SettingsComponent.logging level.allowedTypes:[]
SettingsComponent.logging level.allowedUpdates:None
SettingsComponent.logging level.allowedVals:['error', 'warning', 'data', 'exp', 'info', 'debug']
SettingsComponent.logging level.categ:Data
SettingsComponent.logging level.hint:How much output do you want in the log files? ('error' is fewest messages, 'debug' is most)
SettingsComponent.logging level.label:Logging level
SettingsComponent.logging level.readOnly:False
SettingsComponent.logging level.staticUpdater:None
SettingsComponent.logging level.updates:None
SettingsComponent.logging level.val:exp
SettingsComponent.logging level.valType:code
SliderComponent.order:['name', 'size', 'pos', 'ticks', 'labels', 'granularity', 'font', 'flip', 'color', 'styles']
SliderComponent.color.default:'LightGray'
SliderComponent.color.allowedTypes:[]
SliderComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SliderComponent.color.allowedVals:[]
SliderComponent.color.categ:Appearance
SliderComponent.color.hint:Color of the lines and labels (might beoverridden by the style setting)
SliderComponent.color.label:Color
SliderComponent.color.readOnly:False
SliderComponent.color.staticUpdater:None
SliderComponent.color.updates:constant
SliderComponent.color.val:LightGray
SliderComponent.color.valType:str
SliderComponent.colorSpace.default:'rgb'
SliderComponent.colorSpace.allowedTypes:[]
SliderComponent.colorSpace.allowedUpdates:None
SliderComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
SliderComponent.colorSpace.categ:Basic
SliderComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
SliderComponent.colorSpace.label:Color space
SliderComponent.colorSpace.readOnly:False
SliderComponent.colorSpace.staticUpdater:None
SliderComponent.colorSpace.updates:constant
SliderComponent.colorSpace.val:rgb
SliderComponent.colorSpace.valType:str
SliderComponent.durationEstim.default:
SliderComponent.durationEstim.allowedTypes:[]
SliderComponent.durationEstim.allowedUpdates:None
SliderComponent.durationEstim.allowedVals:[]
SliderComponent.durationEstim.categ:Basic
SliderComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
SliderComponent.durationEstim.label:Expected duration (s)
SliderComponent.durationEstim.readOnly:False
SliderComponent.durationEstim.staticUpdater:None
SliderComponent.durationEstim.updates:None
SliderComponent.durationEstim.val:
SliderComponent.durationEstim.valType:code
SliderComponent.flip.default:False
SliderComponent.flip.allowedTypes:[]
SliderComponent.flip.allowedUpdates:[]
SliderComponent.flip.allowedVals:[]
SliderComponent.flip.categ:Appearance
SliderComponent.flip.hint:By default the labels will be on the bottom or left of the scale, but this can be flipped to the other side.
SliderComponent.flip.label:Flip
SliderComponent.flip.readOnly:False
SliderComponent.flip.staticUpdater:None
SliderComponent.flip.updates:constant
SliderComponent.flip.val:False
SliderComponent.flip.valType:bool
SliderComponent.font.default:'HelveticaBold'
SliderComponent.font.allowedTypes:[]
SliderComponent.font.allowedUpdates:['constant', 'set every repeat']
SliderComponent.font.allowedVals:[]
SliderComponent.font.categ:Appearance
SliderComponent.font.hint:Font for the labels
SliderComponent.font.label:Font
SliderComponent.font.readOnly:False
SliderComponent.font.staticUpdater:None
SliderComponent.font.updates:constant
SliderComponent.font.val:HelveticaBold
SliderComponent.font.valType:str
SliderComponent.forceEndRoutine.default:True
SliderComponent.forceEndRoutine.allowedTypes:[]
SliderComponent.forceEndRoutine.allowedUpdates:[]
SliderComponent.forceEndRoutine.allowedVals:[]
SliderComponent.forceEndRoutine.categ:Basic
SliderComponent.forceEndRoutine.hint:Should setting a rating (releasing the mouse) cause the end of the routine (e.g. trial)?
SliderComponent.forceEndRoutine.label:Force end of Routine
SliderComponent.forceEndRoutine.readOnly:False
SliderComponent.forceEndRoutine.staticUpdater:None
SliderComponent.forceEndRoutine.updates:constant
SliderComponent.forceEndRoutine.val:True
SliderComponent.forceEndRoutine.valType:bool
SliderComponent.granularity.default:0
SliderComponent.granularity.allowedTypes:[]
SliderComponent.granularity.allowedUpdates:['constant', 'set every repeat']
SliderComponent.granularity.allowedVals:[]
SliderComponent.granularity.categ:Basic
SliderComponent.granularity.hint:Specifies the minimum step size (0 for a continuous scale, 1 for integer rating scale)
SliderComponent.granularity.label:Granularity
SliderComponent.granularity.readOnly:False
SliderComponent.granularity.staticUpdater:None
SliderComponent.granularity.updates:constant
SliderComponent.granularity.val:0
SliderComponent.granularity.valType:code
SliderComponent.labels.default:[]
SliderComponent.labels.allowedTypes:[]
SliderComponent.labels.allowedUpdates:['constant', 'set every repeat']
SliderComponent.labels.allowedVals:[]
SliderComponent.labels.categ:Basic
SliderComponent.labels.hint:Labels for the tick marks on the scale, separated by commas
SliderComponent.labels.label:Labels
SliderComponent.labels.readOnly:False
SliderComponent.labels.staticUpdater:None
SliderComponent.labels.updates:constant
SliderComponent.labels.val:
SliderComponent.labels.valType:list
SliderComponent.name.default:slider
SliderComponent.name.allowedTypes:[]
SliderComponent.name.allowedUpdates:None
SliderComponent.name.allowedVals:[]
SliderComponent.name.categ:Basic
SliderComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
SliderComponent.name.label:Name
SliderComponent.name.readOnly:False
SliderComponent.name.staticUpdater:None
SliderComponent.name.val:slider
SliderComponent.name.valType:code
SliderComponent.opacity.default:1
SliderComponent.opacity.allowedTypes:[]
SliderComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SliderComponent.opacity.allowedVals:[]
SliderComponent.opacity.categ:Basic
SliderComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
SliderComponent.opacity.label:Opacity
SliderComponent.opacity.readOnly:False
SliderComponent.opacity.staticUpdater:None
SliderComponent.opacity.updates:constant
SliderComponent.opacity.val:1
SliderComponent.opacity.valType:code
SliderComponent.ori.default:0
SliderComponent.ori.allowedTypes:[]
SliderComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SliderComponent.ori.allowedVals:[]
SliderComponent.ori.categ:Basic
SliderComponent.ori.hint:Orientation of this stimulus (in deg)
SliderComponent.ori.label:Orientation
SliderComponent.ori.readOnly:False
SliderComponent.ori.staticUpdater:None
SliderComponent.ori.updates:constant
SliderComponent.ori.val:0
SliderComponent.ori.valType:code
SliderComponent.pos.default:(0, -0.4)
SliderComponent.pos.allowedTypes:[]
SliderComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SliderComponent.pos.allowedVals:[]
SliderComponent.pos.categ:Basic
SliderComponent.pos.hint:x,y position on the screen
SliderComponent.pos.label:Position [x,y]
SliderComponent.pos.readOnly:False
SliderComponent.pos.staticUpdater:None
SliderComponent.pos.updates:constant
SliderComponent.pos.val:(0, -0.4)
SliderComponent.pos.valType:code
SliderComponent.size.default:(1.0, 0.1)
SliderComponent.size.allowedTypes:[]
SliderComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SliderComponent.size.allowedVals:[]
SliderComponent.size.categ:Basic
SliderComponent.size.hint:Size on screen. e.g. (500,10) pix for horizontal,(10,500) pix for vertical
SliderComponent.size.label:Size
SliderComponent.size.readOnly:False
SliderComponent.size.staticUpdater:None
SliderComponent.size.updates:constant
SliderComponent.size.val:(1.0, 0.1)
SliderComponent.size.valType:code
SliderComponent.startEstim.default:
SliderComponent.startEstim.allowedTypes:[]
SliderComponent.startEstim.allowedUpdates:None
SliderComponent.startEstim.allowedVals:[]
SliderComponent.startEstim.categ:Basic
SliderComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
SliderComponent.startEstim.label:Expected start (s)
SliderComponent.startEstim.readOnly:False
SliderComponent.startEstim.staticUpdater:None
SliderComponent.startEstim.updates:None
SliderComponent.startEstim.val:
SliderComponent.startEstim.valType:code
SliderComponent.startType.default:'time (s)'
SliderComponent.startType.allowedTypes:[]
SliderComponent.startType.allowedUpdates:None
SliderComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
SliderComponent.startType.categ:Basic
SliderComponent.startType.hint:How do you want to define your start point?
SliderComponent.startType.label:start type
SliderComponent.startType.readOnly:False
SliderComponent.startType.staticUpdater:None
SliderComponent.startType.updates:None
SliderComponent.startType.val:time (s)
SliderComponent.startType.valType:str
SliderComponent.startVal.default:0.0
SliderComponent.startVal.allowedTypes:[]
SliderComponent.startVal.allowedUpdates:None
SliderComponent.startVal.allowedVals:[]
SliderComponent.startVal.categ:Basic
SliderComponent.startVal.hint:When does the component start?
SliderComponent.startVal.label:Start
SliderComponent.startVal.readOnly:False
SliderComponent.startVal.staticUpdater:None
SliderComponent.startVal.updates:None
SliderComponent.startVal.val:0.0
SliderComponent.startVal.valType:code
SliderComponent.stopType.default:'condition'
SliderComponent.stopType.allowedTypes:[]
SliderComponent.stopType.allowedUpdates:None
SliderComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
SliderComponent.stopType.categ:Basic
SliderComponent.stopType.hint:How do you want to define your end point?
SliderComponent.stopType.label:stop type
SliderComponent.stopType.readOnly:False
SliderComponent.stopType.staticUpdater:None
SliderComponent.stopType.updates:None
SliderComponent.stopType.val:condition
SliderComponent.stopType.valType:str
SliderComponent.stopVal.default:
SliderComponent.stopVal.allowedTypes:[]
SliderComponent.stopVal.allowedUpdates:[]
SliderComponent.stopVal.allowedVals:[]
SliderComponent.stopVal.categ:Basic
SliderComponent.stopVal.hint:When does the component end? (blank is endless)
SliderComponent.stopVal.label:Stop
SliderComponent.stopVal.readOnly:False
SliderComponent.stopVal.staticUpdater:None
SliderComponent.stopVal.updates:constant
SliderComponent.stopVal.val:
SliderComponent.stopVal.valType:code
SliderComponent.storeHistory.default:False
SliderComponent.storeHistory.allowedTypes:[]
SliderComponent.storeHistory.allowedUpdates:[]
SliderComponent.storeHistory.allowedVals:[]
SliderComponent.storeHistory.categ:Data
SliderComponent.storeHistory.hint:store the history of (selection, time)
SliderComponent.storeHistory.label:Store history
SliderComponent.storeHistory.readOnly:False
SliderComponent.storeHistory.staticUpdater:None
SliderComponent.storeHistory.updates:constant
SliderComponent.storeHistory.val:False
SliderComponent.storeHistory.valType:bool
SliderComponent.storeRating.default:True
SliderComponent.storeRating.allowedTypes:[]
SliderComponent.storeRating.allowedUpdates:[]
SliderComponent.storeRating.allowedVals:[]
SliderComponent.storeRating.categ:Data
SliderComponent.storeRating.hint:store the rating
SliderComponent.storeRating.label:Store rating
SliderComponent.storeRating.readOnly:False
SliderComponent.storeRating.staticUpdater:None
SliderComponent.storeRating.updates:constant
SliderComponent.storeRating.val:True
SliderComponent.storeRating.valType:bool
SliderComponent.storeRatingTime.default:True
SliderComponent.storeRatingTime.allowedTypes:[]
SliderComponent.storeRatingTime.allowedUpdates:[]
SliderComponent.storeRatingTime.allowedVals:[]
SliderComponent.storeRatingTime.categ:Data
SliderComponent.storeRatingTime.hint:Store the time taken to make the choice (in seconds)
SliderComponent.storeRatingTime.label:Store rating time
SliderComponent.storeRatingTime.readOnly:False
SliderComponent.storeRatingTime.staticUpdater:None
SliderComponent.storeRatingTime.updates:constant
SliderComponent.storeRatingTime.val:True
SliderComponent.storeRatingTime.valType:bool
SliderComponent.styles.default:['rating']
SliderComponent.styles.allowedTypes:[]
SliderComponent.styles.allowedUpdates:None
SliderComponent.styles.allowedVals:['slider', 'rating', 'labels45', 'whiteOnBlack', 'triangleMarker']
SliderComponent.styles.categ:Appearance
SliderComponent.styles.hint:Styles determine the appearance of the slider
SliderComponent.styles.label:Styles
SliderComponent.styles.readOnly:False
SliderComponent.styles.staticUpdater:None
SliderComponent.styles.updates:constant
SliderComponent.styles.val:['rating']
SliderComponent.styles.valType:fixedList
SliderComponent.ticks.default:(1, 2, 3, 4, 5)
SliderComponent.ticks.allowedTypes:[]
SliderComponent.ticks.allowedUpdates:['constant', 'set every repeat']
SliderComponent.ticks.allowedVals:[]
SliderComponent.ticks.categ:Basic
SliderComponent.ticks.hint:Tick positions (numerical) on the scale, separated by commas
SliderComponent.ticks.label:Ticks
SliderComponent.ticks.readOnly:False
SliderComponent.ticks.staticUpdater:None
SliderComponent.ticks.updates:constant
SliderComponent.ticks.val:(1, 2, 3, 4, 5)
SliderComponent.ticks.valType:list
SliderComponent.units.default:'from exp settings'
SliderComponent.units.allowedTypes:[]
SliderComponent.units.allowedUpdates:None
SliderComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
SliderComponent.units.categ:Basic
SliderComponent.units.hint:Units of dimensions for this stimulus
SliderComponent.units.label:Units
SliderComponent.units.readOnly:False
SliderComponent.units.staticUpdater:None
SliderComponent.units.updates:None
SliderComponent.units.val:from exp settings
SliderComponent.units.valType:str
SoundComponent.order:['sound', 'volume']
SoundComponent.durationEstim.default:
SoundComponent.durationEstim.allowedTypes:[]
SoundComponent.durationEstim.allowedUpdates:None
SoundComponent.durationEstim.allowedVals:[]
SoundComponent.durationEstim.categ:Basic
SoundComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
SoundComponent.durationEstim.label:Expected duration (s)
SoundComponent.durationEstim.readOnly:False
SoundComponent.durationEstim.staticUpdater:None
SoundComponent.durationEstim.updates:None
SoundComponent.durationEstim.val:
SoundComponent.durationEstim.valType:code
SoundComponent.name.default:sound_1
SoundComponent.name.allowedTypes:[]
SoundComponent.name.allowedUpdates:None
SoundComponent.name.allowedVals:[]
SoundComponent.name.categ:Basic
SoundComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
SoundComponent.name.label:Name
SoundComponent.name.readOnly:False
SoundComponent.name.staticUpdater:None
SoundComponent.name.val:sound_1
SoundComponent.name.valType:code
SoundComponent.sound.default:'A'
SoundComponent.sound.allowedTypes:[]
SoundComponent.sound.allowedUpdates:['constant', 'set every repeat']
SoundComponent.sound.allowedVals:[]
SoundComponent.sound.categ:Basic
SoundComponent.sound.hint:A sound can be a note name (e.g. A or Bf), a number to specify Hz (e.g. 440) or a filename
SoundComponent.sound.label:Sound
SoundComponent.sound.readOnly:False
SoundComponent.sound.staticUpdater:None
SoundComponent.sound.updates:constant
SoundComponent.sound.val:A
SoundComponent.sound.valType:str
SoundComponent.startEstim.default:
SoundComponent.startEstim.allowedTypes:[]
SoundComponent.startEstim.allowedUpdates:None
SoundComponent.startEstim.allowedVals:[]
SoundComponent.startEstim.categ:Basic
SoundComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
SoundComponent.startEstim.label:Expected start (s)
SoundComponent.startEstim.readOnly:False
SoundComponent.startEstim.staticUpdater:None
SoundComponent.startEstim.updates:None
SoundComponent.startEstim.val:
SoundComponent.startEstim.valType:code
SoundComponent.startType.default:'time (s)'
SoundComponent.startType.allowedTypes:[]
SoundComponent.startType.allowedUpdates:None
SoundComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
SoundComponent.startType.categ:Basic
SoundComponent.startType.hint:How do you want to define your start point?
SoundComponent.startType.label:start type
SoundComponent.startType.readOnly:False
SoundComponent.startType.staticUpdater:None
SoundComponent.startType.updates:None
SoundComponent.startType.val:time (s)
SoundComponent.startType.valType:str
SoundComponent.startVal.default:0.0
SoundComponent.startVal.allowedTypes:[]
SoundComponent.startVal.allowedUpdates:None
SoundComponent.startVal.allowedVals:[]
SoundComponent.startVal.categ:Basic
SoundComponent.startVal.hint:When does the component start?
SoundComponent.startVal.label:Start
SoundComponent.startVal.readOnly:False
SoundComponent.startVal.staticUpdater:None
SoundComponent.startVal.updates:None
SoundComponent.startVal.val:0.0
SoundComponent.startVal.valType:code
SoundComponent.stopType.default:'duration (s)'
SoundComponent.stopType.allowedTypes:[]
SoundComponent.stopType.allowedUpdates:None
SoundComponent.stopType.allowedVals:['duration (s)']
SoundComponent.stopType.categ:Basic
SoundComponent.stopType.hint:The maximum duration of a sound in seconds
SoundComponent.stopType.label:stop type
SoundComponent.stopType.readOnly:False
SoundComponent.stopType.staticUpdater:None
SoundComponent.stopType.updates:None
SoundComponent.stopType.val:duration (s)
SoundComponent.stopType.valType:str
SoundComponent.stopVal.default:1.0
SoundComponent.stopVal.allowedTypes:[]
SoundComponent.stopVal.allowedUpdates:[]
SoundComponent.stopVal.allowedVals:[]
SoundComponent.stopVal.categ:Basic
SoundComponent.stopVal.hint:When does the component end? (blank to use the duration of the media)
SoundComponent.stopVal.label:Stop
SoundComponent.stopVal.readOnly:False
SoundComponent.stopVal.staticUpdater:None
SoundComponent.stopVal.updates:constant
SoundComponent.stopVal.val:1.0
SoundComponent.stopVal.valType:code
SoundComponent.syncScreenRefresh.default:True
SoundComponent.syncScreenRefresh.allowedTypes:[]
SoundComponent.syncScreenRefresh.allowedUpdates:None
SoundComponent.syncScreenRefresh.allowedVals:[]
SoundComponent.syncScreenRefresh.categ:Basic
SoundComponent.syncScreenRefresh.hint:A reaction time to a sound stimulus should be based on when the screen flipped
SoundComponent.syncScreenRefresh.label:sync RT with screen
SoundComponent.syncScreenRefresh.readOnly:False
SoundComponent.syncScreenRefresh.staticUpdater:None
SoundComponent.syncScreenRefresh.updates:constant
SoundComponent.syncScreenRefresh.val:True
SoundComponent.syncScreenRefresh.valType:bool
SoundComponent.volume.default:1
SoundComponent.volume.allowedTypes:[]
SoundComponent.volume.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SoundComponent.volume.allowedVals:[]
SoundComponent.volume.categ:Basic
SoundComponent.volume.hint:The volume (in range 0 to 1)
SoundComponent.volume.label:Volume
SoundComponent.volume.readOnly:False
SoundComponent.volume.staticUpdater:None
SoundComponent.volume.updates:constant
SoundComponent.volume.val:1
SoundComponent.volume.valType:code
StaticComponent.order:['name']
StaticComponent.code.default:
StaticComponent.code.allowedTypes:[]
StaticComponent.code.allowedUpdates:None
StaticComponent.code.allowedVals:[]
StaticComponent.code.categ:Basic
StaticComponent.code.hint:Custom code to be run during the static period (after updates)
StaticComponent.code.label:Custom code
StaticComponent.code.readOnly:False
StaticComponent.code.staticUpdater:None
StaticComponent.code.updates:None
StaticComponent.code.val:
StaticComponent.code.valType:code
StaticComponent.durationEstim.default:
StaticComponent.durationEstim.allowedTypes:[]
StaticComponent.durationEstim.allowedUpdates:None
StaticComponent.durationEstim.allowedVals:[]
StaticComponent.durationEstim.categ:Basic
StaticComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
StaticComponent.durationEstim.label:
StaticComponent.durationEstim.readOnly:False
StaticComponent.durationEstim.staticUpdater:None
StaticComponent.durationEstim.updates:None
StaticComponent.durationEstim.val:
StaticComponent.durationEstim.valType:code
StaticComponent.name.default:ISI
StaticComponent.name.allowedTypes:[]
StaticComponent.name.allowedUpdates:None
StaticComponent.name.allowedVals:[]
StaticComponent.name.categ:Basic
StaticComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
StaticComponent.name.label:Name
StaticComponent.name.readOnly:False
StaticComponent.name.staticUpdater:None
StaticComponent.name.val:ISI
StaticComponent.name.valType:code
StaticComponent.startEstim.default:
StaticComponent.startEstim.allowedTypes:[]
StaticComponent.startEstim.allowedUpdates:None
StaticComponent.startEstim.allowedVals:[]
StaticComponent.startEstim.categ:Basic
StaticComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
StaticComponent.startEstim.label:
StaticComponent.startEstim.readOnly:False
StaticComponent.startEstim.staticUpdater:None
StaticComponent.startEstim.updates:None
StaticComponent.startEstim.val:
StaticComponent.startEstim.valType:code
StaticComponent.startType.default:'time (s)'
StaticComponent.startType.allowedTypes:[]
StaticComponent.startType.allowedUpdates:None
StaticComponent.startType.allowedVals:['time (s)', 'frame N']
StaticComponent.startType.categ:Basic
StaticComponent.startType.hint:How do you want to define your start point?
StaticComponent.startType.label:
StaticComponent.startType.readOnly:False
StaticComponent.startType.staticUpdater:None
StaticComponent.startType.updates:None
StaticComponent.startType.val:time (s)
StaticComponent.startType.valType:str
StaticComponent.startVal.default:0.0
StaticComponent.startVal.allowedTypes:[]
StaticComponent.startVal.allowedUpdates:None
StaticComponent.startVal.allowedVals:[]
StaticComponent.startVal.categ:Basic
StaticComponent.startVal.hint:When does the component start?
StaticComponent.startVal.label:
StaticComponent.startVal.readOnly:False
StaticComponent.startVal.staticUpdater:None
StaticComponent.startVal.updates:None
StaticComponent.startVal.val:0.0
StaticComponent.startVal.valType:code
StaticComponent.stopType.default:'duration (s)'
StaticComponent.stopType.allowedTypes:[]
StaticComponent.stopType.allowedUpdates:None
StaticComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N']
StaticComponent.stopType.categ:Basic
StaticComponent.stopType.hint:How do you want to define your end point?
StaticComponent.stopType.label:
StaticComponent.stopType.readOnly:False
StaticComponent.stopType.staticUpdater:None
StaticComponent.stopType.updates:None
StaticComponent.stopType.val:duration (s)
StaticComponent.stopType.valType:str
StaticComponent.stopVal.default:0.5
StaticComponent.stopVal.allowedTypes:[]
StaticComponent.stopVal.allowedUpdates:[]
StaticComponent.stopVal.allowedVals:[]
StaticComponent.stopVal.categ:Basic
StaticComponent.stopVal.hint:When does the component end? (blank is endless)
StaticComponent.stopVal.label:
StaticComponent.stopVal.readOnly:False
StaticComponent.stopVal.staticUpdater:None
StaticComponent.stopVal.updates:constant
StaticComponent.stopVal.val:0.5
StaticComponent.stopVal.valType:code
TextComponent.order:['name']
TextComponent.color.default:'white'
TextComponent.color.allowedTypes:[]
TextComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.color.allowedVals:[]
TextComponent.color.categ:Basic
TextComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
TextComponent.color.label:Color
TextComponent.color.readOnly:False
TextComponent.color.staticUpdater:None
TextComponent.color.updates:constant
TextComponent.color.val:white
TextComponent.color.valType:str
TextComponent.colorSpace.default:'rgb'
TextComponent.colorSpace.allowedTypes:[]
TextComponent.colorSpace.allowedUpdates:None
TextComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
TextComponent.colorSpace.categ:Advanced
TextComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
TextComponent.colorSpace.label:Color space
TextComponent.colorSpace.readOnly:False
TextComponent.colorSpace.staticUpdater:None
TextComponent.colorSpace.updates:constant
TextComponent.colorSpace.val:rgb
TextComponent.colorSpace.valType:str
TextComponent.durationEstim.default:
TextComponent.durationEstim.allowedTypes:[]
TextComponent.durationEstim.allowedUpdates:None
TextComponent.durationEstim.allowedVals:[]
TextComponent.durationEstim.categ:Basic
TextComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
TextComponent.durationEstim.label:Expected duration (s)
TextComponent.durationEstim.readOnly:False
TextComponent.durationEstim.staticUpdater:None
TextComponent.durationEstim.updates:None
TextComponent.durationEstim.val:
TextComponent.durationEstim.valType:code
TextComponent.flip.default:''
TextComponent.flip.allowedTypes:[]
TextComponent.flip.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.flip.allowedVals:[]
TextComponent.flip.categ:Advanced
TextComponent.flip.hint:horiz = left-right reversed; vert = up-down reversed; $var = variable
TextComponent.flip.label:Flip (mirror)
TextComponent.flip.readOnly:False
TextComponent.flip.staticUpdater:None
TextComponent.flip.updates:constant
TextComponent.flip.val:
TextComponent.flip.valType:str
TextComponent.font.default:'Arial'
TextComponent.font.allowedTypes:[]
TextComponent.font.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.font.allowedVals:[]
TextComponent.font.categ:Basic
TextComponent.font.hint:The font name (e.g. Comic Sans)
TextComponent.font.label:Font
TextComponent.font.readOnly:False
TextComponent.font.staticUpdater:None
TextComponent.font.updates:constant
TextComponent.font.val:Arial
TextComponent.font.valType:str
TextComponent.languageStyle.default:'LTR'
TextComponent.languageStyle.allowedTypes:[]
TextComponent.languageStyle.allowedUpdates:None
TextComponent.languageStyle.allowedVals:['LTR', 'RTL', 'Arabic']
TextComponent.languageStyle.categ:Advanced
TextComponent.languageStyle.hint:Handle right-to-left (RTL) languages and Arabic reshaping
TextComponent.languageStyle.label:Language style
TextComponent.languageStyle.readOnly:False
TextComponent.languageStyle.staticUpdater:None
TextComponent.languageStyle.updates:None
TextComponent.languageStyle.val:LTR
TextComponent.languageStyle.valType:str
TextComponent.letterHeight.default:0.1
TextComponent.letterHeight.allowedTypes:[]
TextComponent.letterHeight.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.letterHeight.allowedVals:[]
TextComponent.letterHeight.categ:Basic
TextComponent.letterHeight.hint:Specifies the height of the letter (the width is then determined by the font)
TextComponent.letterHeight.label:Letter height
TextComponent.letterHeight.readOnly:False
TextComponent.letterHeight.staticUpdater:None
TextComponent.letterHeight.updates:constant
TextComponent.letterHeight.val:0.1
TextComponent.letterHeight.valType:code
TextComponent.name.default:text
TextComponent.name.allowedTypes:[]
TextComponent.name.allowedUpdates:None
TextComponent.name.allowedVals:[]
TextComponent.name.categ:Basic
TextComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
TextComponent.name.label:Name
TextComponent.name.readOnly:False
TextComponent.name.staticUpdater:None
TextComponent.name.val:text
TextComponent.name.valType:code
TextComponent.opacity.default:1
TextComponent.opacity.allowedTypes:[]
TextComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.opacity.allowedVals:[]
TextComponent.opacity.categ:Advanced
TextComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
TextComponent.opacity.label:Opacity
TextComponent.opacity.readOnly:False
TextComponent.opacity.staticUpdater:None
TextComponent.opacity.updates:constant
TextComponent.opacity.val:1
TextComponent.opacity.valType:code
TextComponent.ori.default:0
TextComponent.ori.allowedTypes:[]
TextComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.ori.allowedVals:[]
TextComponent.ori.categ:Advanced
TextComponent.ori.hint:Orientation of this stimulus (in deg)
TextComponent.ori.label:Orientation
TextComponent.ori.readOnly:False
TextComponent.ori.staticUpdater:None
TextComponent.ori.updates:constant
TextComponent.ori.val:0
TextComponent.ori.valType:code
TextComponent.pos.default:(0, 0)
TextComponent.pos.allowedTypes:[]
TextComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.pos.allowedVals:[]
TextComponent.pos.categ:Basic
TextComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
TextComponent.pos.label:Position [x,y]
TextComponent.pos.readOnly:False
TextComponent.pos.staticUpdater:None
TextComponent.pos.updates:constant
TextComponent.pos.val:(0, 0)
TextComponent.pos.valType:code
TextComponent.startEstim.default:
TextComponent.startEstim.allowedTypes:[]
TextComponent.startEstim.allowedUpdates:None
TextComponent.startEstim.allowedVals:[]
TextComponent.startEstim.categ:Basic
TextComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
TextComponent.startEstim.label:Expected start (s)
TextComponent.startEstim.readOnly:False
TextComponent.startEstim.staticUpdater:None
TextComponent.startEstim.updates:None
TextComponent.startEstim.val:
TextComponent.startEstim.valType:code
TextComponent.startType.default:'time (s)'
TextComponent.startType.allowedTypes:[]
TextComponent.startType.allowedUpdates:None
TextComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
TextComponent.startType.categ:Basic
TextComponent.startType.hint:How do you want to define your start point?
TextComponent.startType.label:start type
TextComponent.startType.readOnly:False
TextComponent.startType.staticUpdater:None
TextComponent.startType.updates:None
TextComponent.startType.val:time (s)
TextComponent.startType.valType:str
TextComponent.startVal.default:0.0
TextComponent.startVal.allowedTypes:[]
TextComponent.startVal.allowedUpdates:None
TextComponent.startVal.allowedVals:[]
TextComponent.startVal.categ:Basic
TextComponent.startVal.hint:When does the component start?
TextComponent.startVal.label:Start
TextComponent.startVal.readOnly:False
TextComponent.startVal.staticUpdater:None
TextComponent.startVal.updates:None
TextComponent.startVal.val:0.0
TextComponent.startVal.valType:code
TextComponent.stopType.default:'duration (s)'
TextComponent.stopType.allowedTypes:[]
TextComponent.stopType.allowedUpdates:None
TextComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
TextComponent.stopType.categ:Basic
TextComponent.stopType.hint:How do you want to define your end point?
TextComponent.stopType.label:stop type
TextComponent.stopType.readOnly:False
TextComponent.stopType.staticUpdater:None
TextComponent.stopType.updates:None
TextComponent.stopType.val:duration (s)
TextComponent.stopType.valType:str
TextComponent.stopVal.default:1.0
TextComponent.stopVal.allowedTypes:[]
TextComponent.stopVal.allowedUpdates:[]
TextComponent.stopVal.allowedVals:[]
TextComponent.stopVal.categ:Basic
TextComponent.stopVal.hint:When does the component end? (blank is endless)
TextComponent.stopVal.label:Stop
TextComponent.stopVal.readOnly:False
TextComponent.stopVal.staticUpdater:None
TextComponent.stopVal.updates:constant
TextComponent.stopVal.val:1.0
TextComponent.stopVal.valType:code
TextComponent.text.default:'Any text\n\nincluding line breaks'
TextComponent.text.allowedTypes:[]
TextComponent.text.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.text.allowedVals:[]
TextComponent.text.categ:Basic
TextComponent.text.hint:The text to be displayed
TextComponent.text.label:Text
TextComponent.text.readOnly:False
TextComponent.text.staticUpdater:None
TextComponent.text.updates:constant
TextComponent.text.val:Any text

including line breaks
TextComponent.text.valType:str
TextComponent.units.default:'from exp settings'
TextComponent.units.allowedTypes:[]
TextComponent.units.allowedUpdates:None
TextComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
TextComponent.units.categ:Advanced
TextComponent.units.hint:Units of dimensions for this stimulus
TextComponent.units.label:Units
TextComponent.units.readOnly:False
TextComponent.units.staticUpdater:None
TextComponent.units.updates:None
TextComponent.units.val:from exp settings
TextComponent.units.valType:str
TextComponent.wrapWidth.default:
TextComponent.wrapWidth.allowedTypes:[]
TextComponent.wrapWidth.allowedUpdates:['constant']
TextComponent.wrapWidth.allowedVals:[]
TextComponent.wrapWidth.categ:Advanced
TextComponent.wrapWidth.hint:How wide should the text get when it wraps? (in the specified units)
TextComponent.wrapWidth.label:Wrap width
TextComponent.wrapWidth.readOnly:False
TextComponent.wrapWidth.staticUpdater:None
TextComponent.wrapWidth.updates:constant
TextComponent.wrapWidth.val:
TextComponent.wrapWidth.valType:code
UnknownComponent.order:['name']
UnknownComponent.name.default:
UnknownComponent.name.allowedTypes:[]
UnknownComponent.name.allowedUpdates:None
UnknownComponent.name.allowedVals:[]
UnknownComponent.name.categ:Basic
UnknownComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
UnknownComponent.name.label:Name
UnknownComponent.name.readOnly:False
UnknownComponent.name.staticUpdater:None
UnknownComponent.name.val:
UnknownComponent.name.valType:code
VariableComponent.order:['name', 'startExpValue', 'saveStartExp', 'startRoutineValue', 'saveStartRoutine', 'startFrameValue', 'saveFrameValue', 'saveEndRoutine', 'saveEndExp']
VariableComponent.durationEstim.default:
VariableComponent.durationEstim.allowedTypes:[]
VariableComponent.durationEstim.allowedUpdates:None
VariableComponent.durationEstim.allowedVals:[]
VariableComponent.durationEstim.categ:Basic
VariableComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
VariableComponent.durationEstim.label:Expected duration (s)
VariableComponent.durationEstim.readOnly:False
VariableComponent.durationEstim.staticUpdater:None
VariableComponent.durationEstim.updates:None
VariableComponent.durationEstim.val:
VariableComponent.durationEstim.valType:code
VariableComponent.name.default:var1
VariableComponent.name.allowedTypes:[]
VariableComponent.name.allowedUpdates:None
VariableComponent.name.allowedVals:[]
VariableComponent.name.categ:Basic
VariableComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
VariableComponent.name.label:Name
VariableComponent.name.readOnly:False
VariableComponent.name.staticUpdater:None
VariableComponent.name.val:var1
VariableComponent.name.valType:code
VariableComponent.saveEndExp.default:False
VariableComponent.saveEndExp.allowedTypes:[]
VariableComponent.saveEndExp.allowedUpdates:None
VariableComponent.saveEndExp.allowedVals:[]
VariableComponent.saveEndExp.categ:Save
VariableComponent.saveEndExp.hint:Save the experiment end value in data file.
VariableComponent.saveEndExp.label:Save exp end value
VariableComponent.saveEndExp.readOnly:False
VariableComponent.saveEndExp.staticUpdater:None
VariableComponent.saveEndExp.updates:constant
VariableComponent.saveEndExp.val:False
VariableComponent.saveEndExp.valType:bool
VariableComponent.saveEndRoutine.default:True
VariableComponent.saveEndRoutine.allowedTypes:[]
VariableComponent.saveEndRoutine.allowedUpdates:None
VariableComponent.saveEndRoutine.allowedVals:[]
VariableComponent.saveEndRoutine.categ:Save
VariableComponent.saveEndRoutine.hint:Save the routine end value in data file.
VariableComponent.saveEndRoutine.label:Save routine end value
VariableComponent.saveEndRoutine.readOnly:False
VariableComponent.saveEndRoutine.staticUpdater:None
VariableComponent.saveEndRoutine.updates:constant
VariableComponent.saveEndRoutine.val:True
VariableComponent.saveEndRoutine.valType:bool
VariableComponent.saveFrameValue.default:'never'
VariableComponent.saveFrameValue.allowedTypes:[]
VariableComponent.saveFrameValue.allowedUpdates:None
VariableComponent.saveFrameValue.allowedVals:['first', 'last', 'all', 'never']
VariableComponent.saveFrameValue.categ:Save
VariableComponent.saveFrameValue.hint:Save choice of frame value in data file.
VariableComponent.saveFrameValue.label:Save frame value
VariableComponent.saveFrameValue.readOnly:False
VariableComponent.saveFrameValue.staticUpdater:None
VariableComponent.saveFrameValue.updates:constant
VariableComponent.saveFrameValue.val:never
VariableComponent.saveFrameValue.valType:str
VariableComponent.saveStartExp.default:False
VariableComponent.saveStartExp.allowedTypes:[]
VariableComponent.saveStartExp.allowedUpdates:None
VariableComponent.saveStartExp.allowedVals:[]
VariableComponent.saveStartExp.categ:Save
VariableComponent.saveStartExp.hint:Save the experiment start value in data file.
VariableComponent.saveStartExp.label:Save exp start value
VariableComponent.saveStartExp.readOnly:False
VariableComponent.saveStartExp.staticUpdater:None
VariableComponent.saveStartExp.updates:constant
VariableComponent.saveStartExp.val:False
VariableComponent.saveStartExp.valType:bool
VariableComponent.saveStartRoutine.default:False
VariableComponent.saveStartRoutine.allowedTypes:[]
VariableComponent.saveStartRoutine.allowedUpdates:None
VariableComponent.saveStartRoutine.allowedVals:[]
VariableComponent.saveStartRoutine.categ:Save
VariableComponent.saveStartRoutine.hint:Save the routine start value in data file.
VariableComponent.saveStartRoutine.label:Save routine start value
VariableComponent.saveStartRoutine.readOnly:False
VariableComponent.saveStartRoutine.staticUpdater:None
VariableComponent.saveStartRoutine.updates:constant
VariableComponent.saveStartRoutine.val:False
VariableComponent.saveStartRoutine.valType:bool
VariableComponent.startEstim.default:
VariableComponent.startEstim.allowedTypes:[]
VariableComponent.startEstim.allowedUpdates:None
VariableComponent.startEstim.allowedVals:[]
VariableComponent.startEstim.categ:Basic
VariableComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
VariableComponent.startEstim.label:Expected start (s)
VariableComponent.startEstim.readOnly:False
VariableComponent.startEstim.staticUpdater:None
VariableComponent.startEstim.updates:None
VariableComponent.startEstim.val:
VariableComponent.startEstim.valType:code
VariableComponent.startExpValue.default:
VariableComponent.startExpValue.allowedTypes:[]
VariableComponent.startExpValue.allowedUpdates:None
VariableComponent.startExpValue.allowedVals:[]
VariableComponent.startExpValue.categ:Basic
VariableComponent.startExpValue.hint:The start value. A variable can be set to any value.
VariableComponent.startExpValue.label:Experiment start value
VariableComponent.startExpValue.readOnly:False
VariableComponent.startExpValue.staticUpdater:None
VariableComponent.startExpValue.updates:constant
VariableComponent.startExpValue.val:
VariableComponent.startExpValue.valType:code
VariableComponent.startFrameValue.default:
VariableComponent.startFrameValue.allowedTypes:[]
VariableComponent.startFrameValue.allowedUpdates:None
VariableComponent.startFrameValue.allowedVals:[]
VariableComponent.startFrameValue.categ:Basic
VariableComponent.startFrameValue.hint:Set the value for the beginning of every screen refresh.
VariableComponent.startFrameValue.label:Frame start value
VariableComponent.startFrameValue.readOnly:False
VariableComponent.startFrameValue.staticUpdater:None
VariableComponent.startFrameValue.updates:None
VariableComponent.startFrameValue.val:
VariableComponent.startFrameValue.valType:code
VariableComponent.startRoutineValue.default:
VariableComponent.startRoutineValue.allowedTypes:[]
VariableComponent.startRoutineValue.allowedUpdates:None
VariableComponent.startRoutineValue.allowedVals:[]
VariableComponent.startRoutineValue.categ:Basic
VariableComponent.startRoutineValue.hint:Set the value for the beginning of each routine.
VariableComponent.startRoutineValue.label:Routine start value
VariableComponent.startRoutineValue.readOnly:False
VariableComponent.startRoutineValue.staticUpdater:None
VariableComponent.startRoutineValue.updates:constant
VariableComponent.startRoutineValue.val:
VariableComponent.startRoutineValue.valType:code
VariableComponent.startType.default:'time (s)'
VariableComponent.startType.allowedTypes:[]
VariableComponent.startType.allowedUpdates:None
VariableComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
VariableComponent.startType.categ:Basic
VariableComponent.startType.hint:How do you want to define your start point?
VariableComponent.startType.label:start type
VariableComponent.startType.readOnly:False
VariableComponent.startType.staticUpdater:None
VariableComponent.startType.updates:None
VariableComponent.startType.val:time (s)
VariableComponent.startType.valType:str
VariableComponent.startVal.default:
VariableComponent.startVal.allowedTypes:[]
VariableComponent.startVal.allowedUpdates:None
VariableComponent.startVal.allowedVals:[]
VariableComponent.startVal.categ:Basic
VariableComponent.startVal.hint:When does the component start?
VariableComponent.startVal.label:Start
VariableComponent.startVal.readOnly:False
VariableComponent.startVal.staticUpdater:None
VariableComponent.startVal.updates:None
VariableComponent.startVal.val:
VariableComponent.startVal.valType:code
VariableComponent.stopType.default:'duration (s)'
VariableComponent.stopType.allowedTypes:[]
VariableComponent.stopType.allowedUpdates:None
VariableComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
VariableComponent.stopType.categ:Basic
VariableComponent.stopType.hint:How do you want to define your end point?
VariableComponent.stopType.label:stop type
VariableComponent.stopType.readOnly:False
VariableComponent.stopType.staticUpdater:None
VariableComponent.stopType.updates:None
VariableComponent.stopType.val:duration (s)
VariableComponent.stopType.valType:str
VariableComponent.stopVal.default:
VariableComponent.stopVal.allowedTypes:[]
VariableComponent.stopVal.allowedUpdates:[]
VariableComponent.stopVal.allowedVals:[]
VariableComponent.stopVal.categ:Basic
VariableComponent.stopVal.hint:When does the component end? (blank is endless)
VariableComponent.stopVal.label:Stop
VariableComponent.stopVal.readOnly:False
VariableComponent.stopVal.staticUpdater:None
VariableComponent.stopVal.updates:constant
VariableComponent.stopVal.val:
VariableComponent.stopVal.valType:code
cedrusButtonBoxComponent.order:['forceEndRoutine', 'allowedKeys', 'store', 'storeCorrect', 'correctAns']
cedrusButtonBoxComponent.allowedKeys.default:
cedrusButtonBoxComponent.allowedKeys.allowedTypes:[]
cedrusButtonBoxComponent.allowedKeys.allowedUpdates:['constant', 'set every repeat']
cedrusButtonBoxComponent.allowedKeys.allowedVals:[]
cedrusButtonBoxComponent.allowedKeys.categ:Basic
cedrusButtonBoxComponent.allowedKeys.hint:Keys to be read (blank for any) or key numbers separated by commas
cedrusButtonBoxComponent.allowedKeys.label:Allowed keys
cedrusButtonBoxComponent.allowedKeys.readOnly:False
cedrusButtonBoxComponent.allowedKeys.staticUpdater:None
cedrusButtonBoxComponent.allowedKeys.updates:constant
cedrusButtonBoxComponent.allowedKeys.val:
cedrusButtonBoxComponent.allowedKeys.valType:code
cedrusButtonBoxComponent.correctAns.default:
cedrusButtonBoxComponent.correctAns.allowedTypes:[]
cedrusButtonBoxComponent.correctAns.allowedUpdates:None
cedrusButtonBoxComponent.correctAns.allowedVals:[]
cedrusButtonBoxComponent.correctAns.categ:Basic
cedrusButtonBoxComponent.correctAns.hint:What is the 'correct' response? NB, buttons are labelled 0 to 6 on a 7-button box. Enter 'None' (no quotes) if withholding a response is correct. Might be helpful to add a correctAns column and use $correctAns to compare to the key press.
cedrusButtonBoxComponent.correctAns.label:Correct answer
cedrusButtonBoxComponent.correctAns.readOnly:False
cedrusButtonBoxComponent.correctAns.staticUpdater:None
cedrusButtonBoxComponent.correctAns.updates:constant
cedrusButtonBoxComponent.correctAns.val:
cedrusButtonBoxComponent.correctAns.valType:code
cedrusButtonBoxComponent.deviceNumber.default:0
cedrusButtonBoxComponent.deviceNumber.allowedTypes:[]
cedrusButtonBoxComponent.deviceNumber.allowedUpdates:[]
cedrusButtonBoxComponent.deviceNumber.allowedVals:[]
cedrusButtonBoxComponent.deviceNumber.categ:Advanced
cedrusButtonBoxComponent.deviceNumber.hint:Device number, if you have multiple devices which one do you want (0, 1, 2...)
cedrusButtonBoxComponent.deviceNumber.label:Device number
cedrusButtonBoxComponent.deviceNumber.readOnly:False
cedrusButtonBoxComponent.deviceNumber.staticUpdater:None
cedrusButtonBoxComponent.deviceNumber.updates:constant
cedrusButtonBoxComponent.deviceNumber.val:0
cedrusButtonBoxComponent.deviceNumber.valType:code
cedrusButtonBoxComponent.discard previous.default:True
cedrusButtonBoxComponent.discard previous.allowedTypes:[]
cedrusButtonBoxComponent.discard previous.allowedUpdates:None
cedrusButtonBoxComponent.discard previous.allowedVals:[]
cedrusButtonBoxComponent.discard previous.categ:Basic
cedrusButtonBoxComponent.discard previous.hint:Do you want to discard all responses occuring before the onset of this component?
cedrusButtonBoxComponent.discard previous.label:Discard previous
cedrusButtonBoxComponent.discard previous.readOnly:False
cedrusButtonBoxComponent.discard previous.staticUpdater:None
cedrusButtonBoxComponent.discard previous.updates:constant
cedrusButtonBoxComponent.discard previous.val:True
cedrusButtonBoxComponent.discard previous.valType:bool
cedrusButtonBoxComponent.durationEstim.default:
cedrusButtonBoxComponent.durationEstim.allowedTypes:[]
cedrusButtonBoxComponent.durationEstim.allowedUpdates:None
cedrusButtonBoxComponent.durationEstim.allowedVals:[]
cedrusButtonBoxComponent.durationEstim.categ:Basic
cedrusButtonBoxComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
cedrusButtonBoxComponent.durationEstim.label:Expected duration (s)
cedrusButtonBoxComponent.durationEstim.readOnly:False
cedrusButtonBoxComponent.durationEstim.staticUpdater:None
cedrusButtonBoxComponent.durationEstim.updates:None
cedrusButtonBoxComponent.durationEstim.val:
cedrusButtonBoxComponent.durationEstim.valType:code
cedrusButtonBoxComponent.forceEndRoutine.default:True
cedrusButtonBoxComponent.forceEndRoutine.allowedTypes:[]
cedrusButtonBoxComponent.forceEndRoutine.allowedUpdates:None
cedrusButtonBoxComponent.forceEndRoutine.allowedVals:[]
cedrusButtonBoxComponent.forceEndRoutine.categ:Basic
cedrusButtonBoxComponent.forceEndRoutine.hint:Should a response force the end of the Routine (e.g end the trial)?
cedrusButtonBoxComponent.forceEndRoutine.label:Force end of Routine
cedrusButtonBoxComponent.forceEndRoutine.readOnly:False
cedrusButtonBoxComponent.forceEndRoutine.staticUpdater:None
cedrusButtonBoxComponent.forceEndRoutine.updates:constant
cedrusButtonBoxComponent.forceEndRoutine.val:True
cedrusButtonBoxComponent.forceEndRoutine.valType:bool
cedrusButtonBoxComponent.name.default:buttonBox
cedrusButtonBoxComponent.name.allowedTypes:[]
cedrusButtonBoxComponent.name.allowedUpdates:None
cedrusButtonBoxComponent.name.allowedVals:[]
cedrusButtonBoxComponent.name.categ:Basic
cedrusButtonBoxComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
cedrusButtonBoxComponent.name.label:Name
cedrusButtonBoxComponent.name.readOnly:False
cedrusButtonBoxComponent.name.staticUpdater:None
cedrusButtonBoxComponent.name.val:buttonBox
cedrusButtonBoxComponent.name.valType:code
cedrusButtonBoxComponent.startEstim.default:
cedrusButtonBoxComponent.startEstim.allowedTypes:[]
cedrusButtonBoxComponent.startEstim.allowedUpdates:None
cedrusButtonBoxComponent.startEstim.allowedVals:[]
cedrusButtonBoxComponent.startEstim.categ:Basic
cedrusButtonBoxComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
cedrusButtonBoxComponent.startEstim.label:Expected start (s)
cedrusButtonBoxComponent.startEstim.readOnly:False
cedrusButtonBoxComponent.startEstim.staticUpdater:None
cedrusButtonBoxComponent.startEstim.updates:None
cedrusButtonBoxComponent.startEstim.val:
cedrusButtonBoxComponent.startEstim.valType:code
cedrusButtonBoxComponent.startType.default:'time (s)'
cedrusButtonBoxComponent.startType.allowedTypes:[]
cedrusButtonBoxComponent.startType.allowedUpdates:None
cedrusButtonBoxComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
cedrusButtonBoxComponent.startType.categ:Basic
cedrusButtonBoxComponent.startType.hint:How do you want to define your start point?
cedrusButtonBoxComponent.startType.label:start type
cedrusButtonBoxComponent.startType.readOnly:False
cedrusButtonBoxComponent.startType.staticUpdater:None
cedrusButtonBoxComponent.startType.updates:None
cedrusButtonBoxComponent.startType.val:time (s)
cedrusButtonBoxComponent.startType.valType:str
cedrusButtonBoxComponent.startVal.default:0.0
cedrusButtonBoxComponent.startVal.allowedTypes:[]
cedrusButtonBoxComponent.startVal.allowedUpdates:None
cedrusButtonBoxComponent.startVal.allowedVals:[]
cedrusButtonBoxComponent.startVal.categ:Basic
cedrusButtonBoxComponent.startVal.hint:When does the component start?
cedrusButtonBoxComponent.startVal.label:Start
cedrusButtonBoxComponent.startVal.readOnly:False
cedrusButtonBoxComponent.startVal.staticUpdater:None
cedrusButtonBoxComponent.startVal.updates:None
cedrusButtonBoxComponent.startVal.val:0.0
cedrusButtonBoxComponent.startVal.valType:code
cedrusButtonBoxComponent.stopType.default:'duration (s)'
cedrusButtonBoxComponent.stopType.allowedTypes:[]
cedrusButtonBoxComponent.stopType.allowedUpdates:None
cedrusButtonBoxComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
cedrusButtonBoxComponent.stopType.categ:Basic
cedrusButtonBoxComponent.stopType.hint:How do you want to define your end point?
cedrusButtonBoxComponent.stopType.label:stop type
cedrusButtonBoxComponent.stopType.readOnly:False
cedrusButtonBoxComponent.stopType.staticUpdater:None
cedrusButtonBoxComponent.stopType.updates:None
cedrusButtonBoxComponent.stopType.val:duration (s)
cedrusButtonBoxComponent.stopType.valType:str
cedrusButtonBoxComponent.stopVal.default:1.0
cedrusButtonBoxComponent.stopVal.allowedTypes:[]
cedrusButtonBoxComponent.stopVal.allowedUpdates:[]
cedrusButtonBoxComponent.stopVal.allowedVals:[]
cedrusButtonBoxComponent.stopVal.categ:Basic
cedrusButtonBoxComponent.stopVal.hint:When does the component end? (blank is endless)
cedrusButtonBoxComponent.stopVal.label:Stop
cedrusButtonBoxComponent.stopVal.readOnly:False
cedrusButtonBoxComponent.stopVal.staticUpdater:None
cedrusButtonBoxComponent.stopVal.updates:constant
cedrusButtonBoxComponent.stopVal.val:1.0
cedrusButtonBoxComponent.stopVal.valType:code
cedrusButtonBoxComponent.store.default:'first key'
cedrusButtonBoxComponent.store.allowedTypes:[]
cedrusButtonBoxComponent.store.allowedUpdates:None
cedrusButtonBoxComponent.store.allowedVals:['last key', 'first key', 'all keys', 'nothing']
cedrusButtonBoxComponent.store.categ:Basic
cedrusButtonBoxComponent.store.hint:Choose which (if any) responses to store at the end of a trial
cedrusButtonBoxComponent.store.label:Store
cedrusButtonBoxComponent.store.readOnly:False
cedrusButtonBoxComponent.store.staticUpdater:None
cedrusButtonBoxComponent.store.updates:constant
cedrusButtonBoxComponent.store.val:first key
cedrusButtonBoxComponent.store.valType:str
cedrusButtonBoxComponent.storeCorrect.default:False
cedrusButtonBoxComponent.storeCorrect.allowedTypes:[]
cedrusButtonBoxComponent.storeCorrect.allowedUpdates:None
cedrusButtonBoxComponent.storeCorrect.allowedVals:[]
cedrusButtonBoxComponent.storeCorrect.categ:Basic
cedrusButtonBoxComponent.storeCorrect.hint:Do you want to save the response as correct/incorrect?
cedrusButtonBoxComponent.storeCorrect.label:Store correct
cedrusButtonBoxComponent.storeCorrect.readOnly:False
cedrusButtonBoxComponent.storeCorrect.staticUpdater:None
cedrusButtonBoxComponent.storeCorrect.updates:constant
cedrusButtonBoxComponent.storeCorrect.val:False
cedrusButtonBoxComponent.storeCorrect.valType:bool
cedrusButtonBoxComponent.syncScreenRefresh.default:True
cedrusButtonBoxComponent.syncScreenRefresh.allowedTypes:[]
cedrusButtonBoxComponent.syncScreenRefresh.allowedUpdates:None
cedrusButtonBoxComponent.syncScreenRefresh.allowedVals:[]
cedrusButtonBoxComponent.syncScreenRefresh.categ:Basic
cedrusButtonBoxComponent.syncScreenRefresh.hint:A reaction time to a visual stimulus should be based on when the screen flipped
cedrusButtonBoxComponent.syncScreenRefresh.label:sync RT with screen
cedrusButtonBoxComponent.syncScreenRefresh.readOnly:False
cedrusButtonBoxComponent.syncScreenRefresh.staticUpdater:None
cedrusButtonBoxComponent.syncScreenRefresh.updates:constant
cedrusButtonBoxComponent.syncScreenRefresh.val:True
cedrusButtonBoxComponent.syncScreenRefresh.valType:bool
cedrusButtonBoxComponent.useBoxTimer.default:False
cedrusButtonBoxComponent.useBoxTimer.allowedTypes:[]
cedrusButtonBoxComponent.useBoxTimer.allowedUpdates:[]
cedrusButtonBoxComponent.useBoxTimer.allowedVals:[True, False]
cedrusButtonBoxComponent.useBoxTimer.categ:Advanced
cedrusButtonBoxComponent.useBoxTimer.hint:According to Cedrus the response box timer has a drift - use with caution!
cedrusButtonBoxComponent.useBoxTimer.label:Use box timer
cedrusButtonBoxComponent.useBoxTimer.readOnly:False
cedrusButtonBoxComponent.useBoxTimer.staticUpdater:None
cedrusButtonBoxComponent.useBoxTimer.updates:constant
cedrusButtonBoxComponent.useBoxTimer.val:False
cedrusButtonBoxComponent.useBoxTimer.valType:bool
ioLabsButtonBoxComponent.order:['forceEndRoutine', 'active', 'lights', 'store', 'storeCorrect', 'correctAns']
ioLabsButtonBoxComponent.active.default:(0,1,2,3,4,5,6,7)
ioLabsButtonBoxComponent.active.allowedTypes:[]
ioLabsButtonBoxComponent.active.allowedUpdates:['constant', 'set every repeat']
ioLabsButtonBoxComponent.active.allowedVals:[]
ioLabsButtonBoxComponent.active.categ:Basic
ioLabsButtonBoxComponent.active.hint:Active buttons, such as '1,6', '(1,2,5,6)' or '0' (without quotes)
ioLabsButtonBoxComponent.active.label:Active buttons
ioLabsButtonBoxComponent.active.readOnly:False
ioLabsButtonBoxComponent.active.staticUpdater:None
ioLabsButtonBoxComponent.active.updates:constant
ioLabsButtonBoxComponent.active.val:(0,1,2,3,4,5,6,7)
ioLabsButtonBoxComponent.active.valType:code
ioLabsButtonBoxComponent.correctAns.default:'0'
ioLabsButtonBoxComponent.correctAns.allowedTypes:[]
ioLabsButtonBoxComponent.correctAns.allowedUpdates:None
ioLabsButtonBoxComponent.correctAns.allowedVals:[]
ioLabsButtonBoxComponent.correctAns.categ:Basic
ioLabsButtonBoxComponent.correctAns.hint:What is the 'correct' response? NB, buttons are labelled 0 to 7 on a 8-button box. Enter 'None' (no quotes) if withholding a response is correct. Might be helpful to add a correctAns column and use $correctAns to compare to the key press.
ioLabsButtonBoxComponent.correctAns.label:Correct answer
ioLabsButtonBoxComponent.correctAns.readOnly:False
ioLabsButtonBoxComponent.correctAns.staticUpdater:None
ioLabsButtonBoxComponent.correctAns.updates:constant
ioLabsButtonBoxComponent.correctAns.val:0
ioLabsButtonBoxComponent.correctAns.valType:str
ioLabsButtonBoxComponent.discard previous.default:True
ioLabsButtonBoxComponent.discard previous.allowedTypes:[]
ioLabsButtonBoxComponent.discard previous.allowedUpdates:None
ioLabsButtonBoxComponent.discard previous.allowedVals:[]
ioLabsButtonBoxComponent.discard previous.categ:Basic
ioLabsButtonBoxComponent.discard previous.hint:Do you want to discard all responses occuring before the onset of this component?
ioLabsButtonBoxComponent.discard previous.label:Discard previous
ioLabsButtonBoxComponent.discard previous.readOnly:False
ioLabsButtonBoxComponent.discard previous.staticUpdater:None
ioLabsButtonBoxComponent.discard previous.updates:constant
ioLabsButtonBoxComponent.discard previous.val:True
ioLabsButtonBoxComponent.discard previous.valType:bool
ioLabsButtonBoxComponent.durationEstim.default:
ioLabsButtonBoxComponent.durationEstim.allowedTypes:[]
ioLabsButtonBoxComponent.durationEstim.allowedUpdates:None
ioLabsButtonBoxComponent.durationEstim.allowedVals:[]
ioLabsButtonBoxComponent.durationEstim.categ:Basic
ioLabsButtonBoxComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
ioLabsButtonBoxComponent.durationEstim.label:Expected duration (s)
ioLabsButtonBoxComponent.durationEstim.readOnly:False
ioLabsButtonBoxComponent.durationEstim.staticUpdater:None
ioLabsButtonBoxComponent.durationEstim.updates:None
ioLabsButtonBoxComponent.durationEstim.val:
ioLabsButtonBoxComponent.durationEstim.valType:code
ioLabsButtonBoxComponent.forceEndRoutine.default:True
ioLabsButtonBoxComponent.forceEndRoutine.allowedTypes:[]
ioLabsButtonBoxComponent.forceEndRoutine.allowedUpdates:None
ioLabsButtonBoxComponent.forceEndRoutine.allowedVals:[]
ioLabsButtonBoxComponent.forceEndRoutine.categ:Basic
ioLabsButtonBoxComponent.forceEndRoutine.hint:Should a response force the end of the Routine (e.g end the trial)?
ioLabsButtonBoxComponent.forceEndRoutine.label:Force end of Routine
ioLabsButtonBoxComponent.forceEndRoutine.readOnly:False
ioLabsButtonBoxComponent.forceEndRoutine.staticUpdater:None
ioLabsButtonBoxComponent.forceEndRoutine.updates:constant
ioLabsButtonBoxComponent.forceEndRoutine.val:True
ioLabsButtonBoxComponent.forceEndRoutine.valType:bool
ioLabsButtonBoxComponent.lights.default:True
ioLabsButtonBoxComponent.lights.allowedTypes:[]
ioLabsButtonBoxComponent.lights.allowedUpdates:[]
ioLabsButtonBoxComponent.lights.allowedVals:[]
ioLabsButtonBoxComponent.lights.categ:Basic
ioLabsButtonBoxComponent.lights.hint:Turn ON the lights for the active buttons?
ioLabsButtonBoxComponent.lights.label:Lights
ioLabsButtonBoxComponent.lights.readOnly:False
ioLabsButtonBoxComponent.lights.staticUpdater:None
ioLabsButtonBoxComponent.lights.updates:constant
ioLabsButtonBoxComponent.lights.val:True
ioLabsButtonBoxComponent.lights.valType:bool
ioLabsButtonBoxComponent.lights off.default:False
ioLabsButtonBoxComponent.lights off.allowedTypes:[]
ioLabsButtonBoxComponent.lights off.allowedUpdates:[]
ioLabsButtonBoxComponent.lights off.allowedVals:[]
ioLabsButtonBoxComponent.lights off.categ:Basic
ioLabsButtonBoxComponent.lights off.hint:Turn OFF all lights at the end of each routine?
ioLabsButtonBoxComponent.lights off.label:Lights off
ioLabsButtonBoxComponent.lights off.readOnly:False
ioLabsButtonBoxComponent.lights off.staticUpdater:None
ioLabsButtonBoxComponent.lights off.updates:constant
ioLabsButtonBoxComponent.lights off.val:False
ioLabsButtonBoxComponent.lights off.valType:bool
ioLabsButtonBoxComponent.name.default:bbox
ioLabsButtonBoxComponent.name.allowedTypes:[]
ioLabsButtonBoxComponent.name.allowedUpdates:None
ioLabsButtonBoxComponent.name.allowedVals:[]
ioLabsButtonBoxComponent.name.categ:Basic
ioLabsButtonBoxComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
ioLabsButtonBoxComponent.name.label:Name
ioLabsButtonBoxComponent.name.readOnly:False
ioLabsButtonBoxComponent.name.staticUpdater:None
ioLabsButtonBoxComponent.name.val:bbox
ioLabsButtonBoxComponent.name.valType:code
ioLabsButtonBoxComponent.startEstim.default:
ioLabsButtonBoxComponent.startEstim.allowedTypes:[]
ioLabsButtonBoxComponent.startEstim.allowedUpdates:None
ioLabsButtonBoxComponent.startEstim.allowedVals:[]
ioLabsButtonBoxComponent.startEstim.categ:Basic
ioLabsButtonBoxComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
ioLabsButtonBoxComponent.startEstim.label:Expected start (s)
ioLabsButtonBoxComponent.startEstim.readOnly:False
ioLabsButtonBoxComponent.startEstim.staticUpdater:None
ioLabsButtonBoxComponent.startEstim.updates:None
ioLabsButtonBoxComponent.startEstim.val:
ioLabsButtonBoxComponent.startEstim.valType:code
ioLabsButtonBoxComponent.startType.default:'time (s)'
ioLabsButtonBoxComponent.startType.allowedTypes:[]
ioLabsButtonBoxComponent.startType.allowedUpdates:None
ioLabsButtonBoxComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
ioLabsButtonBoxComponent.startType.categ:Basic
ioLabsButtonBoxComponent.startType.hint:How do you want to define your start point?
ioLabsButtonBoxComponent.startType.label:start type
ioLabsButtonBoxComponent.startType.readOnly:False
ioLabsButtonBoxComponent.startType.staticUpdater:None
ioLabsButtonBoxComponent.startType.updates:None
ioLabsButtonBoxComponent.startType.val:time (s)
ioLabsButtonBoxComponent.startType.valType:str
ioLabsButtonBoxComponent.startVal.default:0.0
ioLabsButtonBoxComponent.startVal.allowedTypes:[]
ioLabsButtonBoxComponent.startVal.allowedUpdates:None
ioLabsButtonBoxComponent.startVal.allowedVals:[]
ioLabsButtonBoxComponent.startVal.categ:Basic
ioLabsButtonBoxComponent.startVal.hint:When does the component start?
ioLabsButtonBoxComponent.startVal.label:Start
ioLabsButtonBoxComponent.startVal.readOnly:False
ioLabsButtonBoxComponent.startVal.staticUpdater:None
ioLabsButtonBoxComponent.startVal.updates:None
ioLabsButtonBoxComponent.startVal.val:0.0
ioLabsButtonBoxComponent.startVal.valType:code
ioLabsButtonBoxComponent.stopType.default:'duration (s)'
ioLabsButtonBoxComponent.stopType.allowedTypes:[]
ioLabsButtonBoxComponent.stopType.allowedUpdates:None
ioLabsButtonBoxComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
ioLabsButtonBoxComponent.stopType.categ:Basic
ioLabsButtonBoxComponent.stopType.hint:How do you want to define your end point?
ioLabsButtonBoxComponent.stopType.label:stop type
ioLabsButtonBoxComponent.stopType.readOnly:False
ioLabsButtonBoxComponent.stopType.staticUpdater:None
ioLabsButtonBoxComponent.stopType.updates:None
ioLabsButtonBoxComponent.stopType.val:duration (s)
ioLabsButtonBoxComponent.stopType.valType:str
ioLabsButtonBoxComponent.stopVal.default:1.0
ioLabsButtonBoxComponent.stopVal.allowedTypes:[]
ioLabsButtonBoxComponent.stopVal.allowedUpdates:[]
ioLabsButtonBoxComponent.stopVal.allowedVals:[]
ioLabsButtonBoxComponent.stopVal.categ:Basic
ioLabsButtonBoxComponent.stopVal.hint:When does the component end? (blank is endless)
ioLabsButtonBoxComponent.stopVal.label:Stop
ioLabsButtonBoxComponent.stopVal.readOnly:False
ioLabsButtonBoxComponent.stopVal.staticUpdater:None
ioLabsButtonBoxComponent.stopVal.updates:constant
ioLabsButtonBoxComponent.stopVal.val:1.0
ioLabsButtonBoxComponent.stopVal.valType:code
ioLabsButtonBoxComponent.store.default:'first button'
ioLabsButtonBoxComponent.store.allowedTypes:[]
ioLabsButtonBoxComponent.store.allowedUpdates:None
ioLabsButtonBoxComponent.store.allowedVals:['last button', 'first button', 'all buttons', 'nothing']
ioLabsButtonBoxComponent.store.categ:Basic
ioLabsButtonBoxComponent.store.hint:Choose which (if any) responses to store at end of a trial
ioLabsButtonBoxComponent.store.label:Store
ioLabsButtonBoxComponent.store.readOnly:False
ioLabsButtonBoxComponent.store.staticUpdater:None
ioLabsButtonBoxComponent.store.updates:constant
ioLabsButtonBoxComponent.store.val:first button
ioLabsButtonBoxComponent.store.valType:str
ioLabsButtonBoxComponent.storeCorrect.default:False
ioLabsButtonBoxComponent.storeCorrect.allowedTypes:[]
ioLabsButtonBoxComponent.storeCorrect.allowedUpdates:None
ioLabsButtonBoxComponent.storeCorrect.allowedVals:[]
ioLabsButtonBoxComponent.storeCorrect.categ:Basic
ioLabsButtonBoxComponent.storeCorrect.hint:Do you want to save the response as correct/incorrect?
ioLabsButtonBoxComponent.storeCorrect.label:Store correct
ioLabsButtonBoxComponent.storeCorrect.readOnly:False
ioLabsButtonBoxComponent.storeCorrect.staticUpdater:None
ioLabsButtonBoxComponent.storeCorrect.updates:constant
ioLabsButtonBoxComponent.storeCorrect.val:False
ioLabsButtonBoxComponent.storeCorrect.valType:bool
ioLabsButtonBoxComponent.syncScreenRefresh.default:True
ioLabsButtonBoxComponent.syncScreenRefresh.allowedTypes:[]
ioLabsButtonBoxComponent.syncScreenRefresh.allowedUpdates:None
ioLabsButtonBoxComponent.syncScreenRefresh.allowedVals:[]
ioLabsButtonBoxComponent.syncScreenRefresh.categ:Basic
ioLabsButtonBoxComponent.syncScreenRefresh.hint:A reaction time to a visual stimulus should be based on when the screen flipped
ioLabsButtonBoxComponent.syncScreenRefresh.label:sync RT with screen
ioLabsButtonBoxComponent.syncScreenRefresh.readOnly:False
ioLabsButtonBoxComponent.syncScreenRefresh.staticUpdater:None
ioLabsButtonBoxComponent.syncScreenRefresh.updates:constant
ioLabsButtonBoxComponent.syncScreenRefresh.val:True
ioLabsButtonBoxComponent.syncScreenRefresh.valType:bool
